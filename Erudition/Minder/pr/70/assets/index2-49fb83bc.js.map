{"version":3,"file":"index2-49fb83bc.js","sources":["../../node_modules/.pnpm/@ionic+core@7.0.0/node_modules/@ionic/core/components/index2.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\n\nconst addEventListener = (el, // TODO(FW-2832): type\neventName, callback, opts) => {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  const listenerOpts = supportsPassive(el)\n    ? {\n      capture: !!opts.capture,\n      passive: !!opts.passive,\n    }\n    : !!opts.capture;\n  let add;\n  let remove;\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  }\n  else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n  el[add](eventName, callback, listenerOpts);\n  return () => {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\nconst supportsPassive = (node) => {\n  if (_sPassive === undefined) {\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get: () => {\n          _sPassive = true;\n        },\n      });\n      node.addEventListener('optsTest', () => {\n        return;\n      }, opts);\n    }\n    catch (e) {\n      _sPassive = false;\n    }\n  }\n  return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\n// TODO(FW-2832): types\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n  let rmTouchStart;\n  let rmTouchMove;\n  let rmTouchEnd;\n  let rmTouchCancel;\n  let rmMouseStart;\n  let rmMouseMove;\n  let rmMouseUp;\n  let lastTouchEvent = 0;\n  const handleTouchStart = (ev) => {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n    /**\n     * Events are dispatched on the element that is tapped and bubble up to\n     * the reference element in the gesture. In the event that the element this\n     * event was first dispatched on is removed from the DOM, the event will no\n     * longer bubble up to our reference element. This leaves the gesture in an\n     * unusable state. To account for this, the touchend and touchcancel listeners\n     * should be added to the event target so that they still fire even if the target\n     * is removed from the DOM.\n     */\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n    }\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n  const handleMouseDown = (ev) => {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n  const handleTouchEnd = (ev) => {\n    stopTouch();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const handleMouseUp = (ev) => {\n    stopMouse();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const stopTouch = () => {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n  const stopMouse = () => {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n    rmMouseMove = rmMouseUp = undefined;\n  };\n  const stop = () => {\n    stopTouch();\n    stopMouse();\n  };\n  const enable = (isEnabled = true) => {\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    }\n    else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n  const destroy = () => {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n  return {\n    enable,\n    stop,\n    destroy,\n  };\n};\nconst getDocument = (node) => {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n  const radians = maxAngle * (Math.PI / 180);\n  const isDirX = direction === 'x';\n  const maxCosine = Math.cos(radians);\n  const threshold = thresh * thresh;\n  let startX = 0;\n  let startY = 0;\n  let dirty = false;\n  let isPan = 0;\n  return {\n    start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n    detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n      const deltaX = x - startX;\n      const deltaY = y - startY;\n      const distance = deltaX * deltaX + deltaY * deltaY;\n      if (distance < threshold) {\n        return false;\n      }\n      const hypotenuse = Math.sqrt(distance);\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n      if (cosine > maxCosine) {\n        isPan = 1;\n      }\n      else if (cosine < -maxCosine) {\n        isPan = -1;\n      }\n      else {\n        isPan = 0;\n      }\n      dirty = false;\n      return true;\n    },\n    isGesture() {\n      return isPan !== 0;\n    },\n    getDirection() {\n      return isPan;\n    },\n  };\n};\n\n// TODO(FW-2832): types\nconst createGesture = (config) => {\n  let hasCapturedPan = false;\n  let hasStartedPan = false;\n  let hasFiredStart = true;\n  let isMoveQueued = false;\n  const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n  const canStart = finalConfig.canStart;\n  const onWillStart = finalConfig.onWillStart;\n  const onStart = finalConfig.onStart;\n  const onEnd = finalConfig.onEnd;\n  const notCaptured = finalConfig.notCaptured;\n  const onMove = finalConfig.onMove;\n  const threshold = finalConfig.threshold;\n  const passive = finalConfig.passive;\n  const blurOnStart = finalConfig.blurOnStart;\n  const detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined,\n  };\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  const gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll,\n  });\n  const pointerDown = (ev) => {\n    const timeStamp = now(ev);\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev;\n    // Check if gesture can start\n    if (canStart && canStart(detail) === false) {\n      return false;\n    }\n    // Release fallback\n    gesture.release();\n    // Start gesture\n    if (!gesture.start()) {\n      return false;\n    }\n    hasStartedPan = true;\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n  const pointerMove = (ev) => {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n      return;\n    }\n    // gesture is currently being detected\n    calcGestureData(detail, ev);\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n  const fireOnMove = () => {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n    isMoveQueued = false;\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n  const tryToCapturePan = () => {\n    if (!gesture.capture()) {\n      return false;\n    }\n    hasCapturedPan = true;\n    hasFiredStart = false;\n    // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    }\n    else {\n      fireOnStart();\n    }\n    return true;\n  };\n  const blurActiveElement = () => {\n    if (typeof document !== 'undefined') {\n      const activeElement = document.activeElement;\n      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n  const fireOnStart = () => {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n    if (onStart) {\n      onStart(detail);\n    }\n    hasFiredStart = true;\n  };\n  const reset = () => {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  };\n  // END *************************\n  const pointerUp = (ev) => {\n    const tmpHasCaptured = hasCapturedPan;\n    const tmpHasFiredStart = hasFiredStart;\n    reset();\n    if (!tmpHasFiredStart) {\n      return;\n    }\n    calcGestureData(detail, ev);\n    // Try to capture press\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n      return;\n    }\n    // Not captured any event\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false,\n    passive,\n  });\n  const abortGesture = () => {\n    reset();\n    pointerEvents.stop();\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  return {\n    enable(enable = true) {\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n        reset();\n      }\n      pointerEvents.enable(enable);\n    },\n    destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    },\n  };\n};\nconst calcGestureData = (detail, ev) => {\n  if (!ev) {\n    return;\n  }\n  const prevX = detail.currentX;\n  const prevY = detail.currentY;\n  const prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  const currentX = detail.currentX;\n  const currentY = detail.currentY;\n  const timestamp = (detail.currentTime = now(ev));\n  const timeDelta = timestamp - prevT;\n  if (timeDelta > 0 && timeDelta < 100) {\n    const velocityX = (currentX - prevX) / timeDelta;\n    const velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  let x = 0;\n  let y = 0;\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    }\n    else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n  detail.currentX = x;\n  detail.currentY = y;\n};\nconst now = (ev) => {\n  return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };\n"],"names":["addEventListener","el","eventName","callback","opts","listenerOpts","supportsPassive","add","remove","node","_sPassive","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","createPanRecognizer","direction","thresh","maxAngle","radians","isDirX","maxCosine","threshold","startX","startY","dirty","isPan","x","y","deltaX","deltaY","distance","hypotenuse","cosine","createGesture","config","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","canStart","onWillStart","onStart","onEnd","notCaptured","onMove","passive","blurOnStart","detail","pan","gesture","GESTURE_CONTROLLER","timeStamp","now","updateDetail","tryToCapturePan","calcGestureData","fireOnMove","abortGesture","fireOnStart","blurActiveElement","activeElement","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","currentX","currentY","timeDelta","velocityX","velocityY","changedTouches","touch"],"mappings":"wCAAA;AAAA;AAAA,GAMA,MAAMA,EAAmB,CAACC,EAC1BC,EAAWC,EAAUC,IAAS,CAG5B,MAAMC,EAAeC,EAAgBL,CAAE,EACnC,CACA,QAAS,CAAC,CAACG,EAAK,QAChB,QAAS,CAAC,CAACA,EAAK,OACjB,EACC,CAAC,CAACA,EAAK,QACX,IAAIG,EACAC,EACJ,OAAIP,EAAG,iCACLM,EAAM,kCACNC,EAAS,uCAGTD,EAAM,mBACNC,EAAS,uBAEXP,EAAGM,CAAG,EAAEL,EAAWC,EAAUE,CAAY,EAClC,IAAM,CACXJ,EAAGO,CAAM,EAAEN,EAAWC,EAAUE,CAAY,CAChD,CACA,EACMC,EAAmBG,GAAS,CAChC,GAAIC,IAAc,OAChB,GAAI,CACF,MAAMN,EAAO,OAAO,eAAe,CAAA,EAAI,UAAW,CAChD,IAAK,IAAM,CACTM,EAAY,EACb,CACT,CAAO,EACDD,EAAK,iBAAiB,WAAY,IAAM,CAEvC,EAAEL,CAAI,CACR,MACD,CACEM,EAAY,EACb,CAEH,MAAO,CAAC,CAACA,CACX,EACA,IAAIA,EAEJ,MAAMC,EAAa,IAEbC,EAAsB,CAACX,EAAIY,EAAaC,EAAaC,EAAWC,IAAY,CAChF,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAiB,EACrB,MAAMC,EAAoBC,GAAO,CAC/BF,EAAiB,KAAK,IAAK,EAAGb,EACzBE,EAAYa,CAAE,IAGf,CAACR,GAAeJ,IAClBI,EAAclB,EAAiBC,EAAI,YAAaa,EAAaE,CAAO,GAWjEG,IACHA,EAAanB,EAAiB0B,EAAG,OAAQ,WAAYC,EAAgBX,CAAO,GAEzEI,IACHA,EAAgBpB,EAAiB0B,EAAG,OAAQ,cAAeC,EAAgBX,CAAO,GAExF,EACQY,EAAmBF,GAAO,CAC1BF,EAAiB,KAAK,OAGrBX,EAAYa,CAAE,IAGf,CAACJ,GAAeR,IAClBQ,EAActB,EAAiB6B,EAAY5B,CAAE,EAAG,YAAaa,EAAaE,CAAO,GAE9EO,IACHA,EAAYvB,EAAiB6B,EAAY5B,CAAE,EAAG,UAAW6B,EAAed,CAAO,GAErF,EACQW,EAAkBD,GAAO,CAC7BK,IACIhB,GACFA,EAAUW,CAAE,CAElB,EACQI,EAAiBJ,GAAO,CAC5BM,IACIjB,GACFA,EAAUW,CAAE,CAElB,EACQK,EAAY,IAAM,CAClBb,GACFA,IAEEC,GACFA,IAEEC,GACFA,IAEFF,EAAcC,EAAaC,EAAgB,MAC/C,EACQY,EAAY,IAAM,CAClBV,GACFA,IAEEC,GACFA,IAEFD,EAAcC,EAAY,MAC9B,EACQU,EAAO,IAAM,CACjBF,IACAC,GACJ,EACQE,EAAS,CAACC,EAAY,KAAS,CAC9BA,GAWElB,IACHA,EAAejB,EAAiBC,EAAI,aAAcwB,EAAkBT,CAAO,GAExEK,IACHA,EAAerB,EAAiBC,EAAI,YAAa2B,EAAiBZ,CAAO,KAdvEC,GACFA,IAEEI,GACFA,IAEFJ,EAAeI,EAAe,OAC9BY,IAUN,EAKE,MAAO,CACL,OAAAC,EACA,KAAAD,EACA,QAPc,IAAM,CACpBC,EAAO,EAAK,EACZnB,EAAYD,EAAcD,EAAc,MAC5C,CAKA,CACA,EACMgB,EAAepB,GACZA,aAAgB,SAAWA,EAAOA,EAAK,cAG1C2B,EAAsB,CAACC,EAAWC,EAAQC,IAAa,CAC3D,MAAMC,EAAUD,GAAY,KAAK,GAAK,KAChCE,EAASJ,IAAc,IACvBK,EAAY,KAAK,IAAIF,CAAO,EAC5BG,EAAYL,EAASA,EAC3B,IAAIM,EAAS,EACTC,EAAS,EACTC,EAAQ,GACRC,EAAQ,EACZ,MAAO,CACL,MAAMC,EAAGC,EAAG,CACVL,EAASI,EACTH,EAASI,EACTF,EAAQ,EACRD,EAAQ,EACT,EACD,OAAOE,EAAGC,EAAG,CACX,GAAI,CAACH,EACH,MAAO,GAET,MAAMI,EAASF,EAAIJ,EACbO,EAASF,EAAIJ,EACbO,EAAWF,EAASA,EAASC,EAASA,EAC5C,GAAIC,EAAWT,EACb,MAAO,GAET,MAAMU,EAAa,KAAK,KAAKD,CAAQ,EAC/BE,GAAUb,EAASS,EAASC,GAAUE,EAC5C,OAAIC,EAASZ,EACXK,EAAQ,EAEDO,EAAS,CAACZ,EACjBK,EAAQ,GAGRA,EAAQ,EAEVD,EAAQ,GACD,EACR,EACD,WAAY,CACV,OAAOC,IAAU,CAClB,EACD,cAAe,CACb,OAAOA,CACR,CACL,CACA,EAGMQ,EAAiBC,GAAW,CAChC,IAAIC,EAAiB,GACjBC,EAAgB,GAChBC,EAAgB,GAChBC,EAAe,GACnB,MAAMC,EAAc,OAAO,OAAO,CAAE,cAAe,GAAO,UAAW,IAAK,gBAAiB,EAAG,QAAS,GAAM,SAAU,GAAI,UAAW,EAAE,EAAIL,CAAM,EAC5IM,EAAWD,EAAY,SACvBE,EAAcF,EAAY,YAC1BG,EAAUH,EAAY,QACtBI,EAAQJ,EAAY,MACpBK,EAAcL,EAAY,YAC1BM,EAASN,EAAY,OACrBlB,EAAYkB,EAAY,UACxBO,EAAUP,EAAY,QACtBQ,EAAcR,EAAY,YAC1BS,EAAS,CACb,KAAM,MACN,OAAQ,EACR,OAAQ,EACR,UAAW,EACX,SAAU,EACV,SAAU,EACV,UAAW,EACX,UAAW,EACX,OAAQ,EACR,OAAQ,EACR,YAAa,EACb,MAAO,OACP,KAAM,MACV,EACQC,EAAMnC,EAAoByB,EAAY,UAAWA,EAAY,UAAWA,EAAY,QAAQ,EAC5FW,EAAUC,EAAmB,cAAc,CAC/C,KAAMjB,EAAO,YACb,SAAUA,EAAO,gBACjB,cAAeA,EAAO,aAC1B,CAAG,EACK3C,EAAea,GAAO,CAC1B,MAAMgD,EAAYC,EAAIjD,CAAE,EAiBxB,OAhBIgC,GAAiB,CAACC,IAGtBiB,EAAalD,EAAI4C,CAAM,EACvBA,EAAO,OAASA,EAAO,SACvBA,EAAO,OAASA,EAAO,SACvBA,EAAO,UAAYA,EAAO,YAAcI,EACxCJ,EAAO,UAAYA,EAAO,UAAYA,EAAO,OAASA,EAAO,OAAS,EACtEA,EAAO,MAAQ5C,EAEXoC,GAAYA,EAASQ,CAAM,IAAM,MAIrCE,EAAQ,QAAO,EAEX,CAACA,EAAQ,SACJ,IAETd,EAAgB,GACZf,IAAc,EACTkC,EAAe,GAExBN,EAAI,MAAMD,EAAO,OAAQA,EAAO,MAAM,EAC/B,IACX,EACQxD,EAAeY,GAAO,CAG1B,GAAI+B,EAAgB,CACd,CAACG,GAAgBD,IACnBC,EAAe,GACfkB,EAAgBR,EAAQ5C,CAAE,EAC1B,sBAAsBqD,CAAU,GAElC,OAGFD,EAAgBR,EAAQ5C,CAAE,EACtB6C,EAAI,OAAOD,EAAO,SAAUA,EAAO,QAAQ,IACzC,CAACC,EAAI,aAAe,CAACM,EAAe,IACtCG,GAGR,EACQD,EAAa,IAAM,CAGlBtB,IAGLG,EAAe,GACXO,GACFA,EAAOG,CAAM,EAEnB,EACQO,EAAkB,IACjBL,EAAQ,WAGbf,EAAiB,GACjBE,EAAgB,GAOhBW,EAAO,OAASA,EAAO,SACvBA,EAAO,OAASA,EAAO,SACvBA,EAAO,UAAYA,EAAO,YACtBP,EACFA,EAAYO,CAAM,EAAE,KAAKW,CAAW,EAGpCA,IAEK,IAnBE,GAqBLC,EAAoB,IAAM,CAC9B,GAAI,OAAO,SAAa,IAAa,CACnC,MAAMC,EAAgB,SAAS,cACmCA,GAAc,MAC9EA,EAAc,KAAI,EAG1B,EACQF,EAAc,IAAM,CACpBZ,GACFa,IAEElB,GACFA,EAAQM,CAAM,EAEhBX,EAAgB,EACpB,EACQyB,EAAQ,IAAM,CAClB3B,EAAiB,GACjBC,EAAgB,GAChBE,EAAe,GACfD,EAAgB,GAChBa,EAAQ,QAAO,CACnB,EAEQzD,EAAaW,GAAO,CACxB,MAAM2D,EAAiB5B,EACjB6B,EAAmB3B,EAEzB,GADAyB,IACI,EAACE,EAKL,IAFAR,EAAgBR,EAAQ5C,CAAE,EAEtB2D,EAAgB,CACdpB,GACFA,EAAMK,CAAM,EAEd,OAGEJ,GACFA,EAAYI,CAAM,EAExB,EACQiB,EAAgB3E,EAAoBiD,EAAY,GAAIhD,EAAaC,EAAaC,EAAW,CAC7F,QAAS,GACT,QAAAqD,CACJ,CAAG,EACKY,EAAe,IAAM,CACzBI,IACAG,EAAc,KAAI,EACdrB,GACFA,EAAYI,CAAM,CAExB,EACE,MAAO,CACL,OAAOpC,EAAS,GAAM,CACfA,IACCuB,GACF1C,EAAU,MAAS,EAErBqE,KAEFG,EAAc,OAAOrD,CAAM,CAC5B,EACD,SAAU,CACRsC,EAAQ,QAAO,EACfe,EAAc,QAAO,CACtB,CACL,CACA,EACMT,EAAkB,CAACR,EAAQ5C,IAAO,CACtC,GAAI,CAACA,EACH,OAEF,MAAM8D,EAAQlB,EAAO,SACfmB,EAAQnB,EAAO,SACfoB,EAAQpB,EAAO,YACrBM,EAAalD,EAAI4C,CAAM,EACvB,MAAMqB,EAAWrB,EAAO,SAClBsB,EAAWtB,EAAO,SAElBuB,GADavB,EAAO,YAAcK,EAAIjD,CAAE,GAChBgE,EAC9B,GAAIG,EAAY,GAAKA,EAAY,IAAK,CACpC,MAAMC,GAAaH,EAAWH,GAASK,EACjCE,GAAaH,EAAWH,GAASI,EACvCvB,EAAO,UAAYwB,EAAY,GAAMxB,EAAO,UAAY,GACxDA,EAAO,UAAYyB,EAAY,GAAMzB,EAAO,UAAY,GAE1DA,EAAO,OAASqB,EAAWrB,EAAO,OAClCA,EAAO,OAASsB,EAAWtB,EAAO,OAClCA,EAAO,MAAQ5C,CACjB,EACMkD,EAAe,CAAClD,EAAI4C,IAAW,CAGnC,IAAItB,EAAI,EACJC,EAAI,EACR,GAAIvB,EAAI,CACN,MAAMsE,EAAiBtE,EAAG,eAC1B,GAAIsE,GAAkBA,EAAe,OAAS,EAAG,CAC/C,MAAMC,EAAQD,EAAe,CAAC,EAC9BhD,EAAIiD,EAAM,QACVhD,EAAIgD,EAAM,aAEHvE,EAAG,QAAU,SACpBsB,EAAItB,EAAG,MACPuB,EAAIvB,EAAG,OAGX4C,EAAO,SAAWtB,EAClBsB,EAAO,SAAWrB,CACpB,EACM0B,EAAOjD,GACJA,EAAG,WAAa,KAAK,IAAG","x_google_ignoreList":[0]}