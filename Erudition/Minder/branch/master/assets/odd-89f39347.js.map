{"version":3,"file":"odd-89f39347.js","sources":["../../www/scripts/odd.ts"],"sourcesContent":["import * as odd from '@oddjs/odd'\n\n\nconst appInfo = { creator: \"Minder\", name: \"Minder\" }\n\nexport function init() : odd.Program | string {\n    let problem = \"Unforeseen error initializing ODD\"\n\n    const program = odd.program({\n        namespace: appInfo,\n        debug: true, //lets us access window.__odd[odd.namespace(appInfo)]\n        fileSystem: { loadImmediately: true }\n    \n    }).catch(error => {\n        switch (error) {\n        case odd.ProgramError.InsecureContext:\n            // ODD requires HTTPS\n            problem = \"Insecure context\"\n            break;\n        case odd.ProgramError.UnsupportedBrowser:\n            // Browsers must support IndexedDB\n            problem = \"Unsupported browser\"\n            break;\n        }\n    }).then(program => {\n        if (program) {\n            // happy path\n        program.on('session:create', ({ session }) => { \n            console.log('A session was created', session)\n        })\n        \n        program.on('session:destroy', ({ username }) => { \n            console.log('A session was destroyed for username', username)\n        })\n        \n        let session = program.session\n        \n        if (session) {\n            console.log(\"You have a WNFS session! \\n Username:\" + session.username + \"\\n Type: \"+ session.type + \"\\n Filesystem Root DID: \" + session.fs?.account.rootDID)\n        } else {\n            let chosenUsername = prompt(\"Enter a new username\")\n            let chosenEmail = prompt(\"Enter a new email\")\n            if (chosenUsername && chosenEmail) {\n            registerUser(program, chosenUsername, chosenEmail);\n            }\n        }\n          return program;\n        }\n    })\n    return problem;\n  \n}\n\n\nexport async function linkNewDeviceWithSession(program: odd.Program, session: odd.Session) {\n    const producer = await program!.auth.accountProducer(session.username)\n\n    producer.on(\"challenge\", challenge => {\n    // Either show `challenge.pin` or have the user input a PIN and see if they're equal.\n    if (window.confirm(\"For security, only choose OK if the PIN matches exactly on the other device.\\nPIN: \" + challenge.pin)) \n        challenge.confirmPin()\n    else challenge.rejectPin()\n    })\n\n    producer.on(\"link\", ({ approved }) => {\n    if (approved) console.log(\"Linked new device successfully\")\n    })\n\n}\n\nexport async function linkNewDeviceWithoutSession(program: odd.Program, username: string) {\n    const consumer = await program.auth.accountConsumer(username)\n\n    consumer.on(\"challenge\", ({ pin }) => {\n        alert(\"Match this PIN on the other device. \\nPIN: \" + pin)\n    })\n    \n    consumer.on(\"link\", async ({ approved, username }) => {\n        if (approved) {\n        console.log(`Successfully authenticated as ${username}`)\n        return await program.auth.session()\n        }\n    })\n\n}\n\nexport async function registerUser(program: odd.Program, username: string, email: string) {\n\n\tif (!program.session) \n\t{\n\t  // Check if username is valid and available\n\t  const valid = await program.auth.isUsernameValid(username)\n\t  const available = await program.auth.isUsernameAvailable(username)\n\n\t  if (valid && available) \n\t  {\n\t  // Register the user\n\t  const { success } = await program.auth.register({ username, email })\n\t  \n\t  // Create a session on success\n\t  const session = success ? await program.auth.session() : null\n\n\t  }\n\t} else \n\t{\n\t  console.error(\"Tried to registerUser but there was already an existing session.\", !program.session)\n\t}\n\n}\n\nexport async function saveData(program: odd.Program, session: odd.Session, ron : string) {\n  if (session.fs)\n  {\n\t// After retrieving a session or loading the file system manually\n\tconst fs = session.fs // or program.loadFileSystem(username)\n\n\t// List the user's public files\n\tawait fs.ls(odd.path.directory(\"public\"))\n\n\t// List the user's private files that belong to a specific app\n\tawait fs.ls(odd.path.appData(appInfo))\n\n\t// Create a sub directory and write to a file\n\tawait fs.write(\n\t  odd.path.appData(appInfo, odd.path.file(\"RON\", \"profile.ron\")),\n\t  new TextEncoder().encode(ron)\n\t)\n\n\t// Persist changes and announce them to your other devices\n\tawait fs.publish()\n  } else \n  {\n\tconsole.error(\"Tried to saveData but fs was missing. Program is\", program, \"session is\", session, \"fs is\", session!.fs)\n  }\n}\n\n\nexport async function readData(program: odd.Program, session: odd.Session) {\n  if (session.fs)\n  {\n\tlet fileExists = await session.fs.exists( odd.path.appData(appInfo, odd.path.file(\"RON\", \"profile.ron\")) )\n\tlet content = \"\";\n\n\tif (fileExists) {\n\t  console.log(\"minder path exists.\" )\n\t  // Read from the file\n\t  content = new TextDecoder().decode(\n\t\tawait session.fs.read(\n\t\t  odd.path.appData(appInfo, odd.path.file(\"RON\", \"profile.ron\"))\n\t\t)\n\t  )\n\t} else {\n\t  await session?.fs!.write(\n\t\todd.path.appData(appInfo, odd.path.file(\"RON\", \"profile.ron\")),\n\t\tnew TextEncoder().encode(\"start;\")\n\t  )\n\t}\n\n\treturn content;\n  } else \n  {\n\tconsole.error(\"Tried to readData but fs was missing. Program is\", program, \"session is\", session, \"fs is\", session!.fs)\n\treturn null;\n  }\n}"],"names":["appInfo","init","problem","odd.program","error","odd.ProgramError","program","session","username","chosenUsername","chosenEmail","linkNewDeviceWithSession","producer","challenge","approved","linkNewDeviceWithoutSession","consumer","pin","registerUser","email","valid","available","success","saveData","ron","fs","odd.path.directory","odd.path.appData","odd.path.file","readData","fileExists","content"],"mappings":"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"}