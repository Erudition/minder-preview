{"version":3,"file":"shadow-css-d7d058ec-d59cb009-e3ca5375.js","sources":["../../node_modules/.pnpm/@ionic+pwa-elements@3.1.1_patch_hash=mm6wzknppdoxvvwardhg3ga55e/node_modules/@ionic/pwa-elements/dist/esm-es5/shadow-css-d7d058ec-d59cb009.js"],"sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotScopeId) {\n    var slotClass = '.' + slotScopeId + ' > ';\n    var selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var slottedSelector = slotClass + compound + suffix;\n            var prefixSelector = '';\n            for (var i = m[4] - 1; i >= 0; i--) {\n                var char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            var orgSelector = prefixSelector + slottedSelector;\n            var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                var updatedSelector = addedSelector + \", \" + orgSelector;\n                selectors.push({\n                    orgSelector: orgSelector,\n                    updatedSelector: updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors: selectors,\n        cssText: cssText\n    };\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector.split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n            rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    var slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach(function (slottedSelector) {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\nexport { scopeCss };\n"],"names":["__spreadArrays","this","s","i","il","r","k","a","j","jl","safeSelector","selector","placeholders","index","content","_","keep","replaceBy","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","m","_i","suffix","contentPrefix","cssRule","rule","inputParts","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","parts","p","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","convertColonSlotted","slotScopeId","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","updatedSelector","convertColonHostContext","convertShadowDOMSelectors","result","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","applySimpleSelectorScope","hostSelector","replaceBy_1","before","colon","after","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","matches","safeContent","scopedSelector","startIndex","res","sep","hasHost","shouldScope","separator","part_1","scopedPart","scopeSelectorText","slotSelector","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotted","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector_1","placeholder","comment","scoped","_a"],"mappings":"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","x_google_ignoreList":[0]}