{"version":3,"file":"hardware-back-button-b6b0248c.js","sources":["../../node_modules/.pnpm/@ionic+core@7.0.0/node_modules/@ionic/core/components/hardware-back-button.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * When hardwareBackButton: false in config,\n * we need to make sure we also block the default\n * webview behavior. If we don't then it will be\n * possible for users to navigate backward while\n * an overlay is still open. Additionally, it will\n * give the appearance that the hardwareBackButton\n * config is not working as the page transition\n * will still happen.\n */\nconst blockHardwareBackButton = () => {\n  document.addEventListener('backbutton', () => { }); // eslint-disable-line\n};\nconst startHardwareBackButton = () => {\n  const doc = document;\n  let busy = false;\n  doc.addEventListener('backbutton', () => {\n    if (busy) {\n      return;\n    }\n    let index = 0;\n    let handlers = [];\n    const ev = new CustomEvent('ionBackButton', {\n      bubbles: false,\n      detail: {\n        register(priority, handler) {\n          handlers.push({ priority, handler, id: index++ });\n        },\n      },\n    });\n    doc.dispatchEvent(ev);\n    const executeAction = async (handlerRegister) => {\n      try {\n        if (handlerRegister === null || handlerRegister === void 0 ? void 0 : handlerRegister.handler) {\n          const result = handlerRegister.handler(processHandlers);\n          if (result != null) {\n            await result;\n          }\n        }\n      }\n      catch (e) {\n        console.error(e);\n      }\n    };\n    const processHandlers = () => {\n      if (handlers.length > 0) {\n        let selectedHandler = {\n          priority: Number.MIN_SAFE_INTEGER,\n          handler: () => undefined,\n          id: -1,\n        };\n        handlers.forEach((handler) => {\n          if (handler.priority >= selectedHandler.priority) {\n            selectedHandler = handler;\n          }\n        });\n        busy = true;\n        handlers = handlers.filter((handler) => handler.id !== selectedHandler.id);\n        executeAction(selectedHandler).then(() => (busy = false));\n      }\n    };\n    processHandlers();\n  });\n};\nconst OVERLAY_BACK_BUTTON_PRIORITY = 100;\nconst MENU_BACK_BUTTON_PRIORITY = 99; // 1 less than overlay priority since menu is displayed behind overlays\n\nexport { MENU_BACK_BUTTON_PRIORITY, OVERLAY_BACK_BUTTON_PRIORITY, blockHardwareBackButton, startHardwareBackButton };\n"],"names":["blockHardwareBackButton","startHardwareBackButton","doc","busy","index","handlers","ev","priority","handler","executeAction","handlerRegister","result","processHandlers","selectedHandler","OVERLAY_BACK_BUTTON_PRIORITY","MENU_BACK_BUTTON_PRIORITY"],"mappings":"AAAA;AAAA;AAAA,GAaK,MAACA,EAA0B,IAAM,CACpC,SAAS,iBAAiB,aAAc,IAAM,CAAG,CAAA,CACnD,EACMC,EAA0B,IAAM,CACpC,MAAMC,EAAM,SACZ,IAAIC,EAAO,GACXD,EAAI,iBAAiB,aAAc,IAAM,CACvC,GAAIC,EACF,OAEF,IAAIC,EAAQ,EACRC,EAAW,CAAA,EACf,MAAMC,EAAK,IAAI,YAAY,gBAAiB,CAC1C,QAAS,GACT,OAAQ,CACN,SAASC,EAAUC,EAAS,CAC1BH,EAAS,KAAK,CAAE,SAAAE,EAAU,QAAAC,EAAS,GAAIJ,GAAO,CAAE,CACjD,CACF,CACP,CAAK,EACDF,EAAI,cAAcI,CAAE,EACpB,MAAMG,EAAgB,MAAOC,GAAoB,CAC/C,GAAI,CACF,GAAsEA,GAAgB,QAAS,CAC7F,MAAMC,EAASD,EAAgB,QAAQE,CAAe,EAClDD,GAAU,MACZ,MAAMA,EAGX,OACM,EAAP,CACE,QAAQ,MAAM,CAAC,CAChB,CACP,EACUC,EAAkB,IAAM,CAC5B,GAAIP,EAAS,OAAS,EAAG,CACvB,IAAIQ,EAAkB,CACpB,SAAU,OAAO,iBACjB,QAAS,IAAA,GACT,GAAI,EACd,EACQR,EAAS,QAASG,GAAY,CACxBA,EAAQ,UAAYK,EAAgB,WACtCA,EAAkBL,EAE9B,CAAS,EACDL,EAAO,GACPE,EAAWA,EAAS,OAAQG,GAAYA,EAAQ,KAAOK,EAAgB,EAAE,EACzEJ,EAAcI,CAAe,EAAE,KAAK,IAAOV,EAAO,EAAM,EAEhE,EACIS,GACJ,CAAG,CACH,EACME,EAA+B,IAC/BC,EAA4B","x_google_ignoreList":[0]}