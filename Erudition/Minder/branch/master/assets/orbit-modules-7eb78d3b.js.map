{"version":3,"file":"orbit-modules-7eb78d3b.js","sources":["../../node_modules/.pnpm/orbit-db-eventstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-eventstore/src/EventIndex.js","../../node_modules/.pnpm/orbit-db-eventstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-eventstore/src/EventStore.js","../../node_modules/.pnpm/orbit-db-feedstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-feedstore/src/FeedIndex.js","../../node_modules/.pnpm/orbit-db-feedstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-feedstore/src/FeedStore.js","../../node_modules/.pnpm/orbit-db-kvstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-kvstore/src/KeyValueIndex.js","../../node_modules/.pnpm/orbit-db-kvstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-kvstore/src/KeyValueStore.js","../../node_modules/.pnpm/orbit-db-counterstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-counterstore/src/CounterIndex.js","../../node_modules/.pnpm/orbit-db-counterstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-counterstore/src/CounterStore.js","../../node_modules/.pnpm/orbit-db-docstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-docstore/src/DocumentIndex.js","../../node_modules/.pnpm/orbit-db-docstore@2.0.0_orbit-db-store@5.0.0/node_modules/orbit-db-docstore/src/DocumentStore.js","../../node_modules/.pnpm/orbit-db-pubsub@0.7.0/node_modules/orbit-db-pubsub/src/index.js","../../node_modules/.pnpm/orbit-db-cache@0.5.0/node_modules/orbit-db-cache/src/Cache.js","../../node_modules/.pnpm/orbit-db-keystore@2.0.0/node_modules/orbit-db-keystore/src/verifiers/verifierv0.js","../../node_modules/.pnpm/orbit-db-keystore@2.0.0/node_modules/orbit-db-keystore/src/verifiers/verifierv1.js","../../node_modules/.pnpm/orbit-db-keystore@2.0.0/node_modules/orbit-db-keystore/src/verifiers/index.js","../../node_modules/.pnpm/orbit-db-keystore@2.0.0/node_modules/orbit-db-keystore/src/keystore.js","../../node_modules/.pnpm/orbit-db-identity-provider@0.5.0/node_modules/orbit-db-identity-provider/src/is-defined.js","../../node_modules/.pnpm/orbit-db-identity-provider@0.5.0/node_modules/orbit-db-identity-provider/src/identity.js","../../node_modules/.pnpm/orbit-db-identity-provider@0.5.0/node_modules/orbit-db-identity-provider/src/identity-providers/interface.js","../../node_modules/.pnpm/orbit-db-identity-provider@0.5.0/node_modules/orbit-db-identity-provider/src/identity-providers/orbitdb.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/identifiers.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/style.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-conv-api/transformers.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-conv-api/converter.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/emitcss.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/utilities.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/ast.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/circular-buffer.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/parser.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/stats.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/trace.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-lib/node-exports.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/scanner-grammar.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/scanner-callbacks.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/scanner.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/syntax-callbacks.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/semantic-callbacks.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/sabnf-grammar.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/parser.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/rule-attributes.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/rule-dependencies.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/attributes.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/show-rules.js","../../node_modules/.pnpm/apg-js@4.1.3/node_modules/apg-js/src/apg-api/api.js","../../node_modules/.pnpm/dids@3.4.0/node_modules/dids/dist/random-string.util.js","../../node_modules/.pnpm/dids@3.4.0/node_modules/dids/dist/utils.js","../../node_modules/.pnpm/dids@3.4.0/node_modules/dids/dist/did.js","../../node_modules/.pnpm/orbit-db-identity-provider@0.5.0/node_modules/orbit-db-identity-provider/src/identity-providers/did.js","../../node_modules/.pnpm/orbit-db-identity-provider@0.5.0/node_modules/orbit-db-identity-provider/src/identity-providers/ethereum.js","../../node_modules/.pnpm/orbit-db-identity-provider@0.5.0/node_modules/orbit-db-identity-provider/src/identities.js","../../node_modules/.pnpm/orbit-db-storage-adapter@0.9.0_patch_hash=tx7rl4nryxk7u4geoy4mwey7fa/node_modules/orbit-db-storage-adapter/src/index.js","../../www/scripts/orbit.ts"],"sourcesContent":["export default class EventIndex {\n  constructor () {\n    this._index = null\n  }\n\n  get () {\n    return this._index ? this._index.values : []\n  }\n\n  updateIndex (oplog) {\n    this._index = oplog\n  }\n}\n","import Store from 'orbit-db-store'\nimport EventIndex from './EventIndex.js'\n\n// TODO: generalize the Iterator functions and spin to its own module\n\nexport default class EventStore extends Store {\n  constructor (ipfs, id, dbname, options = {}) {\n    if (options.Index === undefined) Object.assign(options, { Index: EventIndex })\n    super(ipfs, id, dbname, options)\n    this._type = 'eventlog'\n    this.events.on('log.op.ADD', (address, hash, payload) => {\n      this.events.emit('db.append', payload.value)\n    })\n  }\n\n  add (data, options = {}) {\n    return this._addOperation({\n      op: 'ADD',\n      key: null,\n      value: data\n    }, options)\n  }\n\n  get (hash) {\n    return this.iterator({ gte: hash, limit: 1 }).collect()[0]\n  }\n\n  iterator (options) {\n    const messages = this._query(options)\n    let currentIndex = 0\n    const iterator = {\n      [Symbol.iterator] () {\n        return this\n      },\n      next () {\n        let item = { value: null, done: true }\n        if (currentIndex < messages.length) {\n          item = { value: messages[currentIndex], done: false }\n          currentIndex++\n        }\n        return item\n      },\n      collect: () => messages\n    }\n\n    return iterator\n  }\n\n  _query (opts) {\n    if (!opts) opts = {}\n\n    const amount = opts.limit ? (opts.limit > -1 ? opts.limit : this._index.get().length) : 1 // Return 1 if no limit is provided\n    const events = this._index.get().slice()\n    let result = []\n\n    if (opts.gt || opts.gte) {\n      // Greater than case\n      result = this._read(events, opts.gt ? opts.gt : opts.gte, amount, !!opts.gte)\n    } else {\n      // Lower than and lastN case, search latest first by reversing the sequence\n      result = this._read(events.reverse(), opts.lt ? opts.lt : opts.lte, amount, opts.lte || !opts.lt).reverse()\n    }\n\n    if (opts.reverse) {\n      result.reverse()\n    }\n\n    return result\n  }\n\n  _read (ops, hash, amount, inclusive) {\n    // Find the index of the gt/lt hash, or start from the beginning of the array if not found\n    const index = ops.map((e) => e.hash).indexOf(hash)\n    let startIndex = Math.max(index, 0)\n    // If gte/lte is set, we include the given hash, if not, start from the next element\n    startIndex += inclusive ? 0 : 1\n    // Slice the array to its requested size\n    const res = ops.slice(startIndex).slice(0, amount)\n    return res\n  }\n}\n","export default class FeedIndex {\n  constructor () {\n    this._index = {}\n  }\n\n  get () {\n    return Object.keys(this._index).map((f) => this._index[f])\n  }\n\n  updateIndex (oplog) {\n    this._index = {}\n    oplog.values.reduce((handled, item) => {\n      if (!handled.includes(item.hash)) {\n        handled.push(item.hash)\n        if (item.payload.op === 'ADD') {\n          this._index[item.hash] = item\n        } else if (item.payload.op === 'DEL') {\n          delete this._index[item.payload.value]\n        }\n      }\n      return handled\n    }, [])\n  }\n}\n","import EventStore from 'orbit-db-eventstore'\nimport FeedIndex from './FeedIndex.js'\n\nexport default class FeedStore extends EventStore {\n  constructor (ipfs, id, dbname, options) {\n    if (!options) options = {}\n    if (!options.Index) Object.assign(options, { Index: FeedIndex })\n    super(ipfs, id, dbname, options)\n    this._type = 'feed'\n  }\n\n  remove (hash, options = {}) {\n    return this.del(hash, options)\n  }\n\n  del (hash, options = {}) {\n    const operation = {\n      op: 'DEL',\n      key: null,\n      value: hash\n    }\n    return this._addOperation(operation, options)\n  }\n}\n","export default class KeyValueIndex {\n  constructor () {\n    this._index = {}\n  }\n\n  get (key) {\n    return this._index[key]\n  }\n\n  updateIndex (oplog) {\n    const values = oplog.values\n\n    const handled = {}\n    for (let i = values.length - 1; i >= 0; i--) {\n      const item = values[i]\n      if (handled[item.payload.key]) {\n        continue\n      }\n      handled[item.payload.key] = true\n      if (item.payload.op === 'PUT') {\n        this._index[item.payload.key] = item.payload.value\n        continue\n      }\n      if (item.payload.op === 'DEL') {\n        delete this._index[item.payload.key]\n        continue\n      }\n    }\n  }\n}\n","import Store from 'orbit-db-store'\nimport KeyValueIndex from './KeyValueIndex.js'\n\nexport default class KeyValueStore extends Store {\n  constructor (ipfs, id, dbname, options) {\n    const opts = Object.assign({}, { Index: KeyValueIndex })\n    Object.assign(opts, options)\n    super(ipfs, id, dbname, opts)\n    this._type = 'keyvalue'\n  }\n\n  get all () {\n    return this._index._index\n  }\n\n  get (key) {\n    return this._index.get(key)\n  }\n\n  set (key, data, options = {}) {\n    return this.put(key, data, options)\n  }\n\n  put (key, data, options = {}) {\n    return this._addOperation({\n      op: 'PUT',\n      key,\n      value: data\n    }, options)\n  }\n\n  del (key, options = {}) {\n    return this._addOperation({\n      op: 'DEL',\n      key,\n      value: null\n    }, options)\n  }\n}\n","import { GCounter as Counter } from 'crdts'\n\nexport default class CounterIndex {\n  constructor (id) {\n    this._index = new Counter(id)\n  }\n\n  get () {\n    return this._index\n  }\n\n  updateIndex (oplog) {\n    if (this._index) {\n      const getCounter = e => e.payload.value.counters\n      const mergeToIndex = _counters => this._index.merge({ _counters })\n      oplog.values.filter(e => e && e.payload.op === 'COUNTER')\n        .map(getCounter)\n        .forEach(mergeToIndex)\n    }\n  }\n}\n","import Store from 'orbit-db-store'\nimport CounterIndex from './CounterIndex.js'\nimport { GCounter as Counter } from 'crdts'\n\nexport default class CounterStore extends Store {\n  constructor (ipfs, id, dbname, options = {}) {\n    if (!options.Index) {\n      Object.assign(options, { Index: CounterIndex })\n    }\n    super(ipfs, id, dbname, options)\n    this._index = new this.options.Index(this.identity.publicKey)\n    this._type = 'counter'\n  }\n\n  get value () {\n    return this._index.get().value\n  }\n\n  inc (amount, options = {}) {\n    const counter = new Counter(this.identity.publicKey, Object.assign({}, this._index.get()._counters))\n    counter.increment(amount)\n    return this._addOperation({\n      op: 'COUNTER',\n      key: null,\n      value: counter.toJSON()\n    }, options)\n  }\n}\n","export default class DocumentIndex {\n  constructor () {\n    this._index = {}\n  }\n\n  get (key, fullOp = false) {\n    return fullOp\n      ? this._index[key]\n      : this._index[key] ? this._index[key].payload.value : null\n  }\n\n  updateIndex (oplog, onProgressCallback) {\n    const reducer = (handled, item, idx) => {\n      if (item.payload.op === 'PUTALL' && item.payload.docs[Symbol.iterator]) {\n        for (const doc of item.payload.docs) {\n          if (doc && handled[doc.key] !== true) {\n            handled[doc.key] = true\n            this._index[doc.key] = {\n              payload: {\n                op: 'PUT',\n                key: doc.key,\n                value: doc.value\n              }\n            }\n          }\n        }\n      } else if (handled[item.payload.key] !== true) {\n        handled[item.payload.key] = true\n        if (item.payload.op === 'PUT') {\n          this._index[item.payload.key] = item\n        } else if (item.payload.op === 'DEL') {\n          delete this._index[item.payload.key]\n        }\n      }\n      if (onProgressCallback) onProgressCallback(item, idx)\n      return handled\n    }\n\n    oplog.values\n      .slice()\n      .reverse()\n      .reduce(reducer, {})\n  }\n}\n","import Store from 'orbit-db-store'\nimport DocumentIndex from './DocumentIndex.js'\nimport pMap from 'p-map'\n\nconst replaceAll = (str, search, replacement) => str.toString().split(search).join(replacement)\n\nexport default class DocumentStore extends Store {\n  constructor (ipfs, id, dbname, options) {\n    if (!options) options = {}\n    if (!options.indexBy) Object.assign(options, { indexBy: '_id' })\n    if (!options.Index) Object.assign(options, { Index: DocumentIndex })\n    super(ipfs, id, dbname, options)\n    this._type = 'docstore'\n  }\n\n  get (key, caseSensitive = false) {\n    key = key.toString()\n    const terms = key.split(' ')\n    key = terms.length > 1 ? replaceAll(key, '.', ' ').toLowerCase() : key.toLowerCase()\n\n    const search = (e) => {\n      if (terms.length > 1) {\n        return replaceAll(e, '.', ' ').toLowerCase().indexOf(key) !== -1\n      }\n      return e.toLowerCase().indexOf(key) !== -1\n    }\n    const mapper = e => this._index.get(e)\n    const filter = e => caseSensitive\n      ? e.indexOf(key) !== -1\n      : search(e)\n\n    return Object.keys(this._index._index)\n      .filter(filter)\n      .map(mapper)\n  }\n\n  query (mapper, options = {}) {\n    // Whether we return the full operation data or just the db value\n    const fullOp = options.fullOp || false\n\n    return Object.keys(this._index._index)\n      .map((e) => this._index.get(e, fullOp))\n      .filter(mapper)\n  }\n\n  batchPut (docs, onProgressCallback) {\n    const mapper = (doc, idx) => {\n      return this._addOperationBatch(\n        {\n          op: 'PUT',\n          key: doc[this.options.indexBy],\n          value: doc\n        },\n        true,\n        idx === docs.length - 1,\n        onProgressCallback\n      )\n    }\n\n    return pMap(docs, mapper, { concurrency: 1 })\n      .then(() => this.saveSnapshot())\n  }\n\n  put (doc, options = {}) {\n    if (!doc[this.options.indexBy]) { throw new Error(`The provided document doesn't contain field '${this.options.indexBy}'`) }\n\n    return this._addOperation({\n      op: 'PUT',\n      key: doc[this.options.indexBy],\n      value: doc\n    }, options)\n  }\n\n  putAll (docs, options = {}) {\n    if (!(Array.isArray(docs))) {\n      docs = [docs]\n    }\n    if (!(docs.every(d => d[this.options.indexBy]))) { throw new Error(`The provided document doesn't contain field '${this.options.indexBy}'`) }\n    return this._addOperation({\n      op: 'PUTALL',\n      docs: docs.map((value) => ({\n        key: value[this.options.indexBy],\n        value\n      }))\n    }, options)\n  }\n\n  del (key, options = {}) {\n    if (!this._index.get(key)) { throw new Error(`No entry with key '${key}' in the database`) }\n\n    return this._addOperation({\n      op: 'DEL',\n      key,\n      value: null\n    }, options)\n  }\n}\n","import pSeries from 'p-series'\nimport PeerMonitor from 'ipfs-pubsub-peer-monitor'\nimport Logger from 'logplease'\n\nconst logger = Logger.create('pubsub', { color: Logger.Colors.Yellow })\nLogger.setLogLevel('ERROR')\n\nconst maxTopicsOpen = 256\nlet topicsOpenCount = 0\n\nexport default class IPFSPubsub {\n  constructor (ipfs, id) {\n    this._ipfs = ipfs\n    this._id = id\n    this._subscriptions = {}\n\n    if (this._ipfs.pubsub === null) { logger.error(\"The provided version of ipfs doesn't have pubsub support. Messages will not be exchanged.\") }\n\n    this._handleMessage = this._handleMessage.bind(this)\n\n    // Bump up the number of listeners we can have open,\n    // ie. number of databases replicating\n    if (this._ipfs.setMaxListeners) { this._ipfs.setMaxListeners(maxTopicsOpen) }\n  }\n\n  async subscribe (topic, onMessageCallback, onNewPeerCallback, options = {}) {\n    if (!this._subscriptions[topic] && this._ipfs.pubsub) {\n      await this._ipfs.pubsub.subscribe(topic, this._handleMessage, options)\n\n      const topicMonitor = new PeerMonitor(this._ipfs.pubsub, topic)\n\n      topicMonitor.on('join', (peer) => {\n        logger.debug(`Peer joined ${topic}:`)\n        logger.debug(peer)\n        if (this._subscriptions[topic]) {\n          onNewPeerCallback(topic, peer)\n        } else {\n          logger.warn('Peer joined a room we don\\'t have a subscription for')\n          logger.warn(topic, peer)\n        }\n      })\n\n      topicMonitor.on('leave', (peer) => logger.debug(`Peer ${peer} left ${topic}`))\n      topicMonitor.on('error', (e) => logger.error(e))\n\n      this._subscriptions[topic] = {\n        topicMonitor,\n        onMessage: onMessageCallback,\n        onNewPeer: onNewPeerCallback\n      }\n\n      topicsOpenCount++\n      logger.debug('Topics open:', topicsOpenCount)\n    }\n  }\n\n  async unsubscribe (hash) {\n    if (this._subscriptions[hash]) {\n      await this._ipfs.pubsub.unsubscribe(hash, this._handleMessage)\n      this._subscriptions[hash].topicMonitor.stop()\n      delete this._subscriptions[hash]\n      logger.debug(`Unsubscribed from '${hash}'`)\n      topicsOpenCount--\n      logger.debug('Topics open:', topicsOpenCount)\n    }\n  }\n\n  publish (topic, message, options = {}) {\n    if (this._subscriptions[topic] && this._ipfs.pubsub) {\n      let payload\n      // Buffer should be already serialized. Everything else will get serialized as json if not buffer, string.\n      if (Buffer.isBuffer(message) || typeof message === 'string') {\n        payload = message\n      } else {\n        payload = JSON.stringify(message)\n      }\n      this._ipfs.pubsub.publish(topic, Buffer.from(payload), options)\n    }\n  }\n\n  async disconnect () {\n    const topics = Object.keys(this._subscriptions)\n    await pSeries(topics.map((t) => this.unsubscribe.bind(this, t)))\n    this._subscriptions = {}\n  }\n\n  async _handleMessage (message) {\n    // Don't process our own messages\n    if (String(message.from) === this._id) { return }\n\n    // Get the message content and a subscription\n    let content\n\n    // Get the topic\n    // message.topic is the field used in the latest version of pubsub\n    // message.topicIDs array is the field used in older versions of pubsub\n    const topicId = message.topic ? message.topic : message.topicIDs[0]\n\n    try {\n      content = JSON.parse(Buffer.from(message.data).toString())\n    } catch {\n      content = message.data // Leave content alone. Meant for higher level code using custom serialization.\n    }\n    const subscription = this._subscriptions[topicId]\n\n    if (subscription && subscription.onMessage && content) {\n      await subscription.onMessage(topicId, content, message.from)\n    }\n  }\n}\n","import Logger from 'logplease'\nconst logger = Logger.create('cache', { color: Logger.Colors.Magenta })\nLogger.setLogLevel('ERROR')\n\nexport default class Cache {\n  constructor (store) {\n    this._store = store\n  }\n\n  get status () { return this._store.status }\n\n  async close () {\n    if (!this._store) throw new Error('No cache store found to close')\n\n    if (this.status === 'open') {\n      await this._store.close()\n    }\n  }\n\n  async open () {\n    if (!this._store) throw new Error('No cache store found to open')\n\n    if (this.status !== 'open') {\n      await this._store.open()\n    }\n  }\n\n  async get (key) {\n    try {\n      return JSON.parse(await this._store.get(key))\n    } catch (e) {\n      if (e.code === 'LEVEL_NOT_FOUND' || (e.cause !== undefined && e.cause.code === 'LEVEL_NOT_FOUND')) return null\n      throw e\n    }\n  }\n\n  // Set value in the cache and return the new value\n  async set (key, value) {\n    await this._store.put(key, JSON.stringify(value))\n    logger.debug(`cache: Set ${key} to ${JSON.stringify(value)}`)\n  }\n\n  load () {} // noop\n  destroy () { } // noop\n\n  // Remove a value and key from the cache\n  async del (key) {\n    await this._store.del(key)\n  }\n}\n","import pkg from 'elliptic'\nconst { ec: EC } = pkg\n\nexport const verify = async (signature, publicKey, data) => {\n  if (!signature) {\n    throw new Error('No signature given')\n  }\n  if (!publicKey) {\n    throw new Error('Given publicKey was undefined')\n  }\n  if (!data) {\n    throw new Error('Given input data was undefined')\n  }\n  let res = false\n  const ec = new EC('secp256k1')\n  const key = ec.keyPair({\n    pub: publicKey,\n    pubEnc: 'hex'\n  })\n  try {\n    res = ec.verify(data, signature, key)\n  } catch (e) {\n    // Catches 'Error: Signature without r or s'\n  }\n  return Promise.resolve(res)\n}\n","import * as crypto from '@libp2p/crypto'\nimport { Buffer } from 'safe-buffer'\n\nconst unmarshal = crypto.keys.supportedKeys.secp256k1.unmarshalSecp256k1PublicKey\n\nexport const verify = async (signature, publicKey, data) => {\n  if (!signature) {\n    throw new Error('No signature given')\n  }\n  if (!publicKey) {\n    throw new Error('Given publicKey was undefined')\n  }\n  if (!data) {\n    throw new Error('Given input data was undefined')\n  }\n\n  if (!Buffer.isBuffer(data)) {\n    data = Buffer.from(data)\n  }\n\n  const isValid = (key, msg, sig) => key.verify(msg, sig)\n\n  let res = false\n  try {\n    const pubKey = unmarshal(Buffer.from(publicKey, 'hex'))\n    res = await isValid(pubKey, data, Buffer.from(signature, 'hex'))\n  } catch (e) {\n    // Catch error: sig length wrong\n  }\n  return Promise.resolve(res)\n}\n","'use strict'\n\nimport * as v0 from './verifierv0.js'\nimport * as v1 from './verifierv1.js'\n\nconst verifiers = { v0, v1 }\n\nexport const verifier = (v) => {\n  return verifiers[v]\n}\n","import { Level } from 'level'\nimport * as crypto from '@libp2p/crypto'\nimport secp256k1 from 'secp256k1'\nimport LRU from 'lru'\nimport { Buffer } from 'safe-buffer'\nimport { verifier } from './verifiers/index.js'\nimport fs from 'fs'\nimport pkg from 'elliptic'\nconst { ec: EC } = pkg\n\nconst ec = new EC('secp256k1')\nconst unmarshal = crypto.keys.supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey\n\nfunction createStore (path = './keystore') {\n  if (fs && fs.mkdirSync) {\n    fs.mkdirSync(path, { recursive: true })\n  }\n\n  return new Level(path, {})\n}\n\nconst verifiedCache = new LRU(1000)\n\nexport default class Keystore {\n  constructor (input = {}) {\n    if (typeof input === 'string') {\n      this._store = createStore(input)\n    } else if (typeof input.open === 'function') {\n      this._store = input\n    } else if (typeof input.store === 'string') {\n      this._store = createStore(input.store)\n    } else {\n      this._store = input.store || createStore()\n    }\n    this._cache = input.cache || new LRU(100)\n  }\n\n  async open () {\n    if (!this._store) {\n      throw new Error('Keystore: No store found to open')\n    }\n    await this._store.open()\n  }\n\n  async close () {\n    if (!this._store) return\n    await this._store.close()\n  }\n\n  async hasKey (id) {\n    if (!id) {\n      throw new Error('id needed to check a key')\n    }\n    if (this._store.status && this._store.status !== 'open') {\n      return null\n    }\n\n    let hasKey = false\n    try {\n      const storedKey = this._cache.get(id) || await this._store.get(id)\n      hasKey = storedKey !== undefined && storedKey !== null\n    } catch (e) {\n      // Catches 'Error: ENOENT: no such file or directory, open <path>'\n      console.error('Error: ENOENT: no such file or directory')\n    }\n\n    return hasKey\n  }\n\n  async createKey (id, { entropy } = {}) {\n    if (!id) {\n      throw new Error('id needed to create a key')\n    }\n    if (this._store.status && this._store.status !== 'open') {\n      return null\n    }\n\n    // Generate a private key\n    const privKey = ec.genKeyPair({ entropy }).getPrivate().toArrayLike(Buffer)\n    // Left pad the key to 32 bytes. The module used in libp2p crypto (noble-secp256k1)\n    // verifies the length and will throw an error if key is not 32 bytes.\n    // For more details on why the generated key is not always 32 bytes, see:\n    // https://stackoverflow.com/questions/62938091/why-are-secp256k1-privatekeys-not-always-32-bytes-in-nodejs\n    const buf = Buffer.alloc(32)\n    // Copy the private key buffer to the padded buffer\n    privKey.copy(buf, buf.length - privKey.length)\n\n    const keys = await unmarshal(buf)\n    const pubKey = keys.public.marshal()\n    const decompressedKey = secp256k1.publicKeyConvert(Buffer.from(pubKey), false)\n    const key = {\n      publicKey: Buffer.from(decompressedKey).toString('hex'),\n      privateKey: Buffer.from(keys.marshal()).toString('hex')\n    }\n\n    try {\n      await this._store.put(id, JSON.stringify(key))\n    } catch (e) {\n      console.log(e)\n    }\n    this._cache.set(id, key)\n\n    return keys\n  }\n\n  async getKey (id) {\n    if (!id) {\n      throw new Error('id needed to get a key')\n    }\n    if (!this._store) {\n      await this.open()\n    }\n    if (this._store.status && this._store.status !== 'open') {\n      return null\n    }\n\n    const cachedKey = this._cache.get(id)\n    let storedKey\n    try {\n      storedKey = cachedKey || await this._store.get(id)\n    } catch (e) {\n      // ignore ENOENT error\n    }\n\n    if (!storedKey) {\n      return\n    }\n\n    const deserializedKey = cachedKey || JSON.parse(storedKey)\n    if (!deserializedKey) {\n      return\n    }\n\n    if (!cachedKey) {\n      this._cache.set(id, deserializedKey)\n    }\n\n    return unmarshal(Buffer.from(deserializedKey.privateKey, 'hex'))\n  }\n\n  async sign (key, data) {\n    if (!key) {\n      throw new Error('No signing key given')\n    }\n\n    if (!data) {\n      throw new Error('Given input data was undefined')\n    }\n\n    if (!Buffer.isBuffer(data)) {\n      data = Buffer.from(data)\n    }\n\n    return Buffer.from(await key.sign(data)).toString('hex')\n  }\n\n  getPublic (keys, options = {}) {\n    const formats = ['hex', 'buffer']\n    const decompress = typeof options.decompress === 'undefined' ? true : options.decompress\n    const format = options.format || 'hex'\n    if (formats.indexOf(format) === -1) {\n      throw new Error('Supported formats are `hex` and `buffer`')\n    }\n    let pubKey = keys.public.marshal()\n    if (decompress) {\n      pubKey = secp256k1.publicKeyConvert(Buffer.from(pubKey), false)\n    }\n    pubKey = Buffer.from(pubKey)\n    return format === 'buffer' ? pubKey : pubKey.toString('hex')\n  }\n\n  async verify (signature, publicKey, data, v = 'v1') {\n    return Keystore.verify(signature, publicKey, data, v)\n  }\n\n  static async verify (signature, publicKey, data, v = 'v1') {\n    const cached = verifiedCache.get(signature)\n    let res = false\n    if (!cached) {\n      const verified = await verifier(v).verify(signature, publicKey, data)\n      res = verified\n      if (verified) {\n        verifiedCache.set(signature, { publicKey, data })\n      }\n    } else {\n      const compare = (cached, data, v) => {\n        let match\n        if (v === 'v0') {\n          match = Buffer.compare(Buffer.alloc(30, cached), Buffer.alloc(30, data)) === 0\n        } else {\n          match = Buffer.isBuffer(data) ? Buffer.compare(cached, data) === 0 : cached === data\n        }\n        return match\n      }\n      res = cached.publicKey === publicKey && compare(cached.data, data, v)\n    }\n    return res\n  }\n}\n","export default (arg) => arg !== undefined && arg !== null\n","import isDefined from './is-defined.js'\n\nclass Identity {\n  constructor (id, publicKey, idSignature, pubKeyIdSignature, type, provider) {\n    if (!isDefined(id)) {\n      throw new Error('Identity id is required')\n    }\n\n    if (!isDefined(publicKey)) {\n      throw new Error('Invalid public key')\n    }\n\n    if (!isDefined(idSignature)) {\n      throw new Error('Signature of the id (idSignature) is required')\n    }\n\n    if (!isDefined(pubKeyIdSignature)) {\n      throw new Error('Signature of (publicKey + idSignature) is required')\n    }\n\n    if (!isDefined(type)) {\n      throw new Error('Identity type is required')\n    }\n\n    if (!isDefined(provider)) {\n      throw new Error('Identity provider is required')\n    }\n\n    this._id = id\n    this._publicKey = publicKey\n    this._signatures = Object.assign({}, { id: idSignature }, { publicKey: pubKeyIdSignature })\n    this._type = type\n    this._provider = provider\n  }\n\n  /**\n  * This is only used as a fallback to the clock id when necessary\n  * @return {string} public key hex encoded\n  */\n  get id () {\n    return this._id\n  }\n\n  get publicKey () {\n    return this._publicKey\n  }\n\n  get signatures () {\n    return this._signatures\n  }\n\n  get type () {\n    return this._type\n  }\n\n  get provider () {\n    return this._provider\n  }\n\n  toJSON () {\n    return {\n      id: this.id,\n      publicKey: this.publicKey,\n      signatures: this.signatures,\n      type: this.type\n    }\n  }\n\n  static isIdentity (identity) {\n    return identity.id !== undefined &&\n           identity.publicKey !== undefined &&\n           identity.signatures !== undefined &&\n           identity.signatures.id !== undefined &&\n           identity.signatures.publicKey !== undefined &&\n           identity.type !== undefined\n  }\n\n  static toJSON (identity) {\n    return {\n      id: identity.id,\n      publicKey: identity.publicKey,\n      signatures: identity.signatures,\n      type: identity.type\n    }\n  }\n}\n\nexport default Identity\n","class IdentityProvider {\n  /* Return id of identity (to be signed by orbit-db public key) */\n  async getId (options) {}\n\n  /* Return signature of OrbitDB public key signature */\n  async signIdentity (data, options) {}\n\n  /* Verify a signature of OrbitDB public key signature */\n  static async verifyIdentity (identity) {}\n\n  /* Return the type for this identity provider */\n  static get type () {\n    throw new Error('\\'static get type ()\\' needs to be defined in the inheriting class')\n  }\n\n  /*\n    Return the type for this identity-procider\n    NOTE! This is the only property of the interface that\n    shouldn't be overridden in the inherited IdentityProvider\n  */\n  get type () {\n    return this.constructor.type\n  }\n}\n\nexport default IdentityProvider\n","import IdentityProvider from './interface.js'\nimport Keystore from 'orbit-db-keystore'\nconst type = 'orbitdb'\n\nclass OrbitDBIdentityProvider extends IdentityProvider {\n  constructor (keystore) {\n    super()\n    if (!keystore) {\n      throw new Error('OrbitDBIdentityProvider requires a keystore')\n    }\n    this._keystore = keystore\n  }\n\n  // Returns the type of the identity provider\n  static get type () { return type }\n\n  async getId (options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n\n    const keystore = this._keystore\n    const key = await keystore.getKey(id) || await keystore.createKey(id)\n    return Buffer.from(key.public.marshal()).toString('hex')\n  }\n\n  async signIdentity (data, options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n    const keystore = this._keystore\n    const key = await keystore.getKey(id)\n    if (!key) {\n      throw new Error(`Signing key for '${id}' not found`)\n    }\n\n    return keystore.sign(key, data)\n  }\n\n  static async verifyIdentity (identity) {\n    // Verify that identity was signed by the ID\n    return Keystore.verify(\n      identity.signatures.publicKey,\n      identity.id,\n      identity.publicKey + identity.signatures.id\n    )\n  }\n}\n\nexport default OrbitDBIdentityProvider\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module exposes a list of named identifiers, shared across the parser generator\n// and the parsers that are generated.\n\nmodule.exports = {\n  // Identifies the operator type. Used by the generator\n  // to indicate operator types in the grammar object.\n  // Used by the [parser](./parser.html) when interpreting the grammar object.\n  /* the original ABNF operators */\n  ALT: 1 /* alternation */,\n  CAT: 2 /* concatenation */,\n  REP: 3 /* repetition */,\n  RNM: 4 /* rule name */,\n  TRG: 5 /* terminal range */,\n  TBS: 6 /* terminal binary string, case sensitive */,\n  TLS: 7 /* terminal literal string, case insensitive */,\n  /* the super set, SABNF operators */\n  UDT: 11 /* user-defined terminal */,\n  AND: 12 /* positive look ahead */,\n  NOT: 13 /* negative look ahead */,\n  BKR: 14 /* back reference to a previously matched rule name */,\n  BKA: 15 /* positive look behind */,\n  BKN: 16 /* negative look behind */,\n  ABG: 17 /* anchor - begin of string */,\n  AEN: 18 /* anchor - end of string */,\n  // Used by the parser and the user's `RNM` and `UDT` callback functions.\n  // Identifies the parser state as it traverses the parse tree nodes.\n  // - *ACTIVE* - indicates the downward direction through the parse tree node.\n  // - *MATCH* - indicates the upward direction and a phrase, of length \\> 0, has been successfully matched\n  // - *EMPTY* - indicates the upward direction and a phrase, of length = 0, has been successfully matched\n  // - *NOMATCH* - indicates the upward direction and the parser failed to match any phrase at all\n  ACTIVE: 100,\n  MATCH: 101,\n  EMPTY: 102,\n  NOMATCH: 103,\n  // Used by [`AST` translator](./ast.html) (semantic analysis) and the user's callback functions\n  // to indicate the direction of flow through the `AST` nodes.\n  // - *SEM_PRE* - indicates the downward (pre-branch) direction through the `AST` node.\n  // - *SEM_POST* - indicates the upward (post-branch) direction through the `AST` node.\n  SEM_PRE: 200,\n  SEM_POST: 201,\n  // Used by the user's callback functions to indicate to the `AST` translator (semantic analysis) how to proceed.\n  // - *SEM_OK* - normal return value\n  // - *SEM_SKIP* - if a callback function returns this value from the SEM_PRE state,\n  // the translator will skip processing all `AST` nodes in the branch below the current node.\n  // Ignored if returned from the SEM_POST state.\n  SEM_OK: 300,\n  SEM_SKIP: 301,\n  // Used in attribute generation to distinguish the necessary attribute categories.\n  // - *ATTR_N* - non-recursive\n  // - *ATTR_R* - recursive\n  // - *ATTR_MR* - belongs to a mutually-recursive set\n  ATTR_N: 400,\n  ATTR_R: 401,\n  ATTR_MR: 402,\n  // Look around values indicate whether the parser is in look ahead or look behind mode.\n  // Used by the tracing facility to indicate the look around mode in the trace records display.\n  // - *LOOKAROUND_NONE* - the parser is in normal parsing mode\n  // - *LOOKAROUND_AHEAD* - the parse is in look-ahead mode, phrase matching for operator `AND(&)` or `NOT(!)`\n  // - *LOOKAROUND_BEHIND* - the parse is in look-behind mode, phrase matching for operator `BKA(&&)` or `BKN(!!)`\n  LOOKAROUND_NONE: 500,\n  LOOKAROUND_AHEAD: 501,\n  LOOKAROUND_BEHIND: 502,\n  // Back reference rule mode indicators\n  // - *BKR_MODE_UM* - the back reference is using universal mode\n  // - *BKR_MODE_PM* - the back reference is using parent frame mode\n  // - *BKR_MODE_CS* - the back reference is using case-sensitive phrase matching\n  // - *BKR_MODE_CI* - the back reference is using case-insensitive phrase matching\n  BKR_MODE_UM: 601,\n  BKR_MODE_PM: 602,\n  BKR_MODE_CS: 603,\n  BKR_MODE_CI: 604,\n};\n","module.exports = {\n\n  // Generated by apglib/style.js \n  CLASS_MONOSPACE: 'apg-mono',\n  CLASS_ACTIVE: 'apg-active',\n  CLASS_EMPTY: 'apg-empty',\n  CLASS_MATCH: 'apg-match',\n  CLASS_NOMATCH: 'apg-nomatch',\n  CLASS_LOOKAHEAD: 'apg-lh-match',\n  CLASS_LOOKBEHIND: 'apg-lb-match',\n  CLASS_REMAINDER: 'apg-remainder',\n  CLASS_CTRLCHAR: 'apg-ctrl-char',\n  CLASS_LINEEND: 'apg-line-end',\n  CLASS_ERROR: 'apg-error',\n  CLASS_PHRASE: 'apg-phrase',\n  CLASS_EMPTYPHRASE: 'apg-empty-phrase',\n  CLASS_STATE: 'apg-state',\n  CLASS_STATS: 'apg-stats',\n  CLASS_TRACE: 'apg-trace',\n  CLASS_GRAMMAR: 'apg-grammar',\n  CLASS_RULES: 'apg-rules',\n  CLASS_RULESLINK: 'apg-rules-link',\n  CLASS_ATTRIBUTES: 'apg-attrs',\n}\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-bitwise */\n/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module contains the actual encoding and decoding algorithms.\n// Throws \"RangeError\" exceptions on characters or bytes out of range for the given encoding.\n\n'use strict;';\n\nconst thisThis = this;\n\n/* decoding error codes */\nconst NON_SHORTEST = 0xfffffffc;\nconst TRAILING = 0xfffffffd;\nconst RANGE = 0xfffffffe;\nconst ILL_FORMED = 0xffffffff;\n\n/* mask[n] = 2**n - 1, ie. mask[n] = n bits on. e.g. mask[6] = %b111111 */\nconst mask = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023];\n\n/* ascii[n] = 'HH', where 0xHH = n, eg. ascii[254] = 'FE' */\nconst ascii = [\n  '00',\n  '01',\n  '02',\n  '03',\n  '04',\n  '05',\n  '06',\n  '07',\n  '08',\n  '09',\n  '0A',\n  '0B',\n  '0C',\n  '0D',\n  '0E',\n  '0F',\n  '10',\n  '11',\n  '12',\n  '13',\n  '14',\n  '15',\n  '16',\n  '17',\n  '18',\n  '19',\n  '1A',\n  '1B',\n  '1C',\n  '1D',\n  '1E',\n  '1F',\n  '20',\n  '21',\n  '22',\n  '23',\n  '24',\n  '25',\n  '26',\n  '27',\n  '28',\n  '29',\n  '2A',\n  '2B',\n  '2C',\n  '2D',\n  '2E',\n  '2F',\n  '30',\n  '31',\n  '32',\n  '33',\n  '34',\n  '35',\n  '36',\n  '37',\n  '38',\n  '39',\n  '3A',\n  '3B',\n  '3C',\n  '3D',\n  '3E',\n  '3F',\n  '40',\n  '41',\n  '42',\n  '43',\n  '44',\n  '45',\n  '46',\n  '47',\n  '48',\n  '49',\n  '4A',\n  '4B',\n  '4C',\n  '4D',\n  '4E',\n  '4F',\n  '50',\n  '51',\n  '52',\n  '53',\n  '54',\n  '55',\n  '56',\n  '57',\n  '58',\n  '59',\n  '5A',\n  '5B',\n  '5C',\n  '5D',\n  '5E',\n  '5F',\n  '60',\n  '61',\n  '62',\n  '63',\n  '64',\n  '65',\n  '66',\n  '67',\n  '68',\n  '69',\n  '6A',\n  '6B',\n  '6C',\n  '6D',\n  '6E',\n  '6F',\n  '70',\n  '71',\n  '72',\n  '73',\n  '74',\n  '75',\n  '76',\n  '77',\n  '78',\n  '79',\n  '7A',\n  '7B',\n  '7C',\n  '7D',\n  '7E',\n  '7F',\n  '80',\n  '81',\n  '82',\n  '83',\n  '84',\n  '85',\n  '86',\n  '87',\n  '88',\n  '89',\n  '8A',\n  '8B',\n  '8C',\n  '8D',\n  '8E',\n  '8F',\n  '90',\n  '91',\n  '92',\n  '93',\n  '94',\n  '95',\n  '96',\n  '97',\n  '98',\n  '99',\n  '9A',\n  '9B',\n  '9C',\n  '9D',\n  '9E',\n  '9F',\n  'A0',\n  'A1',\n  'A2',\n  'A3',\n  'A4',\n  'A5',\n  'A6',\n  'A7',\n  'A8',\n  'A9',\n  'AA',\n  'AB',\n  'AC',\n  'AD',\n  'AE',\n  'AF',\n  'B0',\n  'B1',\n  'B2',\n  'B3',\n  'B4',\n  'B5',\n  'B6',\n  'B7',\n  'B8',\n  'B9',\n  'BA',\n  'BB',\n  'BC',\n  'BD',\n  'BE',\n  'BF',\n  'C0',\n  'C1',\n  'C2',\n  'C3',\n  'C4',\n  'C5',\n  'C6',\n  'C7',\n  'C8',\n  'C9',\n  'CA',\n  'CB',\n  'CC',\n  'CD',\n  'CE',\n  'CF',\n  'D0',\n  'D1',\n  'D2',\n  'D3',\n  'D4',\n  'D5',\n  'D6',\n  'D7',\n  'D8',\n  'D9',\n  'DA',\n  'DB',\n  'DC',\n  'DD',\n  'DE',\n  'DF',\n  'E0',\n  'E1',\n  'E2',\n  'E3',\n  'E4',\n  'E5',\n  'E6',\n  'E7',\n  'E8',\n  'E9',\n  'EA',\n  'EB',\n  'EC',\n  'ED',\n  'EE',\n  'EF',\n  'F0',\n  'F1',\n  'F2',\n  'F3',\n  'F4',\n  'F5',\n  'F6',\n  'F7',\n  'F8',\n  'F9',\n  'FA',\n  'FB',\n  'FC',\n  'FD',\n  'FE',\n  'FF',\n];\n\n/* vector of base 64 characters */\nconst base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split('');\n\n/* vector of base 64 character codes */\nconst base64codes = [];\nbase64chars.forEach((char) => {\n  base64codes.push(char.charCodeAt(0));\n});\n\n// The UTF8 algorithms.\nexports.utf8 = {\n  encode(chars) {\n    const bytes = [];\n    chars.forEach((char) => {\n      if (char >= 0 && char <= 0x7f) {\n        bytes.push(char);\n      } else if (char <= 0x7ff) {\n        bytes.push(0xc0 + ((char >> 6) & mask[5]));\n        bytes.push(0x80 + (char & mask[6]));\n      } else if (char < 0xd800 || (char > 0xdfff && char <= 0xffff)) {\n        bytes.push(0xe0 + ((char >> 12) & mask[4]));\n        bytes.push(0x80 + ((char >> 6) & mask[6]));\n        bytes.push(0x80 + (char & mask[6]));\n      } else if (char >= 0x10000 && char <= 0x10ffff) {\n        const u = (char >> 16) & mask[5];\n        bytes.push(0xf0 + (u >> 2));\n        bytes.push(0x80 + ((u & mask[2]) << 4) + ((char >> 12) & mask[4]));\n        bytes.push(0x80 + ((char >> 6) & mask[6]));\n        bytes.push(0x80 + (char & mask[6]));\n      } else {\n        throw new RangeError(`utf8.encode: character out of range: char: ${char}`);\n      }\n    });\n    return Buffer.from(bytes);\n  },\n  decode(buf, bom) {\n    /* bytes functions return error for non-shortest forms & values out of range */\n    function bytes2(b1, b2) {\n      /* U+0080..U+07FF */\n      /* 00000000 00000yyy yyxxxxxx | 110yyyyy 10xxxxxx */\n      if ((b2 & 0xc0) !== 0x80) {\n        return TRAILING;\n      }\n      const x = ((b1 & mask[5]) << 6) + (b2 & mask[6]);\n      if (x < 0x80) {\n        return NON_SHORTEST;\n      }\n      return x;\n    }\n    function bytes3(b1, b2, b3) {\n      /* U+0800..U+FFFF */\n      /* 00000000 zzzzyyyy yyxxxxxx | 1110zzzz 10yyyyyy 10xxxxxx */\n      if ((b3 & 0xc0) !== 0x80 || (b2 & 0xc0) !== 0x80) {\n        return TRAILING;\n      }\n      const x = ((b1 & mask[4]) << 12) + ((b2 & mask[6]) << 6) + (b3 & mask[6]);\n      if (x < 0x800) {\n        return NON_SHORTEST;\n      }\n      if (x >= 0xd800 && x <= 0xdfff) {\n        return RANGE;\n      }\n      return x;\n    }\n    function bytes4(b1, b2, b3, b4) {\n      /* U+10000..U+10FFFF */\n      /* 000uuuuu zzzzyyyy yyxxxxxx | 11110uuu 10uuzzzz 10yyyyyy 10xxxxxx */\n      if ((b4 & 0xc0) !== 0x80 || (b3 & 0xc0) !== 0x80 || (b2 & 0xc0) !== 0x80) {\n        return TRAILING;\n      }\n      const x =\n        ((((b1 & mask[3]) << 2) + ((b2 >> 4) & mask[2])) << 16) +\n        ((b2 & mask[4]) << 12) +\n        ((b3 & mask[6]) << 6) +\n        (b4 & mask[6]);\n      if (x < 0x10000) {\n        return NON_SHORTEST;\n      }\n      if (x > 0x10ffff) {\n        return RANGE;\n      }\n      return x;\n    }\n    let c;\n    let b1;\n    let i1;\n    let i2;\n    let i3;\n    let inc;\n    const len = buf.length;\n    let i = bom ? 3 : 0;\n    const chars = [];\n    while (i < len) {\n      b1 = buf[i];\n      c = ILL_FORMED;\n      const TRUE = true;\n      while (TRUE) {\n        if (b1 >= 0 && b1 <= 0x7f) {\n          /* U+0000..U+007F 00..7F */\n          c = b1;\n          inc = 1;\n          break;\n        }\n        i1 = i + 1;\n        if (i1 < len && b1 >= 0xc2 && b1 <= 0xdf) {\n          /* U+0080..U+07FF C2..DF 80..BF */\n          c = bytes2(b1, buf[i1]);\n          inc = 2;\n          break;\n        }\n        i2 = i + 2;\n        if (i2 < len && b1 >= 0xe0 && b1 <= 0xef) {\n          /* U+0800..U+FFFF */\n          c = bytes3(b1, buf[i1], buf[i2]);\n          inc = 3;\n          break;\n        }\n        i3 = i + 3;\n        if (i3 < len && b1 >= 0xf0 && b1 <= 0xf4) {\n          /* U+10000..U+10FFFF */\n          c = bytes4(b1, buf[i1], buf[i2], buf[i3]);\n          inc = 4;\n          break;\n        }\n        /* if we fall through to here, it is an ill-formed sequence */\n        break;\n      }\n      if (c > 0x10ffff) {\n        const at = `byte[${i}]`;\n        if (c === ILL_FORMED) {\n          throw new RangeError(`utf8.decode: ill-formed UTF8 byte sequence found at: ${at}`);\n        }\n        if (c === TRAILING) {\n          throw new RangeError(`utf8.decode: illegal trailing byte found at: ${at}`);\n        }\n        if (c === RANGE) {\n          throw new RangeError(`utf8.decode: code point out of range found at: ${at}`);\n        }\n        if (c === NON_SHORTEST) {\n          throw new RangeError(`utf8.decode: non-shortest form found at: ${at}`);\n        }\n        throw new RangeError(`utf8.decode: unrecognized error found at: ${at}`);\n      }\n      chars.push(c);\n      i += inc;\n    }\n    return chars;\n  },\n};\n\n// The UTF16BE algorithms.\nexports.utf16be = {\n  encode(chars) {\n    const bytes = [];\n    let char;\n    let h;\n    let l;\n    for (let i = 0; i < chars.length; i += 1) {\n      char = chars[i];\n      if ((char >= 0 && char <= 0xd7ff) || (char >= 0xe000 && char <= 0xffff)) {\n        bytes.push((char >> 8) & mask[8]);\n        bytes.push(char & mask[8]);\n      } else if (char >= 0x10000 && char <= 0x10ffff) {\n        l = char - 0x10000;\n        h = 0xd800 + (l >> 10);\n        l = 0xdc00 + (l & mask[10]);\n        bytes.push((h >> 8) & mask[8]);\n        bytes.push(h & mask[8]);\n        bytes.push((l >> 8) & mask[8]);\n        bytes.push(l & mask[8]);\n      } else {\n        throw new RangeError(`utf16be.encode: UTF16BE value out of range: char[${i}]: ${char}`);\n      }\n    }\n    return Buffer.from(bytes);\n  },\n  decode(buf, bom) {\n    /* assumes caller has insured that buf is a Buffer of bytes */\n    if (buf.length % 2 > 0) {\n      throw new RangeError(`utf16be.decode: data length must be even multiple of 2: length: ${buf.length}`);\n    }\n    const chars = [];\n    const len = buf.length;\n    let i = bom ? 2 : 0;\n    let j = 0;\n    let c;\n    let inc;\n    let i1;\n    let i3;\n    let high;\n    let low;\n    while (i < len) {\n      const TRUE = true;\n      while (TRUE) {\n        i1 = i + 1;\n        if (i1 < len) {\n          high = (buf[i] << 8) + buf[i1];\n          if (high < 0xd800 || high > 0xdfff) {\n            c = high;\n            inc = 2;\n            break;\n          }\n          i3 = i + 3;\n          if (i3 < len) {\n            low = (buf[i + 2] << 8) + buf[i3];\n            if (high <= 0xdbff && low >= 0xdc00 && low <= 0xdfff) {\n              c = 0x10000 + ((high - 0xd800) << 10) + (low - 0xdc00);\n              inc = 4;\n              break;\n            }\n          }\n        }\n        /* if we fall through to here, it is an ill-formed sequence */\n        throw new RangeError(`utf16be.decode: ill-formed UTF16BE byte sequence found: byte[${i}]`);\n      }\n      chars[j++] = c;\n      i += inc;\n    }\n    return chars;\n  },\n};\n\n// The UTF16LE algorithms.\nexports.utf16le = {\n  encode(chars) {\n    const bytes = [];\n    let char;\n    let h;\n    let l;\n    for (let i = 0; i < chars.length; i += 1) {\n      char = chars[i];\n      if ((char >= 0 && char <= 0xd7ff) || (char >= 0xe000 && char <= 0xffff)) {\n        bytes.push(char & mask[8]);\n        bytes.push((char >> 8) & mask[8]);\n      } else if (char >= 0x10000 && char <= 0x10ffff) {\n        l = char - 0x10000;\n        h = 0xd800 + (l >> 10);\n        l = 0xdc00 + (l & mask[10]);\n        bytes.push(h & mask[8]);\n        bytes.push((h >> 8) & mask[8]);\n        bytes.push(l & mask[8]);\n        bytes.push((l >> 8) & mask[8]);\n      } else {\n        throw new RangeError(`utf16le.encode: UTF16LE value out of range: char[${i}]: ${char}`);\n      }\n    }\n    return Buffer.from(bytes);\n  },\n  decode(buf, bom) {\n    /* assumes caller has insured that buf is a Buffer of bytes */\n    if (buf.length % 2 > 0) {\n      throw new RangeError(`utf16le.decode: data length must be even multiple of 2: length: ${buf.length}`);\n    }\n    const chars = [];\n    const len = buf.length;\n    let i = bom ? 2 : 0;\n    let j = 0;\n    let c;\n    let inc;\n    let i1;\n    let i3;\n    let high;\n    let low;\n    while (i < len) {\n      const TRUE = true;\n      while (TRUE) {\n        i1 = i + 1;\n        if (i1 < len) {\n          high = (buf[i1] << 8) + buf[i];\n          if (high < 0xd800 || high > 0xdfff) {\n            c = high;\n            inc = 2;\n            break;\n          }\n          i3 = i + 3;\n          if (i3 < len) {\n            low = (buf[i3] << 8) + buf[i + 2];\n            if (high <= 0xdbff && low >= 0xdc00 && low <= 0xdfff) {\n              c = 0x10000 + ((high - 0xd800) << 10) + (low - 0xdc00);\n              inc = 4;\n              break;\n            }\n          }\n        }\n        /* if we fall through to here, it is an ill-formed sequence */\n        throw new RangeError(`utf16le.decode: ill-formed UTF16LE byte sequence found: byte[${i}]`);\n      }\n      chars[j++] = c;\n      i += inc;\n    }\n    return chars;\n  },\n};\n\n// The UTF32BE algorithms.\nexports.utf32be = {\n  encode(chars) {\n    const buf = Buffer.alloc(chars.length * 4);\n    let i = 0;\n    chars.forEach((char) => {\n      if ((char >= 0xd800 && char <= 0xdfff) || char > 0x10ffff) {\n        throw new RangeError(`utf32be.encode: UTF32BE character code out of range: char[${i / 4}]: ${char}`);\n      }\n      buf[i++] = (char >> 24) & mask[8];\n      buf[i++] = (char >> 16) & mask[8];\n      buf[i++] = (char >> 8) & mask[8];\n      buf[i++] = char & mask[8];\n    });\n    return buf;\n  },\n  decode(buf, bom) {\n    /* caller to insure buf is a Buffer of bytes */\n    if (buf.length % 4 > 0) {\n      throw new RangeError(`utf32be.decode: UTF32BE byte length must be even multiple of 4: length: ${buf.length}`);\n    }\n    const chars = [];\n    let i = bom ? 4 : 0;\n    for (; i < buf.length; i += 4) {\n      const char = (buf[i] << 24) + (buf[i + 1] << 16) + (buf[i + 2] << 8) + buf[i + 3];\n      if ((char >= 0xd800 && char <= 0xdfff) || char > 0x10ffff) {\n        throw new RangeError(`utf32be.decode: UTF32BE character code out of range: char[${i / 4}]: ${char}`);\n      }\n      chars.push(char);\n    }\n    return chars;\n  },\n};\n\n// The UTF32LE algorithms.\nexports.utf32le = {\n  encode(chars) {\n    const buf = Buffer.alloc(chars.length * 4);\n    let i = 0;\n    chars.forEach((char) => {\n      if ((char >= 0xd800 && char <= 0xdfff) || char > 0x10ffff) {\n        throw new RangeError(`utf32le.encode: UTF32LE character code out of range: char[${i / 4}]: ${char}`);\n      }\n      buf[i++] = char & mask[8];\n      buf[i++] = (char >> 8) & mask[8];\n      buf[i++] = (char >> 16) & mask[8];\n      buf[i++] = (char >> 24) & mask[8];\n    });\n    return buf;\n  },\n  decode(buf, bom) {\n    /* caller to insure buf is a Buffer of bytes */\n    if (buf.length % 4 > 0) {\n      throw new RangeError(`utf32be.decode: UTF32LE byte length must be even multiple of 4: length: ${buf.length}`);\n    }\n    const chars = [];\n    let i = bom ? 4 : 0;\n    for (; i < buf.length; i += 4) {\n      const char = (buf[i + 3] << 24) + (buf[i + 2] << 16) + (buf[i + 1] << 8) + buf[i];\n      if ((char >= 0xd800 && char <= 0xdfff) || char > 0x10ffff) {\n        throw new RangeError(`utf32le.encode: UTF32LE character code out of range: char[${i / 4}]: ${char}`);\n      }\n      chars.push(char);\n    }\n    return chars;\n  },\n};\n\n// The UINT7 algorithms. ASCII or 7-bit unsigned integers.\nexports.uint7 = {\n  encode(chars) {\n    const buf = Buffer.alloc(chars.length);\n    for (let i = 0; i < chars.length; i += 1) {\n      if (chars[i] > 0x7f) {\n        throw new RangeError(`uint7.encode: UINT7 character code out of range: char[${i}]: ${chars[i]}`);\n      }\n      buf[i] = chars[i];\n    }\n    return buf;\n  },\n  decode(buf) {\n    const chars = [];\n    for (let i = 0; i < buf.length; i += 1) {\n      if (buf[i] > 0x7f) {\n        throw new RangeError(`uint7.decode: UINT7 character code out of range: byte[${i}]: ${buf[i]}`);\n      }\n      chars[i] = buf[i];\n    }\n    return chars;\n  },\n};\n\n// The UINT8 algorithms. BINARY, Latin 1 or 8-bit unsigned integers.\nexports.uint8 = {\n  encode(chars) {\n    const buf = Buffer.alloc(chars.length);\n    for (let i = 0; i < chars.length; i += 1) {\n      if (chars[i] > 0xff) {\n        throw new RangeError(`uint8.encode: UINT8 character code out of range: char[${i}]: ${chars[i]}`);\n      }\n      buf[i] = chars[i];\n    }\n    return buf;\n  },\n  decode(buf) {\n    const chars = [];\n    for (let i = 0; i < buf.length; i += 1) {\n      chars[i] = buf[i];\n    }\n    return chars;\n  },\n};\n\n// The UINT16BE algorithms. Big-endian 16-bit unsigned integers.\nexports.uint16be = {\n  encode(chars) {\n    const buf = Buffer.alloc(chars.length * 2);\n    let i = 0;\n    chars.forEach((char) => {\n      if (char > 0xffff) {\n        throw new RangeError(`uint16be.encode: UINT16BE character code out of range: char[${i / 2}]: ${char}`);\n      }\n      buf[i++] = (char >> 8) & mask[8];\n      buf[i++] = char & mask[8];\n    });\n    return buf;\n  },\n  decode(buf) {\n    if (buf.length % 2 > 0) {\n      throw new RangeError(`uint16be.decode: UINT16BE byte length must be even multiple of 2: length: ${buf.length}`);\n    }\n    const chars = [];\n    for (let i = 0; i < buf.length; i += 2) {\n      chars.push((buf[i] << 8) + buf[i + 1]);\n    }\n    return chars;\n  },\n};\n\n// The UINT16LE algorithms. Little-endian 16-bit unsigned integers.\nexports.uint16le = {\n  encode(chars) {\n    const buf = Buffer.alloc(chars.length * 2);\n    let i = 0;\n    chars.forEach((char) => {\n      if (char > 0xffff) {\n        throw new RangeError(`uint16le.encode: UINT16LE character code out of range: char[${i / 2}]: ${char}`);\n      }\n      buf[i++] = char & mask[8];\n      buf[i++] = (char >> 8) & mask[8];\n    });\n    return buf;\n  },\n  decode(buf) {\n    if (buf.length % 2 > 0) {\n      throw new RangeError(`uint16le.decode: UINT16LE byte length must be even multiple of 2: length: ${buf.length}`);\n    }\n    const chars = [];\n    for (let i = 0; i < buf.length; i += 2) {\n      chars.push((buf[i + 1] << 8) + buf[i]);\n    }\n    return chars;\n  },\n};\n\n// The UINT32BE algorithms. Big-endian 32-bit unsigned integers.\nexports.uint32be = {\n  encode(chars) {\n    const buf = Buffer.alloc(chars.length * 4);\n    let i = 0;\n    chars.forEach((char) => {\n      buf[i++] = (char >> 24) & mask[8];\n      buf[i++] = (char >> 16) & mask[8];\n      buf[i++] = (char >> 8) & mask[8];\n      buf[i++] = char & mask[8];\n    });\n    return buf;\n  },\n  decode(buf) {\n    if (buf.length % 4 > 0) {\n      throw new RangeError(`uint32be.decode: UINT32BE byte length must be even multiple of 4: length: ${buf.length}`);\n    }\n    const chars = [];\n    for (let i = 0; i < buf.length; i += 4) {\n      chars.push((buf[i] << 24) + (buf[i + 1] << 16) + (buf[i + 2] << 8) + buf[i + 3]);\n    }\n    return chars;\n  },\n};\n\n// The UINT32LE algorithms. Little-endian 32-bit unsigned integers.\nexports.uint32le = {\n  encode(chars) {\n    const buf = Buffer.alloc(chars.length * 4);\n    let i = 0;\n    chars.forEach((char) => {\n      buf[i++] = char & mask[8];\n      buf[i++] = (char >> 8) & mask[8];\n      buf[i++] = (char >> 16) & mask[8];\n      buf[i++] = (char >> 24) & mask[8];\n    });\n    return buf;\n  },\n  decode(buf) {\n    /* caller to insure buf is a Buffer of bytes */\n    if (buf.length % 4 > 0) {\n      throw new RangeError(`uint32le.decode: UINT32LE byte length must be even multiple of 4: length: ${buf.length}`);\n    }\n    const chars = [];\n    for (let i = 0; i < buf.length; i += 4) {\n      chars.push((buf[i + 3] << 24) + (buf[i + 2] << 16) + (buf[i + 1] << 8) + buf[i]);\n    }\n    return chars;\n  },\n};\n\n// The STRING algorithms. Converts JavaScript strings to Array of 32-bit integers and vice versa.\n// Uses the node.js Buffer's native \"utf16le\" capabilites.\nexports.string = {\n  encode(chars) {\n    return thisThis.utf16le.encode(chars).toString('utf16le');\n  },\n  decode(str) {\n    return thisThis.utf16le.decode(Buffer.from(str, 'utf16le'), 0);\n  },\n};\n\n// The ESCAPED algorithms.\n// Note that ESCAPED format contains only ASCII characters.\n// The characters are always in the form of a Buffer of bytes.\nexports.escaped = {\n  // Encodes an Array of 32-bit integers into ESCAPED format.\n  encode(chars) {\n    const bytes = [];\n    for (let i = 0; i < chars.length; i += 1) {\n      const char = chars[i];\n      if (char === 96) {\n        bytes.push(char);\n        bytes.push(char);\n      } else if (char === 10) {\n        bytes.push(char);\n      } else if (char >= 32 && char <= 126) {\n        bytes.push(char);\n      } else {\n        let str = '';\n        if (char >= 0 && char <= 31) {\n          str += `\\`x${ascii[char]}`;\n        } else if (char >= 127 && char <= 255) {\n          str += `\\`x${ascii[char]}`;\n        } else if (char >= 0x100 && char <= 0xffff) {\n          str += `\\`u${ascii[(char >> 8) & mask[8]]}${ascii[char & mask[8]]}`;\n        } else if (char >= 0x10000 && char <= 0xffffffff) {\n          str += '`u{';\n          const digit = (char >> 24) & mask[8];\n          if (digit > 0) {\n            str += ascii[digit];\n          }\n          str += `${ascii[(char >> 16) & mask[8]] + ascii[(char >> 8) & mask[8]] + ascii[char & mask[8]]}}`;\n        } else {\n          throw new Error('escape.encode(char): char > 0xffffffff not allowed');\n        }\n        const buf = Buffer.from(str);\n        buf.forEach((b) => {\n          bytes.push(b);\n        });\n      }\n    }\n    return Buffer.from(bytes);\n  },\n  // Decodes ESCAPED format from a Buffer of bytes to an Array of 32-bit integers.\n  decode(buf) {\n    function isHex(hex) {\n      if ((hex >= 48 && hex <= 57) || (hex >= 65 && hex <= 70) || (hex >= 97 && hex <= 102)) {\n        return true;\n      }\n      return false;\n    }\n    function getx(i, len, bufArg) {\n      const ret = { char: null, nexti: i + 2, error: true };\n      if (i + 1 < len) {\n        if (isHex(bufArg[i]) && isHex(bufArg[i + 1])) {\n          const str = String.fromCodePoint(bufArg[i], bufArg[i + 1]);\n          ret.char = parseInt(str, 16);\n          if (!Number.isNaN(ret.char)) {\n            ret.error = false;\n          }\n        }\n      }\n      return ret;\n    }\n    function getu(i, len, bufArg) {\n      const ret = { char: null, nexti: i + 4, error: true };\n      if (i + 3 < len) {\n        if (isHex(bufArg[i]) && isHex(bufArg[i + 1]) && isHex(bufArg[i + 2]) && isHex(bufArg[i + 3])) {\n          const str = String.fromCodePoint(bufArg[i], bufArg[i + 1], bufArg[i + 2], bufArg[i + 3]);\n          ret.char = parseInt(str, 16);\n          if (!Number.isNaN(ret.char)) {\n            ret.error = false;\n          }\n        }\n      }\n      return ret;\n    }\n    function getU(i, len, bufArg) {\n      const ret = { char: null, nexti: i + 4, error: true };\n      let str = '';\n      while (i < len && isHex(bufArg[i])) {\n        str += String.fromCodePoint(bufArg[i]);\n        // eslint-disable-next-line no-param-reassign\n        i += 1;\n      }\n      ret.char = parseInt(str, 16);\n      if (bufArg[i] === 125 && !Number.isNaN(ret.char)) {\n        ret.error = false;\n      }\n      ret.nexti = i + 1;\n      return ret;\n    }\n    const chars = [];\n    const len = buf.length;\n    let i1;\n    let ret;\n    let error;\n    let i = 0;\n    while (i < len) {\n      const TRUE = true;\n      while (TRUE) {\n        error = true;\n        if (buf[i] !== 96) {\n          /* unescaped character */\n          chars.push(buf[i]);\n          i += 1;\n          error = false;\n          break;\n        }\n        i1 = i + 1;\n        if (i1 >= len) {\n          break;\n        }\n        if (buf[i1] === 96) {\n          /* escaped grave accent */\n          chars.push(96);\n          i += 2;\n          error = false;\n          break;\n        }\n        if (buf[i1] === 120) {\n          ret = getx(i1 + 1, len, buf);\n          if (ret.error) {\n            break;\n          }\n          /* escaped hex */\n          chars.push(ret.char);\n          i = ret.nexti;\n          error = false;\n          break;\n        }\n        if (buf[i1] === 117) {\n          if (buf[i1 + 1] === 123) {\n            ret = getU(i1 + 2, len, buf);\n            if (ret.error) {\n              break;\n            }\n            /* escaped utf-32 */\n            chars.push(ret.char);\n            i = ret.nexti;\n            error = false;\n            break;\n          }\n          ret = getu(i1 + 1, len, buf);\n          if (ret.error) {\n            break;\n          }\n          /* escaped utf-16 */\n          chars.push(ret.char);\n          i = ret.nexti;\n          error = false;\n          break;\n        }\n        break;\n      }\n      if (error) {\n        throw new Error(`escaped.decode: ill-formed escape sequence at buf[${i}]`);\n      }\n    }\n    return chars;\n  },\n};\n\n// The line end conversion algorigthms.\nconst CR = 13;\nconst LF = 10;\nexports.lineEnds = {\n  crlf(chars) {\n    const lfchars = [];\n    let i = 0;\n    while (i < chars.length) {\n      switch (chars[i]) {\n        case CR:\n          if (i + 1 < chars.length && chars[i + 1] === LF) {\n            i += 2;\n          } else {\n            i += 1;\n          }\n          lfchars.push(CR);\n          lfchars.push(LF);\n          break;\n        case LF:\n          lfchars.push(CR);\n          lfchars.push(LF);\n          i += 1;\n          break;\n        default:\n          lfchars.push(chars[i]);\n          i += 1;\n          break;\n      }\n    }\n    if (lfchars.length > 0 && lfchars[lfchars.length - 1] !== LF) {\n      lfchars.push(CR);\n      lfchars.push(LF);\n    }\n    return lfchars;\n  },\n  lf(chars) {\n    const lfchars = [];\n    let i = 0;\n    while (i < chars.length) {\n      switch (chars[i]) {\n        case CR:\n          if (i + 1 < chars.length && chars[i + 1] === LF) {\n            i += 2;\n          } else {\n            i += 1;\n          }\n          lfchars.push(LF);\n          break;\n        case LF:\n          lfchars.push(LF);\n          i += 1;\n          break;\n        default:\n          lfchars.push(chars[i]);\n          i += 1;\n          break;\n      }\n    }\n    if (lfchars.length > 0 && lfchars[lfchars.length - 1] !== LF) {\n      lfchars.push(LF);\n    }\n    return lfchars;\n  },\n};\n\n// The base 64 algorithms.\nexports.base64 = {\n  encode(buf) {\n    if (buf.length === 0) {\n      return Buffer.alloc(0);\n    }\n    let i;\n    let j;\n    let n;\n    let tail = buf.length % 3;\n    tail = tail > 0 ? 3 - tail : 0;\n    let units = (buf.length + tail) / 3;\n    const base64 = Buffer.alloc(units * 4);\n    if (tail > 0) {\n      units -= 1;\n    }\n    i = 0;\n    j = 0;\n    for (let u = 0; u < units; u += 1) {\n      n = buf[i++] << 16;\n      n += buf[i++] << 8;\n      n += buf[i++];\n      base64[j++] = base64codes[(n >> 18) & mask[6]];\n      base64[j++] = base64codes[(n >> 12) & mask[6]];\n      base64[j++] = base64codes[(n >> 6) & mask[6]];\n      base64[j++] = base64codes[n & mask[6]];\n    }\n    if (tail === 0) {\n      return base64;\n    }\n    if (tail === 1) {\n      n = buf[i++] << 16;\n      n += buf[i] << 8;\n      base64[j++] = base64codes[(n >> 18) & mask[6]];\n      base64[j++] = base64codes[(n >> 12) & mask[6]];\n      base64[j++] = base64codes[(n >> 6) & mask[6]];\n      base64[j] = base64codes[64];\n      return base64;\n    }\n    if (tail === 2) {\n      n = buf[i] << 16;\n      base64[j++] = base64codes[(n >> 18) & mask[6]];\n      base64[j++] = base64codes[(n >> 12) & mask[6]];\n      base64[j++] = base64codes[64];\n      base64[j] = base64codes[64];\n      return base64;\n    }\n    return undefined;\n  },\n  decode(codes) {\n    /* remove white space and ctrl characters, validate & translate characters */\n    function validate(buf) {\n      const chars = [];\n      let tail = 0;\n      for (let i = 0; i < buf.length; i += 1) {\n        const char = buf[i];\n        const TRUE = true;\n        while (TRUE) {\n          if (char === 32 || char === 9 || char === 10 || char === 13) {\n            break;\n          }\n          if (char >= 65 && char <= 90) {\n            chars.push(char - 65);\n            break;\n          }\n          if (char >= 97 && char <= 122) {\n            chars.push(char - 71);\n            break;\n          }\n          if (char >= 48 && char <= 57) {\n            chars.push(char + 4);\n            break;\n          }\n          if (char === 43) {\n            chars.push(62);\n            break;\n          }\n          if (char === 47) {\n            chars.push(63);\n            break;\n          }\n          if (char === 61) {\n            chars.push(64);\n            tail += 1;\n            break;\n          }\n          /* invalid character */\n          throw new RangeError(`base64.decode: invalid character buf[${i}]: ${char}`);\n        }\n      }\n      /* validate length */\n      if (chars.length % 4 > 0) {\n        throw new RangeError(`base64.decode: string length not integral multiple of 4: ${chars.length}`);\n      }\n      /* validate tail */\n      switch (tail) {\n        case 0:\n          break;\n        case 1:\n          if (chars[chars.length - 1] !== 64) {\n            throw new RangeError('base64.decode: one tail character found: not last character');\n          }\n          break;\n        case 2:\n          if (chars[chars.length - 1] !== 64 || chars[chars.length - 2] !== 64) {\n            throw new RangeError('base64.decode: two tail characters found: not last characters');\n          }\n          break;\n        default:\n          throw new RangeError(`base64.decode: more than two tail characters found: ${tail}`);\n      }\n      return { tail, buf: Buffer.from(chars) };\n    }\n\n    if (codes.length === 0) {\n      return Buffer.alloc(0);\n    }\n    const val = validate(codes);\n    const { tail } = val;\n    const base64 = val.buf;\n    let i;\n    let j;\n    let n;\n    let units = base64.length / 4;\n    const buf = Buffer.alloc(units * 3 - tail);\n    if (tail > 0) {\n      units -= 1;\n    }\n    j = 0;\n    i = 0;\n    for (let u = 0; u < units; u += 1) {\n      n = base64[i++] << 18;\n      n += base64[i++] << 12;\n      n += base64[i++] << 6;\n      n += base64[i++];\n      buf[j++] = (n >> 16) & mask[8];\n      buf[j++] = (n >> 8) & mask[8];\n      buf[j++] = n & mask[8];\n    }\n    if (tail === 1) {\n      n = base64[i++] << 18;\n      n += base64[i++] << 12;\n      n += base64[i] << 6;\n      buf[j++] = (n >> 16) & mask[8];\n      buf[j] = (n >> 8) & mask[8];\n    }\n    if (tail === 2) {\n      n = base64[i++] << 18;\n      n += base64[i++] << 12;\n      buf[j] = (n >> 16) & mask[8];\n    }\n    return buf;\n  },\n  // Converts a base 64 Buffer of bytes to a JavaScript string with line breaks.\n  toString(buf) {\n    if (buf.length % 4 > 0) {\n      throw new RangeError(`base64.toString: input buffer length not multiple of 4: ${buf.length}`);\n    }\n    let str = '';\n    let lineLen = 0;\n    function buildLine(c1, c2, c3, c4) {\n      switch (lineLen) {\n        case 76:\n          str += `\\r\\n${c1}${c2}${c3}${c4}`;\n          lineLen = 4;\n          break;\n        case 75:\n          str += `${c1}\\r\\n${c2}${c3}${c4}`;\n          lineLen = 3;\n          break;\n        case 74:\n          str += `${c1 + c2}\\r\\n${c3}${c4}`;\n          lineLen = 2;\n          break;\n        case 73:\n          str += `${c1 + c2 + c3}\\r\\n${c4}`;\n          lineLen = 1;\n          break;\n        default:\n          str += c1 + c2 + c3 + c4;\n          lineLen += 4;\n          break;\n      }\n    }\n    function validate(c) {\n      if (c >= 65 && c <= 90) {\n        return true;\n      }\n      if (c >= 97 && c <= 122) {\n        return true;\n      }\n      if (c >= 48 && c <= 57) {\n        return true;\n      }\n      if (c === 43) {\n        return true;\n      }\n      if (c === 47) {\n        return true;\n      }\n      if (c === 61) {\n        return true;\n      }\n      return false;\n    }\n    for (let i = 0; i < buf.length; i += 4) {\n      for (let j = i; j < i + 4; j += 1) {\n        if (!validate(buf[j])) {\n          throw new RangeError(`base64.toString: buf[${j}]: ${buf[j]} : not valid base64 character code`);\n        }\n      }\n      buildLine(\n        String.fromCharCode(buf[i]),\n        String.fromCharCode(buf[i + 1]),\n        String.fromCharCode(buf[i + 2]),\n        String.fromCharCode(buf[i + 3])\n      );\n    }\n    return str;\n  },\n};\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module exposes the public encoding, decoding and conversion functions.\n// Its private functions provide the disassembling and interpetation of the source and destination encoding types.\n// In the case of Unicode encodings, private functions determine the presence of Byte Order Marks (BOMs), if any.\n//\n// Throws \"TypeError\" exceptions on input errors.\n//\n\n'use strict;';\n\nconst thisThis = this;\nconst trans = require('./transformers');\n\n/* types */\nconst UTF8 = 'UTF8';\nconst UTF16 = 'UTF16';\nconst UTF16BE = 'UTF16BE';\nconst UTF16LE = 'UTF16LE';\nconst UTF32 = 'UTF32';\nconst UTF32BE = 'UTF32BE';\nconst UTF32LE = 'UTF32LE';\nconst UINT7 = 'UINT7';\nconst ASCII = 'ASCII';\nconst BINARY = 'BINARY';\nconst UINT8 = 'UINT8';\nconst UINT16 = 'UINT16';\nconst UINT16LE = 'UINT16LE';\nconst UINT16BE = 'UINT16BE';\nconst UINT32 = 'UINT32';\nconst UINT32LE = 'UINT32LE';\nconst UINT32BE = 'UINT32BE';\nconst ESCAPED = 'ESCAPED';\nconst STRING = 'STRING';\n\n/* private functions */\n// Find the UTF8 BOM, if any.\nconst bom8 = function bom8(src) {\n  src.type = UTF8;\n  const buf = src.data;\n  src.bom = 0;\n  if (buf.length >= 3) {\n    if (buf[0] === 0xef && buf[1] === 0xbb && buf[2] === 0xbf) {\n      src.bom = 3;\n    }\n  }\n};\n// Find the UTF16 BOM, if any, and determine the UTF16 type.\n// Defaults to UTF16BE.\n// Throws TypeError exception if BOM does not match the specified type.\nconst bom16 = function bom16(src) {\n  const buf = src.data;\n  src.bom = 0;\n  switch (src.type) {\n    case UTF16:\n      src.type = UTF16BE;\n      if (buf.length >= 2) {\n        if (buf[0] === 0xfe && buf[1] === 0xff) {\n          src.bom = 2;\n        } else if (buf[0] === 0xff && buf[1] === 0xfe) {\n          src.type = UTF16LE;\n          src.bom = 2;\n        }\n      }\n      break;\n    case UTF16BE:\n      src.type = UTF16BE;\n      if (buf.length >= 2) {\n        if (buf[0] === 0xfe && buf[1] === 0xff) {\n          src.bom = 2;\n        } else if (buf[0] === 0xff && buf[1] === 0xfe) {\n          throw new TypeError(`src type: \"${UTF16BE}\" specified but BOM is for \"${UTF16LE}\"`);\n        }\n      }\n      break;\n    case UTF16LE:\n      src.type = UTF16LE;\n      if (buf.length >= 0) {\n        if (buf[0] === 0xfe && buf[1] === 0xff) {\n          throw new TypeError(`src type: \"${UTF16LE}\" specified but BOM is for \"${UTF16BE}\"`);\n        } else if (buf[0] === 0xff && buf[1] === 0xfe) {\n          src.bom = 2;\n        }\n      }\n      break;\n    default:\n      throw new TypeError(`UTF16 BOM: src type \"${src.type}\" unrecognized`);\n  }\n};\n// Find the UTF32 BOM, if any, and determine the UTF32 type.\n// Defaults to UTF32BE.\n// Throws exception if BOM does not match the specified type.\nconst bom32 = function bom32(src) {\n  const buf = src.data;\n  src.bom = 0;\n  switch (src.type) {\n    case UTF32:\n      src.type = UTF32BE;\n      if (buf.length >= 4) {\n        if (buf[0] === 0 && buf[1] === 0 && buf[2] === 0xfe && buf[3] === 0xff) {\n          src.bom = 4;\n        }\n        if (buf[0] === 0xff && buf[1] === 0xfe && buf[2] === 0 && buf[3] === 0) {\n          src.type = UTF32LE;\n          src.bom = 4;\n        }\n      }\n      break;\n    case UTF32BE:\n      src.type = UTF32BE;\n      if (buf.length >= 4) {\n        if (buf[0] === 0 && buf[1] === 0 && buf[2] === 0xfe && buf[3] === 0xff) {\n          src.bom = 4;\n        }\n        if (buf[0] === 0xff && buf[1] === 0xfe && buf[2] === 0 && buf[3] === 0) {\n          throw new TypeError(`src type: ${UTF32BE} specified but BOM is for ${UTF32LE}\"`);\n        }\n      }\n      break;\n    case UTF32LE:\n      src.type = UTF32LE;\n      if (buf.length >= 4) {\n        if (buf[0] === 0 && buf[1] === 0 && buf[2] === 0xfe && buf[3] === 0xff) {\n          throw new TypeError(`src type: \"${UTF32LE}\" specified but BOM is for \"${UTF32BE}\"`);\n        }\n        if (buf[0] === 0xff && buf[1] === 0xfe && buf[2] === 0 && buf[3] === 0) {\n          src.bom = 4;\n        }\n      }\n      break;\n    default:\n      throw new TypeError(`UTF32 BOM: src type \"${src.type}\" unrecognized`);\n  }\n};\n// Validates the source encoding type and matching data.\n// If the BASE64: prefix is present, the base 64 decoding is done here as the initial step.\n// - For type STRING, data must be a JavaScript string.\n// - For type BASE64:*, data may be a string or Buffer.\n// - For all other types, data must be a Buffer.\n// - The BASE64: prefix is not allowed for type STRING.\nconst validateSrc = function validateSrc(type, data) {\n  function getType(typeArg) {\n    const ret = {\n      type: '',\n      base64: false,\n    };\n    const rx = /^(base64:)?([a-zA-Z0-9]+)$/i;\n    const result = rx.exec(typeArg);\n    if (result) {\n      if (result[2]) {\n        ret.type = result[2].toUpperCase();\n      }\n      if (result[1]) {\n        ret.base64 = true;\n      }\n    }\n    return ret;\n  }\n  if (typeof type !== 'string' || type === '') {\n    throw new TypeError(`type: \"${type}\" not recognized`);\n  }\n  const ret = getType(type.toUpperCase());\n  if (ret.base64) {\n    /* handle base 64 */\n    if (ret.type === STRING) {\n      throw new TypeError(`type: \"${type} \"BASE64:\" prefix not allowed with type ${STRING}`);\n    }\n    if (Buffer.isBuffer(data)) {\n      ret.data = trans.base64.decode(data);\n    } else if (typeof data === 'string') {\n      const buf = Buffer.from(data, 'ascii');\n      ret.data = trans.base64.decode(buf);\n    } else {\n      throw new TypeError(`type: \"${type} unrecognized data type: typeof(data): ${typeof data}`);\n    }\n  } else {\n    ret.data = data;\n  }\n  switch (ret.type) {\n    case UTF8:\n      bom8(ret);\n      break;\n    case UTF16:\n    case UTF16BE:\n    case UTF16LE:\n      bom16(ret);\n      break;\n    case UTF32:\n    case UTF32BE:\n    case UTF32LE:\n      bom32(ret);\n      break;\n    case UINT16:\n      ret.type = UINT16BE;\n      break;\n    case UINT32:\n      ret.type = UINT32BE;\n      break;\n    case ASCII:\n      ret.type = UINT7;\n      break;\n    case BINARY:\n      ret.type = UINT8;\n      break;\n    case UINT7:\n    case UINT8:\n    case UINT16LE:\n    case UINT16BE:\n    case UINT32LE:\n    case UINT32BE:\n    case STRING:\n    case ESCAPED:\n      break;\n    default:\n      throw new TypeError(`type: \"${type}\" not recognized`);\n  }\n  if (ret.type === STRING) {\n    if (typeof ret.data !== 'string') {\n      throw new TypeError(`type: \"${type}\" but data is not a string`);\n    }\n  } else if (!Buffer.isBuffer(ret.data)) {\n    throw new TypeError(`type: \"${type}\" but data is not a Buffer`);\n  }\n  return ret;\n};\n// Disassembles and validates the destination type.\n// `chars` must be an Array of integers.\n// The :BASE64 suffix is not allowed for type STRING.\nconst validateDst = function validateDst(type, chars) {\n  function getType(typeArg) {\n    let fix;\n    let rem;\n    const ret = {\n      crlf: false,\n      lf: false,\n      base64: false,\n      type: '',\n    };\n    /* prefix, if any */\n    const TRUE = true;\n    while (TRUE) {\n      rem = typeArg;\n      fix = typeArg.slice(0, 5);\n      if (fix === 'CRLF:') {\n        ret.crlf = true;\n        rem = typeArg.slice(5);\n        break;\n      }\n      fix = typeArg.slice(0, 3);\n      if (fix === 'LF:') {\n        ret.lf = true;\n        rem = typeArg.slice(3);\n        break;\n      }\n      break;\n    }\n    /* suffix, if any */\n    fix = rem.split(':');\n    if (fix.length === 1) {\n      // eslint-disable-next-line prefer-destructuring\n      ret.type = fix[0];\n    } else if (fix.length === 2 && fix[1] === 'BASE64') {\n      ret.base64 = true;\n      // eslint-disable-next-line prefer-destructuring\n      ret.type = fix[0];\n    }\n    return ret;\n  }\n  if (!Array.isArray(chars)) {\n    throw new TypeError(`dst chars: not array: \"${typeof chars}`);\n  }\n  if (typeof type !== 'string') {\n    throw new TypeError(`dst type: not string: \"${typeof type}`);\n  }\n  const ret = getType(type.toUpperCase());\n  switch (ret.type) {\n    case UTF8:\n    case UTF16BE:\n    case UTF16LE:\n    case UTF32BE:\n    case UTF32LE:\n    case UINT7:\n    case UINT8:\n    case UINT16LE:\n    case UINT16BE:\n    case UINT32LE:\n    case UINT32BE:\n    case ESCAPED:\n      break;\n    case STRING:\n      if (ret.base64) {\n        throw new TypeError(`\":BASE64\" suffix not allowed with type ${STRING}`);\n      }\n      break;\n    case ASCII:\n      ret.type = UINT7;\n      break;\n    case BINARY:\n      ret.type = UINT8;\n      break;\n    case UTF16:\n      ret.type = UTF16BE;\n      break;\n    case UTF32:\n      ret.type = UTF32BE;\n      break;\n    case UINT16:\n      ret.type = UINT16BE;\n      break;\n    case UINT32:\n      ret.type = UINT32BE;\n      break;\n    default:\n      throw new TypeError(`dst type unrecognized: \"${type}\" : must have form [crlf:|lf:]type[:base64]`);\n  }\n  return ret;\n};\n// Select and call the requested encoding function.\nconst encode = function encode(type, chars) {\n  switch (type) {\n    case UTF8:\n      return trans.utf8.encode(chars);\n    case UTF16BE:\n      return trans.utf16be.encode(chars);\n    case UTF16LE:\n      return trans.utf16le.encode(chars);\n    case UTF32BE:\n      return trans.utf32be.encode(chars);\n    case UTF32LE:\n      return trans.utf32le.encode(chars);\n    case UINT7:\n      return trans.uint7.encode(chars);\n    case UINT8:\n      return trans.uint8.encode(chars);\n    case UINT16BE:\n      return trans.uint16be.encode(chars);\n    case UINT16LE:\n      return trans.uint16le.encode(chars);\n    case UINT32BE:\n      return trans.uint32be.encode(chars);\n    case UINT32LE:\n      return trans.uint32le.encode(chars);\n    case STRING:\n      return trans.string.encode(chars);\n    case ESCAPED:\n      return trans.escaped.encode(chars);\n    default:\n      throw new TypeError(`encode type \"${type}\" not recognized`);\n  }\n};\n// Select and call the requested decoding function.\n// `src` contains BOM information as well as the source type and data.\nconst decode = function decode(src) {\n  switch (src.type) {\n    case UTF8:\n      return trans.utf8.decode(src.data, src.bom);\n    case UTF16LE:\n      return trans.utf16le.decode(src.data, src.bom);\n    case UTF16BE:\n      return trans.utf16be.decode(src.data, src.bom);\n    case UTF32BE:\n      return trans.utf32be.decode(src.data, src.bom);\n    case UTF32LE:\n      return trans.utf32le.decode(src.data, src.bom);\n    case UINT7:\n      return trans.uint7.decode(src.data);\n    case UINT8:\n      return trans.uint8.decode(src.data);\n    case UINT16BE:\n      return trans.uint16be.decode(src.data);\n    case UINT16LE:\n      return trans.uint16le.decode(src.data);\n    case UINT32BE:\n      return trans.uint32be.decode(src.data);\n    case UINT32LE:\n      return trans.uint32le.decode(src.data);\n    case STRING:\n      return trans.string.decode(src.data);\n    case ESCAPED:\n      return trans.escaped.decode(src.data);\n    default:\n      throw new TypeError(`decode type \"${src.type}\" not recognized`);\n  }\n};\n\n// The public decoding function. Returns an array of integers.\nexports.decode = function exportsDecode(type, data) {\n  const src = validateSrc(type, data);\n  return decode(src);\n};\n// The public encoding function. Returns a Buffer-typed byte array.\nexports.encode = function exportsEncode(type, chars) {\n  let c;\n  let buf;\n  const dst = validateDst(type, chars);\n  if (dst.crlf) {\n    /* prefix with CRLF line end conversion, don't contaminate caller's chars array */\n    c = trans.lineEnds.crlf(chars);\n    buf = encode(dst.type, c);\n  } else if (dst.lf) {\n    /* prefix with LF line end conversion, don't contaminate caller's chars array */\n    c = trans.lineEnds.lf(chars);\n    buf = encode(dst.type, c);\n  } else {\n    buf = encode(dst.type, chars);\n  }\n  if (dst.base64) {\n    /* post base 64 encoding */\n    buf = trans.base64.encode(buf);\n  }\n  return buf;\n};\n// Converts data of type `srcType` to data of type `dstType`.\n// `srcData` may be a JavaScript String, or node.js Buffer, depending on the corresponding type.\nexports.convert = function convert(srcType, srcData, dstType) {\n  return thisThis.encode(dstType, thisThis.decode(srcType, srcData));\n};\n","// This module has been developed programmatically in the `apg-lib` build process.\n// It is used to build web pages programatically on the fly without the need for <script> or <style> tags.\n\nmodule.exports = function emittcss(){\nreturn '/* This file automatically generated by jsonToless() and LESS. */\\n.apg-mono {\\n  font-family: monospace;\\n}\\n.apg-active {\\n  font-weight: bold;\\n  color: #000000;\\n}\\n.apg-match {\\n  font-weight: bold;\\n  color: #264BFF;\\n}\\n.apg-empty {\\n  font-weight: bold;\\n  color: #0fbd0f;\\n}\\n.apg-nomatch {\\n  font-weight: bold;\\n  color: #FF4000;\\n}\\n.apg-lh-match {\\n  font-weight: bold;\\n  color: #1A97BA;\\n}\\n.apg-lb-match {\\n  font-weight: bold;\\n  color: #5F1687;\\n}\\n.apg-remainder {\\n  font-weight: bold;\\n  color: #999999;\\n}\\n.apg-ctrl-char {\\n  font-weight: bolder;\\n  font-style: italic;\\n  font-size: 0.6em;\\n}\\n.apg-line-end {\\n  font-weight: bold;\\n  color: #000000;\\n}\\n.apg-error {\\n  font-weight: bold;\\n  color: #FF4000;\\n}\\n.apg-phrase {\\n  color: #000000;\\n  background-color: #8caae6;\\n}\\n.apg-empty-phrase {\\n  color: #0fbd0f;\\n}\\ntable.apg-state {\\n  font-family: monospace;\\n  margin-top: 5px;\\n  font-size: 11px;\\n  line-height: 130%;\\n  text-align: left;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-state th,\\ntable.apg-state td {\\n  text-align: left;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-state th:nth-last-child(2),\\ntable.apg-state td:nth-last-child(2) {\\n  text-align: right;\\n}\\ntable.apg-state caption {\\n  font-size: 125%;\\n  line-height: 130%;\\n  font-weight: bold;\\n  text-align: left;\\n}\\ntable.apg-stats {\\n  font-family: monospace;\\n  margin-top: 5px;\\n  font-size: 11px;\\n  line-height: 130%;\\n  text-align: right;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-stats th,\\ntable.apg-stats td {\\n  text-align: right;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-stats caption {\\n  font-size: 125%;\\n  line-height: 130%;\\n  font-weight: bold;\\n  text-align: left;\\n}\\ntable.apg-trace {\\n  font-family: monospace;\\n  margin-top: 5px;\\n  font-size: 11px;\\n  line-height: 130%;\\n  text-align: right;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-trace caption {\\n  font-size: 125%;\\n  line-height: 130%;\\n  font-weight: bold;\\n  text-align: left;\\n}\\ntable.apg-trace th,\\ntable.apg-trace td {\\n  text-align: right;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-trace th:last-child,\\ntable.apg-trace th:nth-last-child(2),\\ntable.apg-trace td:last-child,\\ntable.apg-trace td:nth-last-child(2) {\\n  text-align: left;\\n}\\ntable.apg-grammar {\\n  font-family: monospace;\\n  margin-top: 5px;\\n  font-size: 11px;\\n  line-height: 130%;\\n  text-align: right;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-grammar caption {\\n  font-size: 125%;\\n  line-height: 130%;\\n  font-weight: bold;\\n  text-align: left;\\n}\\ntable.apg-grammar th,\\ntable.apg-grammar td {\\n  text-align: right;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-grammar th:last-child,\\ntable.apg-grammar td:last-child {\\n  text-align: left;\\n}\\ntable.apg-rules {\\n  font-family: monospace;\\n  margin-top: 5px;\\n  font-size: 11px;\\n  line-height: 130%;\\n  text-align: right;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-rules caption {\\n  font-size: 125%;\\n  line-height: 130%;\\n  font-weight: bold;\\n  text-align: left;\\n}\\ntable.apg-rules th,\\ntable.apg-rules td {\\n  text-align: right;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-rules a {\\n  color: #003399 !important;\\n}\\ntable.apg-rules a:hover {\\n  color: #8caae6 !important;\\n}\\ntable.apg-attrs {\\n  font-family: monospace;\\n  margin-top: 5px;\\n  font-size: 11px;\\n  line-height: 130%;\\n  text-align: center;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-attrs caption {\\n  font-size: 125%;\\n  line-height: 130%;\\n  font-weight: bold;\\n  text-align: left;\\n}\\ntable.apg-attrs th,\\ntable.apg-attrs td {\\n  text-align: center;\\n  border: 1px solid black;\\n  border-collapse: collapse;\\n}\\ntable.apg-attrs th:nth-child(1),\\ntable.apg-attrs th:nth-child(2),\\ntable.apg-attrs th:nth-child(3) {\\n  text-align: right;\\n}\\ntable.apg-attrs td:nth-child(1),\\ntable.apg-attrs td:nth-child(2),\\ntable.apg-attrs td:nth-child(3) {\\n  text-align: right;\\n}\\ntable.apg-attrs a {\\n  color: #003399 !important;\\n}\\ntable.apg-attrs a:hover {\\n  color: #8caae6 !important;\\n}\\n';\n}\n","/* eslint-disable func-names */\n/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module exports a variety of utility functions that support\n// [`apg`](https://github.com/ldthomas/apg-js2), [`apg-lib`](https://github.com/ldthomas/apg-js2-lib)\n// and the generated parser applications.\n\nconst style = require('./style');\nconst converter = require('../apg-conv-api/converter');\nconst emitCss = require('./emitcss');\nconst id = require('./identifiers');\n\nconst thisFileName = 'utilities.js: ';\nconst thisThis = this;\n\n/* translate (implied) phrase beginning character and length to actual first and last character indexes */\n/* used by multiple phrase handling functions */\nconst getBounds = function (length, begArg, len) {\n  let end;\n  let beg = begArg;\n  const TRUE = true;\n  while (TRUE) {\n    if (length <= 0) {\n      beg = 0;\n      end = 0;\n      break;\n    }\n    if (typeof beg !== 'number') {\n      beg = 0;\n      end = length;\n      break;\n    }\n    if (beg >= length) {\n      beg = length;\n      end = length;\n      break;\n    }\n    if (typeof len !== 'number') {\n      end = length;\n      break;\n    }\n    end = beg + len;\n    if (end > length) {\n      end = length;\n      break;\n    }\n    break;\n  }\n  return {\n    beg,\n    end,\n  };\n};\n// Generates a complete, minimal HTML5 page, inserting the user's HTML text on the page.\n// - *html* - the page text in HTML format\n// - *title* - the HTML page `<title>` - defaults to `htmlToPage`.\nexports.htmlToPage = function (html, titleArg) {\n  let title;\n  if (typeof html !== 'string') {\n    throw new Error(`${thisFileName}htmlToPage: input HTML is not a string`);\n  }\n  if (typeof titleArg !== 'string') {\n    title = 'htmlToPage';\n  } else {\n    title = titleArg;\n  }\n  let page = '';\n  page += '<!DOCTYPE html>\\n';\n  page += '<html lang=\"en\">\\n';\n  page += '<head>\\n';\n  page += '<meta charset=\"utf-8\">\\n';\n  page += `<title>${title}</title>\\n`;\n  page += '<style>\\n';\n  page += emitCss();\n  page += '</style>\\n';\n  page += '</head>\\n<body>\\n';\n  page += `<p>${new Date()}</p>\\n`;\n  page += html;\n  page += '</body>\\n</html>\\n';\n  return page;\n};\n// Formats the returned object from `parser.parse()`\n// into an HTML table.\n// ```\n// return {\n//   success : sysData.success,\n//   state : sysData.state,\n//   length : charsLength,\n//   matched : sysData.phraseLength,\n//   maxMatched : maxMatched,\n//   maxTreeDepth : maxTreeDepth,\n//   nodeHits : nodeHits,\n//   inputLength : chars.length,\n//   subBegin : charsBegin,\n//   subEnd : charsEnd,\n//   subLength : charsLength\n// };\n// ```\nexports.parserResultToHtml = function (result, caption) {\n  let cap = null;\n  if (typeof caption === 'string' && caption !== '') {\n    cap = caption;\n  }\n  let success;\n  let state;\n  if (result.success === true) {\n    success = `<span class=\"${style.CLASS_MATCH}\">true</span>`;\n  } else {\n    success = `<span class=\"${style.CLASS_NOMATCH}\">false</span>`;\n  }\n  if (result.state === id.EMPTY) {\n    state = `<span class=\"${style.CLASS_EMPTY}\">EMPTY</span>`;\n  } else if (result.state === id.MATCH) {\n    state = `<span class=\"${style.CLASS_MATCH}\">MATCH</span>`;\n  } else if (result.state === id.NOMATCH) {\n    state = `<span class=\"${style.CLASS_NOMATCH}\">NOMATCH</span>`;\n  } else {\n    state = `<span class=\"${style.CLASS_NOMATCH}\">unrecognized</span>`;\n  }\n  let html = '';\n  html += `<table class=\"${style.CLASS_STATE}\">\\n`;\n  if (cap) {\n    html += `<caption>${cap}</caption>\\n`;\n  }\n  html += '<tr><th>state item</th><th>value</th><th>description</th></tr>\\n';\n  html += `<tr><td>parser success</td><td>${success}</td>\\n`;\n  html += `<td><span class=\"${style.CLASS_MATCH}\">true</span> if the parse succeeded,\\n`;\n  html += ` <span class=\"${style.CLASS_NOMATCH}\">false</span> otherwise`;\n  html += '<br><i>NOTE: for success, entire string must be matched</i></td></tr>\\n';\n  html += `<tr><td>parser state</td><td>${state}</td>\\n`;\n  html += `<td><span class=\"${style.CLASS_EMPTY}\">EMPTY</span>, `;\n  html += `<span class=\"${style.CLASS_MATCH}\">MATCH</span> or \\n`;\n  html += `<span class=\"${style.CLASS_NOMATCH}\">NOMATCH</span></td></tr>\\n`;\n  html += `<tr><td>string length</td><td>${result.length}</td><td>length of the input (sub)string</td></tr>\\n`;\n  html += `<tr><td>matched length</td><td>${result.matched}</td><td>number of input string characters matched</td></tr>\\n`;\n  html += `<tr><td>max matched</td><td>${result.maxMatched}</td><td>maximum number of input string characters matched</td></tr>\\n`;\n  html += `<tr><td>max tree depth</td><td>${result.maxTreeDepth}</td><td>maximum depth of the parse tree reached</td></tr>\\n`;\n  html += `<tr><td>node hits</td><td>${result.nodeHits}</td><td>number of parse tree node hits (opcode function calls)</td></tr>\\n`;\n  html += `<tr><td>input length</td><td>${result.inputLength}</td><td>length of full input string</td></tr>\\n`;\n  html += `<tr><td>sub-string begin</td><td>${result.subBegin}</td><td>sub-string first character index</td></tr>\\n`;\n  html += `<tr><td>sub-string end</td><td>${result.subEnd}</td><td>sub-string end-of-string index</td></tr>\\n`;\n  html += `<tr><td>sub-string length</td><td>${result.subLength}</td><td>sub-string length</td></tr>\\n`;\n  html += '</table>\\n';\n  return html;\n};\n// Translates a sub-array of integer character codes into a string.\n// Very useful in callback functions to translate the matched phrases into strings.\nexports.charsToString = function (chars, phraseIndex, phraseLength) {\n  let beg;\n  let end;\n  if (typeof phraseIndex === 'number') {\n    if (phraseIndex >= chars.length) {\n      return '';\n    }\n    beg = phraseIndex < 0 ? 0 : phraseIndex;\n  } else {\n    beg = 0;\n  }\n  if (typeof phraseLength === 'number') {\n    if (phraseLength <= 0) {\n      return '';\n    }\n    end = phraseLength > chars.length - beg ? chars.length : beg + phraseLength;\n  } else {\n    end = chars.length;\n  }\n  if (beg < end) {\n    return converter.encode('UTF16LE', chars.slice(beg, end)).toString('utf16le');\n  }\n  return '';\n};\n// Translates a string into an array of integer character codes.\nexports.stringToChars = function (string) {\n  return converter.decode('STRING', string);\n};\n// Translates an opcode identifier into a human-readable string.\nexports.opcodeToString = function (type) {\n  let ret = 'unknown';\n  switch (type) {\n    case id.ALT:\n      ret = 'ALT';\n      break;\n    case id.CAT:\n      ret = 'CAT';\n      break;\n    case id.RNM:\n      ret = 'RNM';\n      break;\n    case id.UDT:\n      ret = 'UDT';\n      break;\n    case id.AND:\n      ret = 'AND';\n      break;\n    case id.NOT:\n      ret = 'NOT';\n      break;\n    case id.REP:\n      ret = 'REP';\n      break;\n    case id.TRG:\n      ret = 'TRG';\n      break;\n    case id.TBS:\n      ret = 'TBS';\n      break;\n    case id.TLS:\n      ret = 'TLS';\n      break;\n    case id.BKR:\n      ret = 'BKR';\n      break;\n    case id.BKA:\n      ret = 'BKA';\n      break;\n    case id.BKN:\n      ret = 'BKN';\n      break;\n    case id.ABG:\n      ret = 'ABG';\n      break;\n    case id.AEN:\n      ret = 'AEN';\n      break;\n    default:\n      throw new Error('unrecognized opcode');\n  }\n  return ret;\n};\n// Translates an state identifier into a human-readable string.\nexports.stateToString = function (state) {\n  let ret = 'unknown';\n  switch (state) {\n    case id.ACTIVE:\n      ret = 'ACTIVE';\n      break;\n    case id.MATCH:\n      ret = 'MATCH';\n      break;\n    case id.EMPTY:\n      ret = 'EMPTY';\n      break;\n    case id.NOMATCH:\n      ret = 'NOMATCH';\n      break;\n    default:\n      throw new Error('unrecognized state');\n  }\n  return ret;\n};\n// Array which translates all 128, 7-bit ASCII character codes to their respective HTML format.\nexports.asciiChars = [\n  'NUL',\n  'SOH',\n  'STX',\n  'ETX',\n  'EOT',\n  'ENQ',\n  'ACK',\n  'BEL',\n  'BS',\n  'TAB',\n  'LF',\n  'VT',\n  'FF',\n  'CR',\n  'SO',\n  'SI',\n  'DLE',\n  'DC1',\n  'DC2',\n  'DC3',\n  'DC4',\n  'NAK',\n  'SYN',\n  'ETB',\n  'CAN',\n  'EM',\n  'SUB',\n  'ESC',\n  'FS',\n  'GS',\n  'RS',\n  'US',\n  '&nbsp;',\n  '!',\n  '&#34;',\n  '#',\n  '$',\n  '%',\n  '&#38;',\n  '&#39;',\n  '(',\n  ')',\n  '*',\n  '+',\n  ',',\n  '-',\n  '.',\n  '/',\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  ':',\n  ';',\n  '&#60;',\n  '=',\n  '&#62;',\n  '?',\n  '@',\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n  '[',\n  '&#92;',\n  ']',\n  '^',\n  '_',\n  '`',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  '{',\n  '|',\n  '}',\n  '~',\n  'DEL',\n];\n// Translates a single character to hexadecimal with leading zeros for 2, 4, or 8 digit display.\nexports.charToHex = function (char) {\n  let ch = char.toString(16).toUpperCase();\n  switch (ch.length) {\n    case 1:\n    case 3:\n    case 7:\n      ch = `0${ch}`;\n      break;\n    case 2:\n    case 6:\n      ch = `00${ch}`;\n      break;\n    case 4:\n      break;\n    case 5:\n      ch = `000${ch}`;\n      break;\n    default:\n      throw new Error('unrecognized option');\n  }\n  return ch;\n};\n// Translates a sub-array of character codes to decimal display format.\nexports.charsToDec = function (chars, beg, len) {\n  let ret = '';\n  if (!Array.isArray(chars)) {\n    throw new Error(`${thisFileName}charsToDec: input must be an array of integers`);\n  }\n  const bounds = getBounds(chars.length, beg, len);\n  if (bounds.end > bounds.beg) {\n    ret += chars[bounds.beg];\n    for (let i = bounds.beg + 1; i < bounds.end; i += 1) {\n      ret += `,${chars[i]}`;\n    }\n  }\n  return ret;\n};\n// Translates a sub-array of character codes to hexadecimal display format.\nexports.charsToHex = function (chars, beg, len) {\n  let ret = '';\n  if (!Array.isArray(chars)) {\n    throw new Error(`${thisFileName}charsToHex: input must be an array of integers`);\n  }\n  const bounds = getBounds(chars.length, beg, len);\n  if (bounds.end > bounds.beg) {\n    ret += `\\\\x${thisThis.charToHex(chars[bounds.beg])}`;\n    for (let i = bounds.beg + 1; i < bounds.end; i += 1) {\n      ret += `,\\\\x${thisThis.charToHex(chars[i])}`;\n    }\n  }\n  return ret;\n};\nexports.charsToHtmlEntities = function (chars, beg, len) {\n  let ret = '';\n  if (!Array.isArray(chars)) {\n    throw new Error(`${thisFileName}charsToHex: input must be an array of integers`);\n  }\n  const bounds = getBounds(chars.length, beg, len);\n  if (bounds.end > bounds.beg) {\n    for (let i = bounds.beg; i < bounds.end; i += 1) {\n      ret += `&#x${chars[i].toString(16)};`;\n    }\n  }\n  return ret;\n};\n// Translates a sub-array of character codes to Unicode display format.\nfunction isUnicode(char) {\n  if (char >= 0xd800 && char <= 0xdfff) {\n    return false;\n  }\n  if (char > 0x10ffff) {\n    return false;\n  }\n  return true;\n}\nexports.charsToUnicode = function (chars, beg, len) {\n  let ret = '';\n  if (!Array.isArray(chars)) {\n    throw new Error(`${thisFileName}charsToUnicode: input must be an array of integers`);\n  }\n  const bounds = getBounds(chars.length, beg, len);\n  if (bounds.end > bounds.beg) {\n    for (let i = bounds.beg; i < bounds.end; i += 1) {\n      if (isUnicode(chars[i])) {\n        ret += `&#${chars[i]};`;\n      } else {\n        ret += ` U+${thisThis.charToHex(chars[i])}`;\n      }\n    }\n  }\n  return ret;\n};\n// Translates a sub-array of character codes to JavaScript Unicode display format (`\\uXXXX`).\nexports.charsToJsUnicode = function (chars, beg, len) {\n  let ret = '';\n  if (!Array.isArray(chars)) {\n    throw new Error(`${thisFileName}charsToJsUnicode: input must be an array of integers`);\n  }\n  const bounds = getBounds(chars.length, beg, len);\n  if (bounds.end > bounds.beg) {\n    ret += `\\\\u${thisThis.charToHex(chars[bounds.beg])}`;\n    for (let i = bounds.beg + 1; i < bounds.end; i += 1) {\n      ret += `,\\\\u${thisThis.charToHex(chars[i])}`;\n    }\n  }\n  return ret;\n};\n// Translates a sub-array of character codes to printing ASCII character display format.\nexports.charsToAscii = function (chars, beg, len) {\n  let ret = '';\n  if (!Array.isArray(chars)) {\n    throw new Error(`${thisFileName}charsToAscii: input must be an array of integers`);\n  }\n  const bounds = getBounds(chars.length, beg, len);\n  for (let i = bounds.beg; i < bounds.end; i += 1) {\n    const char = chars[i];\n    if (char >= 32 && char <= 126) {\n      ret += String.fromCharCode(char);\n    } else {\n      ret += `\\\\x${thisThis.charToHex(char)}`;\n    }\n  }\n  return ret;\n};\n// Translates a sub-array of character codes to HTML display format.\nexports.charsToAsciiHtml = function (chars, beg, len) {\n  if (!Array.isArray(chars)) {\n    throw new Error(`${thisFileName}charsToAsciiHtml: input must be an array of integers`);\n  }\n  let html = '';\n  let char;\n  const bounds = getBounds(chars.length, beg, len);\n  for (let i = bounds.beg; i < bounds.end; i += 1) {\n    char = chars[i];\n    if (char < 32 || char === 127) {\n      /* control characters */\n      html += `<span class=\"${style.CLASS_CTRLCHAR}\">${thisThis.asciiChars[char]}</span>`;\n    } else if (char > 127) {\n      /* non-ASCII */\n      html += `<span class=\"${style.CLASS_CTRLCHAR}\">U+${thisThis.charToHex(char)}</span>`;\n    } else {\n      /* printing ASCII, 32 <= char <= 126 */\n      html += thisThis.asciiChars[char];\n    }\n  }\n  return html;\n};\n// Translates a JavaScript string to HTML display format.\nexports.stringToAsciiHtml = function (str) {\n  const chars = converter.decode('STRING', str);\n  return this.charsToAsciiHtml(chars);\n};\n","/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\n/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module is used by the parser to build an [Abstract Syntax Tree](https://en.wikipedia.org/wiki/Abstract_syntax_tree) (AST).\n// The AST can be thought of as a subset of the full parse tree.\n// Each node of the AST holds the phrase that was matched at the corresponding, named parse tree node.\n// It is built as the parser successfully matches phrases to the rule names\n// (`RNM` operators) and `UDT`s as it parses an input string.\n// The user controls which `RNM` or `UDT` names to keep on the AST.\n// The user can also associate callback functions with some or all of the retained\n// AST nodes to be used to translate the node phrases. That is, associate semantic\n// actions to the matched phrases.\n// Translating the AST rather that attempting to apply semantic actions during\n// the parsing process, has the advantage that there is no backtracking and that the phrases\n// are known while traversing down tree as will as up.\n//\n// Let `ast` be an `ast.js` object. To identify a node to be kept on the AST:\n// ```\n// ast.callbacks[\"rulename\"] = true; (all nodes default to false)\n// ```\n// To associate a callback function with a node:\n// ```\n// ast.callbacks[\"rulename\"] = fn\n// ```\n// `rulename` is any `RNM` or `UDT` name defined by the associated grammar\n// and `fn` is a user-written callback function.\n// (See [`apg-examples`](https://github.com/ldthomas/apg-js2-examples/tree/master/ast) for examples of how to create an AST,\n// define the nodes and callback functions and attach it to a parser.)\nmodule.exports = function exportsAst() {\n  const id = require('./identifiers');\n  const utils = require('./utilities');\n\n  const thisFileName = 'ast.js: ';\n  const that = this;\n  let rules = null;\n  let udts = null;\n  let chars = null;\n  let nodeCount = 0;\n  const nodesDefined = [];\n  const nodeCallbacks = [];\n  const stack = [];\n  const records = [];\n  this.callbacks = [];\n  this.astObject = 'astObject';\n  /* called by the parser to initialize the AST with the rules, UDTs and the input characters */\n  this.init = function init(rulesIn, udtsIn, charsIn) {\n    stack.length = 0;\n    records.length = 0;\n    nodesDefined.length = 0;\n    nodeCount = 0;\n    rules = rulesIn;\n    udts = udtsIn;\n    chars = charsIn;\n    let i;\n    const list = [];\n    for (i = 0; i < rules.length; i += 1) {\n      list.push(rules[i].lower);\n    }\n    for (i = 0; i < udts.length; i += 1) {\n      list.push(udts[i].lower);\n    }\n    nodeCount = rules.length + udts.length;\n    for (i = 0; i < nodeCount; i += 1) {\n      nodesDefined[i] = false;\n      nodeCallbacks[i] = null;\n    }\n    for (const index in that.callbacks) {\n      const lower = index.toLowerCase();\n      i = list.indexOf(lower);\n      if (i < 0) {\n        throw new Error(`${thisFileName}init: node '${index}' not a rule or udt name`);\n      }\n      if (typeof that.callbacks[index] === 'function') {\n        nodesDefined[i] = true;\n        nodeCallbacks[i] = that.callbacks[index];\n      }\n      if (that.callbacks[index] === true) {\n        nodesDefined[i] = true;\n      }\n    }\n  };\n  /* AST node definitions - called by the parser's `RNM` operator */\n  this.ruleDefined = function ruleDefined(index) {\n    return nodesDefined[index] !== false;\n  };\n  /* AST node definitions - called by the parser's `UDT` operator */\n  this.udtDefined = function udtDefined(index) {\n    return nodesDefined[rules.length + index] !== false;\n  };\n  /* called by the parser's `RNM` & `UDT` operators */\n  /* builds a record for the downward traversal of the node */\n  this.down = function down(callbackIndex, name) {\n    const thisIndex = records.length;\n    stack.push(thisIndex);\n    records.push({\n      name,\n      thisIndex,\n      thatIndex: null,\n      state: id.SEM_PRE,\n      callbackIndex,\n      phraseIndex: null,\n      phraseLength: null,\n      stack: stack.length,\n    });\n    return thisIndex;\n  };\n  /* called by the parser's `RNM` & `UDT` operators */\n  /* builds a record for the upward traversal of the node */\n  this.up = function up(callbackIndex, name, phraseIndex, phraseLength) {\n    const thisIndex = records.length;\n    const thatIndex = stack.pop();\n    records.push({\n      name,\n      thisIndex,\n      thatIndex,\n      state: id.SEM_POST,\n      callbackIndex,\n      phraseIndex,\n      phraseLength,\n      stack: stack.length,\n    });\n    records[thatIndex].thatIndex = thisIndex;\n    records[thatIndex].phraseIndex = phraseIndex;\n    records[thatIndex].phraseLength = phraseLength;\n    return thisIndex;\n  };\n  // Called by the user to translate the AST.\n  // Translate means to associate or apply some semantic action to the\n  // phrases that were syntactically matched to the AST nodes according\n  // to the defining grammar.\n  // ```\n  // data - optional user-defined data\n  //        passed to the callback functions by the translator\n  // ```\n  this.translate = function translate(data) {\n    let ret;\n    let callback;\n    let record;\n    for (let i = 0; i < records.length; i += 1) {\n      record = records[i];\n      callback = nodeCallbacks[record.callbackIndex];\n      if (record.state === id.SEM_PRE) {\n        if (callback !== null) {\n          ret = callback(id.SEM_PRE, chars, record.phraseIndex, record.phraseLength, data);\n          if (ret === id.SEM_SKIP) {\n            i = record.thatIndex;\n          }\n        }\n      } else if (callback !== null) {\n        callback(id.SEM_POST, chars, record.phraseIndex, record.phraseLength, data);\n      }\n    }\n  };\n  /* called by the parser to reset the length of the records array */\n  /* necessary on backtracking */\n  this.setLength = function setLength(length) {\n    records.length = length;\n    if (length > 0) {\n      stack.length = records[length - 1].stack;\n    } else {\n      stack.length = 0;\n    }\n  };\n  /* called by the parser to get the length of the records array */\n  this.getLength = function getLength() {\n    return records.length;\n  };\n  /* helper for XML display */\n  function indent(n) {\n    let ret = '';\n    for (let i = 0; i < n; i += 1) {\n      ret += ' ';\n    }\n    return ret;\n  }\n  // Generate an `XML` version of the AST.\n  // Useful if you want to use a special or favorite XML parser to translate the\n  // AST.\n  // ```\n  // mode - the display mode of the captured phrases\n  //      - default mode is \"ascii\"\n  //      - can be: \"ascii\"\n  //                \"decimal\"\n  //                \"hexadecimal\"\n  //                \"unicode\"\n  // ```\n  this.toXml = function toSml(modeArg) {\n    let display = utils.charsToDec;\n    let caption = 'decimal integer character codes';\n    if (typeof modeArg === 'string' && modeArg.length >= 3) {\n      const mode = modeArg.slice(0, 3).toLowerCase();\n      if (mode === 'asc') {\n        display = utils.charsToAscii;\n        caption = 'ASCII for printing characters, hex for non-printing';\n      } else if (mode === 'hex') {\n        display = utils.charsToHex;\n        caption = 'hexadecimal integer character codes';\n      } else if (mode === 'uni') {\n        display = utils.charsToUnicode;\n        caption = 'Unicode UTF-32 integer character codes';\n      }\n    }\n    let xml = '';\n    let depth = 0;\n    xml += '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n';\n    xml += `<root nodes=\"${records.length / 2}\" characters=\"${chars.length}\">\\n`;\n    xml += `<!-- input string, ${caption} -->\\n`;\n    xml += indent(depth + 2);\n    xml += display(chars);\n    xml += '\\n';\n    records.forEach((rec) => {\n      if (rec.state === id.SEM_PRE) {\n        depth += 1;\n        xml += indent(depth);\n        xml += `<node name=\"${rec.name}\" index=\"${rec.phraseIndex}\" length=\"${rec.phraseLength}\">\\n`;\n        xml += indent(depth + 2);\n        xml += display(chars, rec.phraseIndex, rec.phraseLength);\n        xml += '\\n';\n      } else {\n        xml += indent(depth);\n        xml += `</node><!-- name=\"${rec.name}\" -->\\n`;\n        depth -= 1;\n      }\n    });\n\n    xml += '</root>\\n';\n    return xml;\n  };\n  /* generate a JavaScript object version of the AST */\n  /* for the phrase-matching engine apg-exp */\n  this.phrases = function phrases() {\n    const obj = {};\n    let i;\n    let record;\n    for (i = 0; i < records.length; i += 1) {\n      record = records[i];\n      if (record.state === id.SEM_PRE) {\n        if (!Array.isArray(obj[record.name])) {\n          obj[record.name] = [];\n        }\n        obj[record.name].push({\n          index: record.phraseIndex,\n          length: record.phraseLength,\n        });\n      }\n    }\n    return obj;\n  };\n};\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module acts as a \"circular buffer\". It is used to keep track\n// only the last N records in an array of records. If more than N records\n// are saved, each additional record overwrites the previously oldest record.\n// This module deals only with the record indexes and does not save\n// any actual records. It is used by [`trace.js`](./trace.html) for limiting the number of\n// trace records saved.\nmodule.exports = function exportsCircularBuffer() {\n  'use strict;';\n\n  const thisFileName = 'circular-buffer.js: ';\n  let itemIndex = -1;\n  let maxListSize = 0;\n  // Initialize buffer.<br>\n  // *size* is `maxListSize`, the maximum number of records saved before overwriting begins.\n  this.init = function init(size) {\n    if (typeof size !== 'number' || size <= 0) {\n      throw new Error(`${thisFileName}init: circular buffer size must an integer > 0`);\n    }\n    maxListSize = Math.ceil(size);\n    itemIndex = -1;\n  };\n  // Call this to increment the number of records collected.<br>\n  // Returns the array index number to store the next record in.\n  this.increment = function increment() {\n    itemIndex += 1;\n    return (itemIndex + maxListSize) % maxListSize;\n  };\n  // Returns `maxListSize` - the maximum number of records to keep in the buffer.\n  this.maxSize = function maxSize() {\n    return maxListSize;\n  };\n  // Returns the highest number of items saved.<br>\n  // (The number of items is the actual number of records processed\n  // even though only `maxListSize` records are actually retained.)\n  this.items = function items() {\n    return itemIndex + 1;\n  };\n  // Returns the record number associated with this item index.\n  this.getListIndex = function getListIndex(item) {\n    if (itemIndex === -1) {\n      return -1;\n    }\n    if (item < 0 || item > itemIndex) {\n      return -1;\n    }\n    if (itemIndex - item >= maxListSize) {\n      return -1;\n    }\n    return (item + maxListSize) % maxListSize;\n  };\n  // The iterator over the circular buffer.\n  // The user's function, `fn`, will be called with arguments `fn(listIndex, itemIndex)`\n  // where `listIndex` is the saved record index and `itemIndex` is the actual item index.\n  this.forEach = function forEach(fn) {\n    if (itemIndex === -1) {\n      /* no records have been collected */\n      return;\n    }\n    if (itemIndex < maxListSize) {\n      /* fewer than maxListSize records have been collected - number of items = number of records */\n      for (let i = 0; i <= itemIndex; i += 1) {\n        fn(i, i);\n      }\n      return;\n    }\n    /* start with the oldest record saved and finish with the most recent record saved */\n    for (let i = itemIndex - maxListSize + 1; i <= itemIndex; i += 1) {\n      const listIndex = (i + maxListSize) % maxListSize;\n      fn(listIndex, i);\n    }\n  };\n};\n","/* eslint-disable func-names */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable new-cap */\n/* eslint-disable guard-for-in */\n/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This is the primary object of `apg-lib`. Calling its `parse()` member function\n// walks the parse tree of opcodes, matching phrases from the input string as it goes.\n// The working code for all of the operators, `ALT`, `CAT`, etc. is in this module.\nmodule.exports = function parser() {\n  const id = require('./identifiers');\n  const utils = require('./utilities');\n\n  const thisFileName = 'parser.js: ';\n  const thisThis = this;\n  let opExecute;\n  this.ast = null;\n  this.stats = null;\n  this.trace = null;\n  this.callbacks = [];\n  let opcodes = null;\n  let chars = null;\n  let charsBegin;\n  let charsLength;\n  let charsEnd;\n  let lookAround;\n  let treeDepth = 0;\n  let maxTreeDepth = 0;\n  let nodeHits = 0;\n  let ruleCallbacks = null;\n  let udtCallbacks = null;\n  let rules = null;\n  let udts = null;\n  let syntaxData = null;\n  let maxMatched = 0;\n  let limitTreeDepth = Infinity;\n  let limitNodeHits = Infinity;\n  // Evaluates any given rule. This can be called from the syntax callback\n  // functions to evaluate any rule in the grammar's rule list. Great caution\n  // should be used. Use of this function will alter the language that the\n  // parser accepts.\n  const evaluateRule = function evaluateRule(ruleIndex, phraseIndex, sysData) {\n    const functionName = `${thisFileName}evaluateRule(): `;\n    if (ruleIndex >= rules.length) {\n      throw new Error(`${functionName}rule index: ${ruleIndex} out of range`);\n    }\n    if (phraseIndex >= charsEnd) {\n      throw new Error(`${functionName}phrase index: ${phraseIndex} out of range`);\n    }\n    const { length } = opcodes;\n    opcodes.push({\n      type: id.RNM,\n      index: ruleIndex,\n    });\n    opExecute(length, phraseIndex, sysData);\n    opcodes.pop();\n  };\n  // Evaluates any given UDT. This can be called from the syntax callback\n  // functions to evaluate any UDT in the grammar's UDT list. Great caution\n  // should be used. Use of this function will alter the language that the\n  // parser accepts.\n  const evaluateUdt = function (udtIndex, phraseIndex, sysData) {\n    const functionName = `${thisFileName}evaluateUdt(): `;\n    if (udtIndex >= udts.length) {\n      throw new Error(`${functionName}udt index: ${udtIndex} out of range`);\n    }\n    if (phraseIndex >= charsEnd) {\n      throw new Error(`${functionName}phrase index: ${phraseIndex} out of range`);\n    }\n    const { length } = opcodes;\n    opcodes.push({\n      type: id.UDT,\n      empty: udts[udtIndex].empty,\n      index: udtIndex,\n    });\n    opExecute(length, phraseIndex, sysData);\n    opcodes.pop();\n  };\n  /* Clears this object of any/all data that has been initialized or added to it. */\n  /* Called by parse() on initialization, allowing this object to be re-used for multiple parsing calls. */\n  const clear = function () {\n    treeDepth = 0;\n    maxTreeDepth = 0;\n    nodeHits = 0;\n    maxMatched = 0;\n    lookAround = [\n      {\n        lookAround: id.LOOKAROUND_NONE,\n        anchor: 0,\n        charsEnd: 0,\n        charsLength: 0,\n      },\n    ];\n    rules = null;\n    udts = null;\n    chars = null;\n    charsBegin = 0;\n    charsLength = 0;\n    charsEnd = 0;\n    ruleCallbacks = null;\n    udtCallbacks = null;\n    syntaxData = null;\n    opcodes = null;\n  };\n  /* object for maintaining a stack of back reference frames */\n  const backRef = function () {\n    const stack = [];\n    const init = function () {\n      const obj = {};\n      rules.forEach((rule) => {\n        if (rule.isBkr) {\n          obj[rule.lower] = null;\n        }\n      });\n      if (udts.length > 0) {\n        udts.forEach((udt) => {\n          if (udt.isBkr) {\n            obj[udt.lower] = null;\n          }\n        });\n      }\n      stack.push(obj);\n    };\n    const copy = function () {\n      const top = stack[stack.length - 1];\n      const obj = {};\n      /* // eslint-disable-next-line no-restricted-syntax */\n      for (const name in top) {\n        obj[name] = top[name];\n      }\n      return obj;\n    };\n    this.push = function push() {\n      stack.push(copy());\n    };\n    this.pop = function pop(lengthArg) {\n      let length = lengthArg;\n      if (!length) {\n        length = stack.length - 1;\n      }\n      if (length < 1 || length > stack.length) {\n        throw new Error(`${thisFileName}backRef.pop(): bad length: ${length}`);\n      }\n      stack.length = length;\n      return stack[stack.length - 1];\n    };\n    this.length = function length() {\n      return stack.length;\n    };\n    this.savePhrase = function savePhrase(name, index, length) {\n      stack[stack.length - 1][name] = {\n        phraseIndex: index,\n        phraseLength: length,\n      };\n    };\n    this.getPhrase = function (name) {\n      return stack[stack.length - 1][name];\n    };\n    /* constructor */\n    init();\n  };\n  // The system data structure that relays system information to and from the rule and UDT callback functions.\n  // - *state* - the state of the parser, ACTIVE, MATCH, EMPTY or NOMATCH (see the `identifiers` object in\n  // [`apg-lib`](https://github.com/ldthomas/apg-js2-lib))\n  // - *phraseLength* - the number of characters matched if the state is MATCHED or EMPTY\n  // - *lookaround* - the top of the stack holds the current look around state,\n  // LOOKAROUND_NONE, LOOKAROUND_AHEAD or LOOKAROUND_BEHIND,\n  // - *uFrame* - the \"universal\" back reference frame.\n  // Holds the last matched phrase for each of the back referenced rules and UDTs.\n  // - *pFrame* - the stack of \"parent\" back reference frames.\n  // Holds the matched phrase from the parent frame of each back referenced rules and UDTs.\n  // - *evaluateRule* - a reference to this object's `evaluateRule()` function.\n  // Can be called from a callback function (use with extreme caution!)\n  // - *evaluateUdt* - a reference to this object's `evaluateUdt()` function.\n  // Can be called from a callback function (use with extreme caution!)\n  const systemData = function systemData() {\n    const thisData = this;\n    this.state = id.ACTIVE;\n    this.phraseLength = 0;\n    this.ruleIndex = 0;\n    this.udtIndex = 0;\n    this.lookAround = lookAround[lookAround.length - 1];\n    this.uFrame = new backRef();\n    this.pFrame = new backRef();\n    this.evaluateRule = evaluateRule;\n    this.evaluateUdt = evaluateUdt;\n    /* refresh the parser state for the next operation */\n    this.refresh = function refresh() {\n      thisData.state = id.ACTIVE;\n      thisData.phraseLength = 0;\n      thisData.lookAround = lookAround[lookAround.length - 1];\n    };\n  };\n  /* some look around helper functions */\n  const lookAroundValue = function lookAroundValue() {\n    return lookAround[lookAround.length - 1];\n  };\n  /* return true if parser is in look around (ahead or behind) state */\n  const inLookAround = function inLookAround() {\n    return lookAround.length > 1;\n  };\n  /* return true if parser is in look behind state */\n  const inLookBehind = function () {\n    return lookAround[lookAround.length - 1].lookAround === id.LOOKAROUND_BEHIND;\n  };\n  /* called by parse() to initialize the AST object, if one has been defined */\n  const initializeAst = function () {\n    const functionName = `${thisFileName}initializeAst(): `;\n    const TRUE = true;\n    while (TRUE) {\n      if (thisThis.ast === undefined) {\n        thisThis.ast = null;\n        break;\n      }\n      if (thisThis.ast === null) {\n        break;\n      }\n      if (thisThis.ast.astObject !== 'astObject') {\n        throw new Error(`${functionName}ast object not recognized`);\n      }\n      break;\n    }\n    if (thisThis.ast !== null) {\n      thisThis.ast.init(rules, udts, chars);\n    }\n  };\n  /* called by parse() to initialize the trace object, if one has been defined */\n  const initializeTrace = function () {\n    const functionName = `${thisFileName}initializeTrace(): `;\n    const TRUE = true;\n    while (TRUE) {\n      if (thisThis.trace === undefined) {\n        thisThis.trace = null;\n        break;\n      }\n      if (thisThis.trace === null) {\n        break;\n      }\n      if (thisThis.trace.traceObject !== 'traceObject') {\n        throw new Error(`${functionName}trace object not recognized`);\n      }\n      break;\n    }\n    if (thisThis.trace !== null) {\n      thisThis.trace.init(rules, udts, chars);\n    }\n  };\n  /* called by parse() to initialize the statistics object, if one has been defined */\n  const initializeStats = function () {\n    const functionName = `${thisFileName}initializeStats(): `;\n    const TRUE = true;\n    while (TRUE) {\n      if (thisThis.stats === undefined) {\n        thisThis.stats = null;\n        break;\n      }\n      if (thisThis.stats === null) {\n        break;\n      }\n      if (thisThis.stats.statsObject !== 'statsObject') {\n        throw new Error(`${functionName}stats object not recognized`);\n      }\n      break;\n    }\n    if (thisThis.stats !== null) {\n      thisThis.stats.init(rules, udts);\n    }\n  };\n  /* called by parse() to initialize the rules & udts from the grammar object */\n  /* (the grammar object generated previously by apg) */\n  const initializeGrammar = function (grammar) {\n    const functionName = `${thisFileName}initializeGrammar(): `;\n    if (!grammar) {\n      throw new Error(`${functionName}grammar object undefined`);\n    }\n    if (grammar.grammarObject !== 'grammarObject') {\n      throw new Error(`${functionName}bad grammar object`);\n    }\n    rules = grammar.rules;\n    udts = grammar.udts;\n  };\n  /* called by parse() to initialize the start rule */\n  const initializeStartRule = function (startRule) {\n    const functionName = `${thisFileName}initializeStartRule(): `;\n    let start = null;\n    if (typeof startRule === 'number') {\n      if (startRule >= rules.length) {\n        throw new Error(`${functionName}start rule index too large: max: ${rules.length}: index: ${startRule}`);\n      }\n      start = startRule;\n    } else if (typeof startRule === 'string') {\n      const lower = startRule.toLowerCase();\n      for (let i = 0; i < rules.length; i += 1) {\n        if (lower === rules[i].lower) {\n          start = rules[i].index;\n          break;\n        }\n      }\n      if (start === null) {\n        throw new Error(`${functionName}start rule name '${startRule}' not recognized`);\n      }\n    } else {\n      throw new Error(`${functionName}type of start rule '${typeof startRule}' not recognized`);\n    }\n    return start;\n  };\n  /* called by parse() to initialize the array of characters codes representing the input string */\n  const initializeInputChars = function initializeInputChars(inputArg, begArg, lenArg) {\n    const functionName = `${thisFileName}initializeInputChars(): `;\n    /* varify and normalize input */\n    let input = inputArg;\n    let beg = begArg;\n    let len = lenArg;\n    if (input === undefined) {\n      throw new Error(`${functionName}input string is undefined`);\n    }\n    if (input === null) {\n      throw new Error(`${functionName}input string is null`);\n    }\n    if (typeof input === 'string') {\n      input = utils.stringToChars(input);\n    } else if (!Array.isArray(input)) {\n      throw new Error(`${functionName}input string is not a string or array`);\n    }\n    if (input.length > 0) {\n      if (typeof input[0] !== 'number') {\n        throw new Error(`${functionName}input string not an array of integers`);\n      }\n    }\n    /* verify and normalize beginning index */\n    if (typeof beg !== 'number') {\n      beg = 0;\n    } else {\n      beg = Math.floor(beg);\n      if (beg < 0 || beg > input.length) {\n        throw new Error(`${functionName}input beginning index out of range: ${beg}`);\n      }\n    }\n    /* verify and normalize input length */\n    if (typeof len !== 'number') {\n      len = input.length - beg;\n    } else {\n      len = Math.floor(len);\n      if (len < 0 || len > input.length - beg) {\n        throw new Error(`${functionName}input length out of range: ${len}`);\n      }\n    }\n    chars = input;\n    charsBegin = beg;\n    charsLength = len;\n    charsEnd = charsBegin + charsLength;\n  };\n  /* called by parse() to initialize the user-written, syntax callback functions, if any */\n  const initializeCallbacks = function () {\n    const functionName = `${thisFileName}initializeCallbacks(): `;\n    let i;\n    ruleCallbacks = [];\n    udtCallbacks = [];\n    for (i = 0; i < rules.length; i += 1) {\n      ruleCallbacks[i] = null;\n    }\n    for (i = 0; i < udts.length; i += 1) {\n      udtCallbacks[i] = null;\n    }\n    let func;\n    const list = [];\n    for (i = 0; i < rules.length; i += 1) {\n      list.push(rules[i].lower);\n    }\n    for (i = 0; i < udts.length; i += 1) {\n      list.push(udts[i].lower);\n    }\n    for (const index in thisThis.callbacks) {\n      i = list.indexOf(index.toLowerCase());\n      if (i < 0) {\n        throw new Error(`${functionName}syntax callback '${index}' not a rule or udt name`);\n      }\n      func = thisThis.callbacks[index];\n      if (!func) {\n        func = null;\n      }\n      if (typeof func === 'function' || func === null) {\n        if (i < rules.length) {\n          ruleCallbacks[i] = func;\n        } else {\n          udtCallbacks[i - rules.length] = func;\n        }\n      } else {\n        throw new Error(\n          `${functionName}syntax callback[${index}] must be function reference or 'false' (false/null/undefined/etc.)`\n        );\n      }\n    }\n    /* make sure all udts have been defined - the parser can't work without them */\n    for (i = 0; i < udts.length; i += 1) {\n      if (udtCallbacks[i] === null) {\n        throw new Error(\n          `${functionName}all UDT callbacks must be defined. UDT callback[${udts[i].lower}] not a function reference`\n        );\n      }\n    }\n  };\n  // Set the maximum parse tree depth allowed. The default is `Infinity`.\n  // A limit is not normally needed, but can be used to protect against an\n  // exponentual or \"catastrophically backtracking\" grammar.\n  // <ul>\n  // <li>\n  // depth - max allowed parse tree depth. An exception is thrown if exceeded.\n  // </li>\n  // </ul>\n  this.setMaxTreeDepth = function (depth) {\n    if (typeof depth !== 'number') {\n      throw new Error(`parser: max tree depth must be integer > 0: ${depth}`);\n    }\n    limitTreeDepth = Math.floor(depth);\n    if (limitTreeDepth <= 0) {\n      throw new Error(`parser: max tree depth must be integer > 0: ${depth}`);\n    }\n  };\n  // Set the maximum number of node hits (parser unit steps or opcode function calls) allowed.\n  // The default is `Infinity`.\n  // A limit is not normally needed, but can be used to protect against an\n  // exponentual or \"catastrophically backtracking\" grammar.\n  // <ul>\n  // <li>\n  // hits - maximum number of node hits or parser unit steps allowed.\n  // An exception thrown if exceeded.\n  // </li>\n  // </ul>\n  this.setMaxNodeHits = function (hits) {\n    if (typeof hits !== 'number') {\n      throw new Error(`parser: max node hits must be integer > 0: ${hits}`);\n    }\n    limitNodeHits = Math.floor(hits);\n    if (limitNodeHits <= 0) {\n      throw new Error(`parser: max node hits must be integer > 0: ${hits}`);\n    }\n  };\n  /* the main parser function */\n  const privateParse = function (grammar, startRuleArg, callbackData) {\n    let success;\n    const functionName = `${thisFileName}parse(): `;\n    initializeGrammar(grammar);\n    const startRule = initializeStartRule(startRuleArg);\n    initializeCallbacks();\n    initializeTrace();\n    initializeStats();\n    initializeAst();\n    const sysData = new systemData();\n    if (!(callbackData === undefined || callbackData === null)) {\n      syntaxData = callbackData;\n    }\n    /* create a dummy opcode for the start rule */\n    opcodes = [\n      {\n        type: id.RNM,\n        index: startRule,\n      },\n    ];\n    /* execute the start rule */\n    opExecute(0, charsBegin, sysData);\n    opcodes = null;\n    /* test and return the sysData */\n    switch (sysData.state) {\n      case id.ACTIVE:\n        throw new Error(`${functionName}final state should never be 'ACTIVE'`);\n      case id.NOMATCH:\n        success = false;\n        break;\n      case id.EMPTY:\n      case id.MATCH:\n        if (sysData.phraseLength === charsLength) {\n          success = true;\n        } else {\n          success = false;\n        }\n        break;\n      default:\n        throw new Error('unrecognized state');\n    }\n    return {\n      success,\n      state: sysData.state,\n      length: charsLength,\n      matched: sysData.phraseLength,\n      maxMatched,\n      maxTreeDepth,\n      nodeHits,\n      inputLength: chars.length,\n      subBegin: charsBegin,\n      subEnd: charsEnd,\n      subLength: charsLength,\n    };\n  };\n\n  // This form allows parsing of a sub-string of the full input string.\n  // <ul>\n  // <li>*inputIndex* - index of the first character in the sub-string</li>\n  // <li>*inputLength* - length of the sub-string</li>\n  // </ul>\n  // All other parameters as for the above function `parse()`.\n  this.parseSubstring = function parseSubstring(grammar, startRule, inputChars, inputIndex, inputLength, callbackData) {\n    clear();\n    initializeInputChars(inputChars, inputIndex, inputLength);\n    return privateParse(grammar, startRule, callbackData);\n  };\n  // This is the main function, called to parse an input string.\n  // <ul>\n  // <li>*grammar* - an instantiated grammar object - the output of `apg` for a\n  // specific SABNF grammar</li>\n  // <li>*startRule* - the rule name or rule index to be used as the root of the\n  // parse tree. This is usually the first rule, index = 0, of the grammar\n  // but can be any rule defined in the above grammar object.</li>\n  // <li>*inputChars* - the input string. Can be a string or an array of integer character codes representing the\n  // string.</li>\n  // <li>*callbackData* - user-defined data object to be passed to the user's\n  // callback functions.\n  // This is not used by the parser in any way, merely passed on to the user.\n  // May be `null` or omitted.</li>\n  // </ul>\n  this.parse = function parse(grammar, startRule, inputChars, callbackData) {\n    clear();\n    initializeInputChars(inputChars, 0, inputChars.length);\n    return privateParse(grammar, startRule, callbackData);\n  };\n  // The `ALT` operator.<br>\n  // Executes its child nodes, from left to right, until it finds a match.\n  // Fails if *all* of its child nodes fail.\n  const opALT = function (opIndex, phraseIndex, sysData) {\n    const op = opcodes[opIndex];\n    for (let i = 0; i < op.children.length; i += 1) {\n      opExecute(op.children[i], phraseIndex, sysData);\n      if (sysData.state !== id.NOMATCH) {\n        break;\n      }\n    }\n  };\n  // The `CAT` operator.<br>\n  // Executes all of its child nodes, from left to right,\n  // concatenating the matched phrases.\n  // Fails if *any* child nodes fail.\n  const opCAT = function (opIndex, phraseIndex, sysData) {\n    let success;\n    let astLength;\n    let catCharIndex;\n    let catPhrase;\n    const op = opcodes[opIndex];\n    const ulen = sysData.uFrame.length();\n    const plen = sysData.pFrame.length();\n    if (thisThis.ast) {\n      astLength = thisThis.ast.getLength();\n    }\n    success = true;\n    catCharIndex = phraseIndex;\n    catPhrase = 0;\n    for (let i = 0; i < op.children.length; i += 1) {\n      opExecute(op.children[i], catCharIndex, sysData);\n      if (sysData.state === id.NOMATCH) {\n        success = false;\n        break;\n      } else {\n        catCharIndex += sysData.phraseLength;\n        catPhrase += sysData.phraseLength;\n      }\n    }\n    if (success) {\n      sysData.state = catPhrase === 0 ? id.EMPTY : id.MATCH;\n      sysData.phraseLength = catPhrase;\n    } else {\n      sysData.state = id.NOMATCH;\n      sysData.phraseLength = 0;\n      /* reset the back referencing frames on failure */\n      sysData.uFrame.pop(ulen);\n      sysData.pFrame.pop(plen);\n      if (thisThis.ast) {\n        thisThis.ast.setLength(astLength);\n      }\n    }\n  };\n  // The `REP` operator.<br>\n  // Repeatedly executes its single child node,\n  // concatenating each of the matched phrases found.\n  // The number of repetitions executed and its final sysData depends\n  // on its `min` & `max` repetition values.\n  const opREP = function (opIndex, phraseIndex, sysData) {\n    let astLength;\n    let repCharIndex;\n    let repPhrase;\n    let repCount;\n    const op = opcodes[opIndex];\n    repCharIndex = phraseIndex;\n    repPhrase = 0;\n    repCount = 0;\n    const ulen = sysData.uFrame.length();\n    const plen = sysData.pFrame.length();\n    if (thisThis.ast) {\n      astLength = thisThis.ast.getLength();\n    }\n    const TRUE = true;\n    while (TRUE) {\n      if (repCharIndex >= charsEnd) {\n        /* exit on end of input string */\n        break;\n      }\n      opExecute(opIndex + 1, repCharIndex, sysData);\n      if (sysData.state === id.NOMATCH) {\n        /* always end if the child node fails */\n        break;\n      }\n      if (sysData.state === id.EMPTY) {\n        /* REP always succeeds when the child node returns an empty phrase */\n        /* this may not seem obvious, but that's the way it works out */\n        break;\n      }\n      repCount += 1;\n      repPhrase += sysData.phraseLength;\n      repCharIndex += sysData.phraseLength;\n      if (repCount === op.max) {\n        /* end on maxed out reps */\n        break;\n      }\n    }\n    /* evaluate the match count according to the min, max values */\n    if (sysData.state === id.EMPTY) {\n      sysData.state = repPhrase === 0 ? id.EMPTY : id.MATCH;\n      sysData.phraseLength = repPhrase;\n    } else if (repCount >= op.min) {\n      sysData.state = repPhrase === 0 ? id.EMPTY : id.MATCH;\n      sysData.phraseLength = repPhrase;\n    } else {\n      sysData.state = id.NOMATCH;\n      sysData.phraseLength = 0;\n      /* reset the back referencing frames on failure */\n      sysData.uFrame.pop(ulen);\n      sysData.pFrame.pop(plen);\n      if (thisThis.ast) {\n        thisThis.ast.setLength(astLength);\n      }\n    }\n  };\n  // Validate the callback function's returned sysData values.\n  // It's the user's responsibility to get them right\n  // but `RNM` fails if not.\n  const validateRnmCallbackResult = function (rule, sysData, charsLeft, down) {\n    if (sysData.phraseLength > charsLeft) {\n      let str = `${thisFileName}opRNM(${rule.name}): callback function error: `;\n      str += `sysData.phraseLength: ${sysData.phraseLength}`;\n      str += ` must be <= remaining chars: ${charsLeft}`;\n      throw new Error(str);\n    }\n    switch (sysData.state) {\n      case id.ACTIVE:\n        if (down !== true) {\n          throw new Error(\n            `${thisFileName}opRNM(${rule.name}): callback function return error. ACTIVE state not allowed.`\n          );\n        }\n        break;\n      case id.EMPTY:\n        sysData.phraseLength = 0;\n        break;\n      case id.MATCH:\n        if (sysData.phraseLength === 0) {\n          sysData.state = id.EMPTY;\n        }\n        break;\n      case id.NOMATCH:\n        sysData.phraseLength = 0;\n        break;\n      default:\n        throw new Error(\n          `${thisFileName}opRNM(${rule.name}): callback function return error. Unrecognized return state: ${sysData.state}`\n        );\n    }\n  };\n  // The `RNM` operator.<br>\n  // This operator will acts as a root node for a parse tree branch below and\n  // returns the matched phrase to its parent.\n  // However, its larger responsibility is handling user-defined callback functions, back references and `AST` nodes.\n  // Note that the `AST` is a separate object, but `RNM` calls its functions to create its nodes.\n  // See [`ast.js`](./ast.html) for usage.\n  const opRNM = function (opIndex, phraseIndex, sysData) {\n    let astLength;\n    let astDefined;\n    let savedOpcodes;\n    let ulen;\n    let plen;\n    let saveFrame;\n    const op = opcodes[opIndex];\n    const rule = rules[op.index];\n    const callback = ruleCallbacks[rule.index];\n    const notLookAround = !inLookAround();\n    /* ignore AST and back references in lookaround */\n    if (notLookAround) {\n      /* begin AST and back references */\n      astDefined = thisThis.ast && thisThis.ast.ruleDefined(op.index);\n      if (astDefined) {\n        astLength = thisThis.ast.getLength();\n        thisThis.ast.down(op.index, rules[op.index].name);\n      }\n      ulen = sysData.uFrame.length();\n      plen = sysData.pFrame.length();\n      sysData.uFrame.push();\n      sysData.pFrame.push();\n      saveFrame = sysData.pFrame;\n      sysData.pFrame = new backRef();\n    }\n    if (callback === null) {\n      /* no callback - just execute the rule */\n      savedOpcodes = opcodes;\n      opcodes = rule.opcodes;\n      opExecute(0, phraseIndex, sysData);\n      opcodes = savedOpcodes;\n    } else {\n      /* call user's callback */\n      const charsLeft = charsEnd - phraseIndex;\n      sysData.ruleIndex = rule.index;\n      callback(sysData, chars, phraseIndex, syntaxData);\n      validateRnmCallbackResult(rule, sysData, charsLeft, true);\n      if (sysData.state === id.ACTIVE) {\n        savedOpcodes = opcodes;\n        opcodes = rule.opcodes;\n        opExecute(0, phraseIndex, sysData);\n        opcodes = savedOpcodes;\n        sysData.ruleIndex = rule.index;\n        callback(sysData, chars, phraseIndex, syntaxData);\n        validateRnmCallbackResult(rule, sysData, charsLeft, false);\n      } /* implied else clause: just accept the callback sysData - RNM acting as UDT */\n    }\n    if (notLookAround) {\n      /* end AST */\n      if (astDefined) {\n        if (sysData.state === id.NOMATCH) {\n          thisThis.ast.setLength(astLength);\n        } else {\n          thisThis.ast.up(op.index, rule.name, phraseIndex, sysData.phraseLength);\n        }\n      }\n      /* end back reference */\n      sysData.pFrame = saveFrame;\n      if (sysData.state === id.NOMATCH) {\n        sysData.uFrame.pop(ulen);\n        sysData.pFrame.pop(plen);\n      } else if (rule.isBkr) {\n        /* save phrase on both the parent and universal frames */\n        /* BKR operator will decide which to use later */\n        sysData.pFrame.savePhrase(rule.lower, phraseIndex, sysData.phraseLength);\n        sysData.uFrame.savePhrase(rule.lower, phraseIndex, sysData.phraseLength);\n      }\n    }\n  };\n  // Validate the callback function's returned sysData values.\n  // It's the user's responsibility to get it right but `UDT` fails if not.\n  const validateUdtCallbackResult = function (udt, sysData, charsLeft) {\n    if (sysData.phraseLength > charsLeft) {\n      let str = `${thisFileName}opUDT(${udt.name}): callback function error: `;\n      str += `sysData.phraseLength: ${sysData.phraseLength}`;\n      str += ` must be <= remaining chars: ${charsLeft}`;\n      throw new Error(str);\n    }\n    switch (sysData.state) {\n      case id.ACTIVE:\n        throw new Error(`${thisFileName}opUDT(${udt.name}): callback function return error. ACTIVE state not allowed.`);\n      case id.EMPTY:\n        if (udt.empty === false) {\n          throw new Error(`${thisFileName}opUDT(${udt.name}): callback function return error. May not return EMPTY.`);\n        } else {\n          sysData.phraseLength = 0;\n        }\n        break;\n      case id.MATCH:\n        if (sysData.phraseLength === 0) {\n          if (udt.empty === false) {\n            throw new Error(`${thisFileName}opUDT(${udt.name}): callback function return error. May not return EMPTY.`);\n          } else {\n            sysData.state = id.EMPTY;\n          }\n        }\n        break;\n      case id.NOMATCH:\n        sysData.phraseLength = 0;\n        break;\n      default:\n        throw new Error(\n          `${thisFileName}opUDT(${udt.name}): callback function return error. Unrecognized return state: ${sysData.state}`\n        );\n    }\n  };\n  // The `UDT` operator.<br>\n  // Simply calls the user's callback function, but operates like `RNM` with regard to the `AST`\n  // and back referencing.\n  // There is some ambiguity here. `UDT`s act as terminals for phrase recognition but as named rules\n  // for `AST` nodes and back referencing.\n  // See [`ast.js`](./ast.html) for usage.\n  const opUDT = function (opIndex, phraseIndex, sysData) {\n    let astLength;\n    let astIndex;\n    let astDefined;\n    let ulen;\n    let plen;\n    let saveFrame;\n    const op = opcodes[opIndex];\n    const udt = udts[op.index];\n    sysData.UdtIndex = udt.index;\n\n    const notLookAround = !inLookAround();\n    /* ignore AST and back references in lookaround */\n    if (notLookAround) {\n      /* begin AST and back reference */\n      astDefined = thisThis.ast && thisThis.ast.udtDefined(op.index);\n      if (astDefined) {\n        astIndex = rules.length + op.index;\n        astLength = thisThis.ast.getLength();\n        thisThis.ast.down(astIndex, udt.name);\n      }\n      /* NOTE: push and pop of the back reference frame is normally not necessary */\n      /* only in the case that the UDT calls evaluateRule() or evaluateUdt() */\n      ulen = sysData.uFrame.length();\n      plen = sysData.pFrame.length();\n      sysData.uFrame.push();\n      sysData.pFrame.push();\n      saveFrame = sysData.pFrame;\n      sysData.pFrame = new backRef();\n    }\n    /* call the UDT */\n    const charsLeft = charsEnd - phraseIndex;\n    udtCallbacks[op.index](sysData, chars, phraseIndex, syntaxData);\n    validateUdtCallbackResult(udt, sysData, charsLeft);\n    if (notLookAround) {\n      /* end AST */\n      if (astDefined) {\n        if (sysData.state === id.NOMATCH) {\n          thisThis.ast.setLength(astLength);\n        } else {\n          thisThis.ast.up(astIndex, udt.name, phraseIndex, sysData.phraseLength);\n        }\n      }\n      /* end back reference */\n      sysData.pFrame = saveFrame;\n      if (sysData.state === id.NOMATCH) {\n        sysData.uFrame.pop(ulen);\n        sysData.pFrame.pop(plen);\n      } else if (udt.isBkr) {\n        /* save phrase on both the parent and universal frames */\n        /* BKR operator will decide which to use later */\n        sysData.pFrame.savePhrase(udt.lower, phraseIndex, sysData.phraseLength);\n        sysData.uFrame.savePhrase(udt.lower, phraseIndex, sysData.phraseLength);\n      }\n    }\n  };\n  // The `AND` operator.<br>\n  // This is the positive `look ahead` operator.\n  // Executes its single child node, returning the EMPTY state\n  // if it succeedsand NOMATCH if it fails.\n  // *Always* backtracks on any matched phrase and returns EMPTY on success.\n  const opAND = function (opIndex, phraseIndex, sysData) {\n    lookAround.push({\n      lookAround: id.LOOKAROUND_AHEAD,\n      anchor: phraseIndex,\n      charsEnd,\n      charsLength,\n    });\n    charsEnd = chars.length;\n    charsLength = chars.length - charsBegin;\n    opExecute(opIndex + 1, phraseIndex, sysData);\n    const pop = lookAround.pop();\n    charsEnd = pop.charsEnd;\n    charsLength = pop.charsLength;\n    sysData.phraseLength = 0;\n    switch (sysData.state) {\n      case id.EMPTY:\n        sysData.state = id.EMPTY;\n        break;\n      case id.MATCH:\n        sysData.state = id.EMPTY;\n        break;\n      case id.NOMATCH:\n        sysData.state = id.NOMATCH;\n        break;\n      default:\n        throw new Error(`opAND: invalid state ${sysData.state}`);\n    }\n  };\n  // The `NOT` operator.<br>\n  // This is the negative `look ahead` operator.\n  // Executes its single child node, returning the EMPTY state\n  // if it *fails* and NOMATCH if it succeeds.\n  // *Always* backtracks on any matched phrase and returns EMPTY\n  // on success (failure of its child node).\n  const opNOT = function (opIndex, phraseIndex, sysData) {\n    lookAround.push({\n      lookAround: id.LOOKAROUND_AHEAD,\n      anchor: phraseIndex,\n      charsEnd,\n      charsLength,\n    });\n    charsEnd = chars.length;\n    charsLength = chars.length - charsBegin;\n    opExecute(opIndex + 1, phraseIndex, sysData);\n    const pop = lookAround.pop();\n    charsEnd = pop.charsEnd;\n    charsLength = pop.charsLength;\n    sysData.phraseLength = 0;\n    switch (sysData.state) {\n      case id.EMPTY:\n      case id.MATCH:\n        sysData.state = id.NOMATCH;\n        break;\n      case id.NOMATCH:\n        sysData.state = id.EMPTY;\n        break;\n      default:\n        throw new Error(`opNOT: invalid state ${sysData.state}`);\n    }\n  };\n  // The `TRG` operator.<br>\n  // Succeeds if the single first character of the phrase is\n  // within the `min - max` range.\n  const opTRG = function (opIndex, phraseIndex, sysData) {\n    const op = opcodes[opIndex];\n    sysData.state = id.NOMATCH;\n    if (phraseIndex < charsEnd) {\n      if (op.min <= chars[phraseIndex] && chars[phraseIndex] <= op.max) {\n        sysData.state = id.MATCH;\n        sysData.phraseLength = 1;\n      }\n    }\n  };\n  // The `TBS` operator.<br>\n  // Matches its pre-defined phrase against the input string.\n  // All characters must match exactly.\n  // Case-sensitive literal strings (`'string'` & `%s\"string\"`) are translated to `TBS`\n  // operators by `apg`.\n  // Phrase length of zero is not allowed.\n  // Empty phrases can only be defined with `TLS` operators.\n  const opTBS = function (opIndex, phraseIndex, sysData) {\n    let i;\n    const op = opcodes[opIndex];\n    const len = op.string.length;\n    sysData.state = id.NOMATCH;\n    if (phraseIndex + len <= charsEnd) {\n      for (i = 0; i < len; i += 1) {\n        if (chars[phraseIndex + i] !== op.string[i]) {\n          return;\n        }\n      }\n      sysData.state = id.MATCH;\n      sysData.phraseLength = len;\n    } /* implied else NOMATCH */\n  };\n  // The `TLS` operator.<br>\n  // Matches its pre-defined phrase against the input string.\n  // A case-insensitive match is attempted for ASCII alphbetical characters.\n  // `TLS` is the only operator that explicitly allows empty phrases.\n  // `apg` will fail for empty `TBS`, case-sensitive strings (`''`) or\n  // zero repetitions (`0*0RuleName` or `0RuleName`).\n  const opTLS = function (opIndex, phraseIndex, sysData) {\n    let i;\n    let code;\n    const op = opcodes[opIndex];\n    sysData.state = id.NOMATCH;\n    const len = op.string.length;\n    if (len === 0) {\n      /* EMPTY match allowed for TLS */\n      sysData.state = id.EMPTY;\n      return;\n    }\n    if (phraseIndex + len <= charsEnd) {\n      for (i = 0; i < len; i += 1) {\n        code = chars[phraseIndex + i];\n        if (code >= 65 && code <= 90) {\n          code += 32;\n        }\n        if (code !== op.string[i]) {\n          return;\n        }\n      }\n      sysData.state = id.MATCH;\n      sysData.phraseLength = len;\n    } /* implied else NOMATCH */\n  };\n  // The `ABG` operator.<br>\n  // This is an \"anchor\" for the beginning of the string, similar to the familiar regex `^` anchor.\n  // An anchor matches a position rather than a phrase.\n  // Returns EMPTY if `phraseIndex` is 0, NOMATCH otherwise.\n  const opABG = function (opIndex, phraseIndex, sysData) {\n    sysData.state = id.NOMATCH;\n    sysData.phraseLength = 0;\n    sysData.state = phraseIndex === 0 ? id.EMPTY : id.NOMATCH;\n  };\n  // The `AEN` operator.<br>\n  // This is an \"anchor\" for the end of the string, similar to the familiar regex `$` anchor.\n  // An anchor matches a position rather than a phrase.\n  // Returns EMPTY if `phraseIndex` equals the input string length, NOMATCH otherwise.\n  const opAEN = function (opIndex, phraseIndex, sysData) {\n    sysData.state = id.NOMATCH;\n    sysData.phraseLength = 0;\n    sysData.state = phraseIndex === chars.length ? id.EMPTY : id.NOMATCH;\n  };\n  // The `BKR` operator.<br>\n  // The back reference operator.\n  // Matches the last matched phrase of the named rule or UDT against the input string.\n  // For ASCII alphbetical characters the match may be case sensitive (`%s`) or insensitive (`%i`),\n  // depending on the back reference definition.\n  // For `universal` mode (`%u`) matches the last phrase found anywhere in the grammar.\n  // For `parent frame` mode (`%p`) matches the last phrase found in the parent rule only.\n  const opBKR = function (opIndex, phraseIndex, sysData) {\n    let i;\n    let code;\n    let lmcode;\n    let lower;\n    const op = opcodes[opIndex];\n    sysData.state = id.NOMATCH;\n    if (op.index < rules.length) {\n      lower = rules[op.index].lower;\n    } else {\n      lower = udts[op.index - rules.length].lower;\n    }\n    const frame = op.bkrMode === id.BKR_MODE_PM ? sysData.pFrame.getPhrase(lower) : sysData.uFrame.getPhrase(lower);\n    const insensitive = op.bkrCase === id.BKR_MODE_CI;\n    if (frame === null) {\n      return;\n    }\n    const lmIndex = frame.phraseIndex;\n    const len = frame.phraseLength;\n    if (len === 0) {\n      sysData.state = id.EMPTY;\n      return;\n    }\n    if (phraseIndex + len <= charsEnd) {\n      if (insensitive) {\n        /* case-insensitive match */\n        for (i = 0; i < len; i += 1) {\n          code = chars[phraseIndex + i];\n          lmcode = chars[lmIndex + i];\n          if (code >= 65 && code <= 90) {\n            code += 32;\n          }\n          if (lmcode >= 65 && lmcode <= 90) {\n            lmcode += 32;\n          }\n          if (code !== lmcode) {\n            return;\n          }\n        }\n        sysData.state = id.MATCH;\n        sysData.phraseLength = len;\n      } else {\n        /* case-sensitive match */\n        for (i = 0; i < len; i += 1) {\n          code = chars[phraseIndex + i];\n          lmcode = chars[lmIndex + i];\n          if (code !== lmcode) {\n            return;\n          }\n        }\n      }\n      sysData.state = id.MATCH;\n      sysData.phraseLength = len;\n    }\n  };\n  // The `BKA` operator.<br>\n  // This is the positive `look behind` operator.\n  // It's child node is parsed right-to-left.\n  // Returns the EMPTY state if a match is found, NOMATCH otherwise.\n  // Like the look ahead operators, it always backtracks to `phraseIndex`.\n  const opBKA = function (opIndex, phraseIndex, sysData) {\n    lookAround.push({\n      lookAround: id.LOOKAROUND_BEHIND,\n      anchor: phraseIndex,\n    });\n    opExecute(opIndex + 1, phraseIndex, sysData);\n    lookAround.pop();\n    sysData.phraseLength = 0;\n    switch (sysData.state) {\n      case id.EMPTY:\n        sysData.state = id.EMPTY;\n        break;\n      case id.MATCH:\n        sysData.state = id.EMPTY;\n        break;\n      case id.NOMATCH:\n        sysData.state = id.NOMATCH;\n        break;\n      default:\n        throw new Error(`opBKA: invalid state ${sysData.state}`);\n    }\n  };\n  // The `BKN` operator.<br>\n  // This is the negative `look behind` operator.\n  // It's child node is parsed right-to-left.\n  // Returns the EMPTY state if a match is *not* found, NOMATCH otherwise.\n  // Like the look ahead operators, it always backtracks to `phraseIndex`.\n  const opBKN = function (opIndex, phraseIndex, sysData) {\n    // let op;\n    // op = opcodes[opIndex];\n    lookAround.push({\n      lookAround: id.LOOKAROUND_BEHIND,\n      anchor: phraseIndex,\n    });\n    opExecute(opIndex + 1, phraseIndex, sysData);\n    lookAround.pop();\n    sysData.phraseLength = 0;\n    switch (sysData.state) {\n      case id.EMPTY:\n      case id.MATCH:\n        sysData.state = id.NOMATCH;\n        break;\n      case id.NOMATCH:\n        sysData.state = id.EMPTY;\n        break;\n      default:\n        throw new Error(`opBKN: invalid state ${sysData.state}`);\n    }\n  };\n  // The right-to-left `CAT` operator.<br>\n  // Called for `CAT` operators when in look behind mode.\n  // Calls its child nodes from right to left concatenating matched phrases right to left.\n  const opCATBehind = function (opIndex, phraseIndex, sysData) {\n    let success;\n    let astLength;\n    let catCharIndex;\n    let catMatched;\n    const op = opcodes[opIndex];\n    const ulen = sysData.uFrame.length();\n    const plen = sysData.pFrame.length();\n    if (thisThis.ast) {\n      astLength = thisThis.ast.getLength();\n    }\n    success = true;\n    catCharIndex = phraseIndex;\n    catMatched = 0;\n    // catPhrase = 0;\n    for (let i = op.children.length - 1; i >= 0; i -= 1) {\n      opExecute(op.children[i], catCharIndex, sysData);\n      catCharIndex -= sysData.phraseLength;\n      catMatched += sysData.phraseLength;\n      // catPhrase += sysData.phraseLength;\n      if (sysData.state === id.NOMATCH) {\n        success = false;\n        break;\n      }\n    }\n    if (success) {\n      sysData.state = catMatched === 0 ? id.EMPTY : id.MATCH;\n      sysData.phraseLength = catMatched;\n    } else {\n      sysData.state = id.NOMATCH;\n      sysData.phraseLength = 0;\n      sysData.uFrame.pop(ulen);\n      sysData.pFrame.pop(plen);\n      if (thisThis.ast) {\n        thisThis.ast.setLength(astLength);\n      }\n    }\n  };\n  // The right-to-left `REP` operator.<br>\n  // Called for `REP` operators in look behind mode.\n  // Makes repeated calls to its child node, concatenating matched phrases right to left.\n  const opREPBehind = function (opIndex, phraseIndex, sysData) {\n    let astLength;\n    let repCharIndex;\n    let repPhrase;\n    let repCount;\n    const op = opcodes[opIndex];\n    repCharIndex = phraseIndex;\n    repPhrase = 0;\n    repCount = 0;\n    const ulen = sysData.uFrame.length();\n    const plen = sysData.pFrame.length();\n    if (thisThis.ast) {\n      astLength = thisThis.ast.getLength();\n    }\n    const TRUE = true;\n    while (TRUE) {\n      if (repCharIndex <= 0) {\n        /* exit on end of input string */\n        break;\n      }\n      opExecute(opIndex + 1, repCharIndex, sysData);\n      if (sysData.state === id.NOMATCH) {\n        /* always end if the child node fails */\n        break;\n      }\n      if (sysData.state === id.EMPTY) {\n        /* REP always succeeds when the child node returns an empty phrase */\n        /* this may not seem obvious, but that's the way it works out */\n        break;\n      }\n      repCount += 1;\n      repPhrase += sysData.phraseLength;\n      repCharIndex -= sysData.phraseLength;\n      if (repCount === op.max) {\n        /* end on maxed out reps */\n        break;\n      }\n    }\n    /* evaluate the match count according to the min, max values */\n    if (sysData.state === id.EMPTY) {\n      sysData.state = repPhrase === 0 ? id.EMPTY : id.MATCH;\n      sysData.phraseLength = repPhrase;\n    } else if (repCount >= op.min) {\n      sysData.state = repPhrase === 0 ? id.EMPTY : id.MATCH;\n      sysData.phraseLength = repPhrase;\n    } else {\n      sysData.state = id.NOMATCH;\n      sysData.phraseLength = 0;\n      sysData.uFrame.pop(ulen);\n      sysData.pFrame.pop(plen);\n      if (thisThis.ast) {\n        thisThis.ast.setLength(astLength);\n      }\n    }\n  };\n  // The right-to-left `TRG` operator.<br>\n  // Called for `TRG` operators in look behind mode.\n  // Matches a single character at `phraseIndex - 1` to the `min` - `max` range.\n  const opTRGBehind = function (opIndex, phraseIndex, sysData) {\n    const op = opcodes[opIndex];\n    sysData.state = id.NOMATCH;\n    sysData.phraseLength = 0;\n    if (phraseIndex > 0) {\n      const char = chars[phraseIndex - 1];\n      if (op.min <= char && char <= op.max) {\n        sysData.state = id.MATCH;\n        sysData.phraseLength = 1;\n      }\n    }\n  };\n  // The right-to-left `TBS` operator.<br>\n  // Called for `TBS` operators in look behind mode.\n  // Matches the `TBS` phrase to the left of `phraseIndex`.\n  const opTBSBehind = function (opIndex, phraseIndex, sysData) {\n    let i;\n    const op = opcodes[opIndex];\n    sysData.state = id.NOMATCH;\n    const len = op.string.length;\n    const beg = phraseIndex - len;\n    if (beg >= 0) {\n      for (i = 0; i < len; i += 1) {\n        if (chars[beg + i] !== op.string[i]) {\n          return;\n        }\n      }\n      sysData.state = id.MATCH;\n      sysData.phraseLength = len;\n    }\n  };\n  // The right-to-left `TLS` operator.<br>\n  // Called for `TLS` operators in look behind mode.\n  // Matches the `TLS` phrase to the left of `phraseIndex`.\n  const opTLSBehind = function (opIndex, phraseIndex, sysData) {\n    let char;\n    const op = opcodes[opIndex];\n    sysData.state = id.NOMATCH;\n    const len = op.string.length;\n    if (len === 0) {\n      /* EMPTY match allowed for TLS */\n      sysData.state = id.EMPTY;\n      return;\n    }\n    const beg = phraseIndex - len;\n    if (beg >= 0) {\n      for (let i = 0; i < len; i += 1) {\n        char = chars[beg + i];\n        if (char >= 65 && char <= 90) {\n          char += 32;\n        }\n        if (char !== op.string[i]) {\n          return;\n        }\n      }\n      sysData.state = id.MATCH;\n      sysData.phraseLength = len;\n    }\n  };\n  // The right-to-left back reference operator.<br>\n  // Matches the back referenced phrase to the left of `phraseIndex`.\n  const opBKRBehind = function (opIndex, phraseIndex, sysData) {\n    let i;\n    let code;\n    let lmcode;\n    let lower;\n    const op = opcodes[opIndex];\n    /* NOMATCH default */\n    sysData.state = id.NOMATCH;\n    sysData.phraseLength = 0;\n    if (op.index < rules.length) {\n      lower = rules[op.index].lower;\n    } else {\n      lower = udts[op.index - rules.length].lower;\n    }\n    const frame = op.bkrMode === id.BKR_MODE_PM ? sysData.pFrame.getPhrase(lower) : sysData.uFrame.getPhrase(lower);\n    const insensitive = op.bkrCase === id.BKR_MODE_CI;\n    if (frame === null) {\n      return;\n    }\n    const lmIndex = frame.phraseIndex;\n    const len = frame.phraseLength;\n    if (len === 0) {\n      sysData.state = id.EMPTY;\n      sysData.phraseLength = 0;\n      return;\n    }\n    const beg = phraseIndex - len;\n    if (beg >= 0) {\n      if (insensitive) {\n        /* case-insensitive match */\n        for (i = 0; i < len; i += 1) {\n          code = chars[beg + i];\n          lmcode = chars[lmIndex + i];\n          if (code >= 65 && code <= 90) {\n            code += 32;\n          }\n          if (lmcode >= 65 && lmcode <= 90) {\n            lmcode += 32;\n          }\n          if (code !== lmcode) {\n            return;\n          }\n        }\n        sysData.state = id.MATCH;\n        sysData.phraseLength = len;\n      } else {\n        /* case-sensitive match */\n        for (i = 0; i < len; i += 1) {\n          code = chars[beg + i];\n          lmcode = chars[lmIndex + i];\n          if (code !== lmcode) {\n            return;\n          }\n        }\n      }\n      sysData.state = id.MATCH;\n      sysData.phraseLength = len;\n    }\n  };\n  // Generalized execution function.<br>\n  // Having a single, generalized function, allows a single location\n  // for tracing and statistics gathering functions to be called.\n  // Tracing and statistics are handled in separate objects.\n  // However, the parser calls their API to build the object data records.\n  // See [`trace.js`](./trace.html) and [`stats.js`](./stats.html) for their\n  // usage.\n  opExecute = function opExecuteFunc(opIndex, phraseIndex, sysData) {\n    let ret = true;\n    const op = opcodes[opIndex];\n    nodeHits += 1;\n    if (nodeHits > limitNodeHits) {\n      throw new Error(`parser: maximum number of node hits exceeded: ${limitNodeHits}`);\n    }\n    treeDepth += 1;\n    if (treeDepth > maxTreeDepth) {\n      maxTreeDepth = treeDepth;\n      if (maxTreeDepth > limitTreeDepth) {\n        throw new Error(`parser: maximum parse tree depth exceeded: ${limitTreeDepth}`);\n      }\n    }\n    sysData.refresh();\n    if (thisThis.trace !== null) {\n      /* collect the trace record for down the parse tree */\n      const lk = lookAroundValue();\n      thisThis.trace.down(op, sysData.state, phraseIndex, sysData.phraseLength, lk.anchor, lk.lookAround);\n    }\n    if (inLookBehind()) {\n      switch (op.type) {\n        case id.ALT:\n          opALT(opIndex, phraseIndex, sysData);\n          break;\n        case id.CAT:\n          opCATBehind(opIndex, phraseIndex, sysData);\n          break;\n        case id.REP:\n          opREPBehind(opIndex, phraseIndex, sysData);\n          break;\n        case id.RNM:\n          opRNM(opIndex, phraseIndex, sysData);\n          break;\n        case id.UDT:\n          opUDT(opIndex, phraseIndex, sysData);\n          break;\n        case id.AND:\n          opAND(opIndex, phraseIndex, sysData);\n          break;\n        case id.NOT:\n          opNOT(opIndex, phraseIndex, sysData);\n          break;\n        case id.TRG:\n          opTRGBehind(opIndex, phraseIndex, sysData);\n          break;\n        case id.TBS:\n          opTBSBehind(opIndex, phraseIndex, sysData);\n          break;\n        case id.TLS:\n          opTLSBehind(opIndex, phraseIndex, sysData);\n          break;\n        case id.BKR:\n          opBKRBehind(opIndex, phraseIndex, sysData);\n          break;\n        case id.BKA:\n          opBKA(opIndex, phraseIndex, sysData);\n          break;\n        case id.BKN:\n          opBKN(opIndex, phraseIndex, sysData);\n          break;\n        case id.ABG:\n          opABG(opIndex, phraseIndex, sysData);\n          break;\n        case id.AEN:\n          opAEN(opIndex, phraseIndex, sysData);\n          break;\n        default:\n          ret = false;\n          break;\n      }\n    } else {\n      switch (op.type) {\n        case id.ALT:\n          opALT(opIndex, phraseIndex, sysData);\n          break;\n        case id.CAT:\n          opCAT(opIndex, phraseIndex, sysData);\n          break;\n        case id.REP:\n          opREP(opIndex, phraseIndex, sysData);\n          break;\n        case id.RNM:\n          opRNM(opIndex, phraseIndex, sysData);\n          break;\n        case id.UDT:\n          opUDT(opIndex, phraseIndex, sysData);\n          break;\n        case id.AND:\n          opAND(opIndex, phraseIndex, sysData);\n          break;\n        case id.NOT:\n          opNOT(opIndex, phraseIndex, sysData);\n          break;\n        case id.TRG:\n          opTRG(opIndex, phraseIndex, sysData);\n          break;\n        case id.TBS:\n          opTBS(opIndex, phraseIndex, sysData);\n          break;\n        case id.TLS:\n          opTLS(opIndex, phraseIndex, sysData);\n          break;\n        case id.BKR:\n          opBKR(opIndex, phraseIndex, sysData);\n          break;\n        case id.BKA:\n          opBKA(opIndex, phraseIndex, sysData);\n          break;\n        case id.BKN:\n          opBKN(opIndex, phraseIndex, sysData);\n          break;\n        case id.ABG:\n          opABG(opIndex, phraseIndex, sysData);\n          break;\n        case id.AEN:\n          opAEN(opIndex, phraseIndex, sysData);\n          break;\n        default:\n          ret = false;\n          break;\n      }\n    }\n    if (!inLookAround() && phraseIndex + sysData.phraseLength > maxMatched) {\n      maxMatched = phraseIndex + sysData.phraseLength;\n    }\n    if (thisThis.stats !== null) {\n      /* collect the statistics */\n      thisThis.stats.collect(op, sysData);\n    }\n    if (thisThis.trace !== null) {\n      /* collect the trace record for up the parse tree */\n      const lk = lookAroundValue();\n      thisThis.trace.up(op, sysData.state, phraseIndex, sysData.phraseLength, lk.anchor, lk.lookAround);\n    }\n    treeDepth -= 1;\n    return ret;\n  };\n};\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module is the constructor for the statistics gathering object.\n// The statistics are nothing more than keeping a count of the\n// number of times each node in the parse tree is traversed.\n//\n// Counts are collected for each of the individual types of operators.\n// Additionally, counts are collected for each of the individually named\n// `RNM` and `UDT` operators.\nmodule.exports = function statsFunc() {\n  const id = require('./identifiers');\n  const utils = require('./utilities');\n  const style = require('./style');\n\n  const thisFileName = 'stats.js: ';\n  let rules = [];\n  let udts = [];\n  const stats = [];\n  let totals;\n  const ruleStats = [];\n  const udtStats = [];\n  this.statsObject = 'statsObject';\n  const nameId = 'stats';\n  /* `Array.sort()` callback function for sorting `RNM` and `UDT` operators alphabetically by name. */\n  const sortAlpha = function sortAlpha(lhs, rhs) {\n    if (lhs.lower < rhs.lower) {\n      return -1;\n    }\n    if (lhs.lower > rhs.lower) {\n      return 1;\n    }\n    return 0;\n  };\n  /* `Array.sort()` callback function for sorting `RNM` and `UDT` operators by hit count. */\n  const sortHits = function sortHits(lhs, rhs) {\n    if (lhs.total < rhs.total) {\n      return 1;\n    }\n    if (lhs.total > rhs.total) {\n      return -1;\n    }\n    return sortAlpha(lhs, rhs);\n  };\n  /* `Array.sort()` callback function for sorting `RNM` and `UDT` operators by index */\n  /* (in the order in which they appear in the SABNF grammar). */\n  const sortIndex = function sortIndex(lhs, rhs) {\n    if (lhs.index < rhs.index) {\n      return -1;\n    }\n    if (lhs.index > rhs.index) {\n      return 1;\n    }\n    return 0;\n  };\n  const EmptyStat = function EmptyStat() {\n    this.empty = 0;\n    this.match = 0;\n    this.nomatch = 0;\n    this.total = 0;\n  };\n  /* Zero out all stats */\n  const clear = function clear() {\n    stats.length = 0;\n    totals = new EmptyStat();\n    stats[id.ALT] = new EmptyStat();\n    stats[id.CAT] = new EmptyStat();\n    stats[id.REP] = new EmptyStat();\n    stats[id.RNM] = new EmptyStat();\n    stats[id.TRG] = new EmptyStat();\n    stats[id.TBS] = new EmptyStat();\n    stats[id.TLS] = new EmptyStat();\n    stats[id.UDT] = new EmptyStat();\n    stats[id.AND] = new EmptyStat();\n    stats[id.NOT] = new EmptyStat();\n    stats[id.BKR] = new EmptyStat();\n    stats[id.BKA] = new EmptyStat();\n    stats[id.BKN] = new EmptyStat();\n    stats[id.ABG] = new EmptyStat();\n    stats[id.AEN] = new EmptyStat();\n    ruleStats.length = 0;\n    for (let i = 0; i < rules.length; i += 1) {\n      ruleStats.push({\n        empty: 0,\n        match: 0,\n        nomatch: 0,\n        total: 0,\n        name: rules[i].name,\n        lower: rules[i].lower,\n        index: rules[i].index,\n      });\n    }\n    if (udts.length > 0) {\n      udtStats.length = 0;\n      for (let i = 0; i < udts.length; i += 1) {\n        udtStats.push({\n          empty: 0,\n          match: 0,\n          nomatch: 0,\n          total: 0,\n          name: udts[i].name,\n          lower: udts[i].lower,\n          index: udts[i].index,\n        });\n      }\n    }\n  };\n  /* increment the designated operator hit count by one */\n  const incStat = function incStat(stat, state) {\n    stat.total += 1;\n    switch (state) {\n      case id.EMPTY:\n        stat.empty += 1;\n        break;\n      case id.MATCH:\n        stat.match += 1;\n        break;\n      case id.NOMATCH:\n        stat.nomatch += 1;\n        break;\n      default:\n        throw new Error(`${thisFileName}collect(): incStat(): unrecognized state: ${state}`);\n    }\n  };\n  /* helper for toHtml() */\n  const displayRow = function displayRow(name, stat) {\n    let html = '';\n    html += '<tr>';\n    html += `<td class=\"${style.CLASS_ACTIVE}\">${name}</td>`;\n    html += `<td class=\"${style.CLASS_EMPTY}\">${stat.empty}</td>`;\n    html += `<td class=\"${style.CLASS_MATCH}\">${stat.match}</td>`;\n    html += `<td class=\"${style.CLASS_NOMATCH}\">${stat.nomatch}</td>`;\n    html += `<td class=\"${style.CLASS_ACTIVE}\">${stat.total}</td>`;\n    html += '</tr>\\n';\n    return html;\n  };\n  const displayOpsOnly = function displayOpsOnly() {\n    let html = '';\n    html += displayRow('ALT', stats[id.ALT]);\n    html += displayRow('CAT', stats[id.CAT]);\n    html += displayRow('REP', stats[id.REP]);\n    html += displayRow('RNM', stats[id.RNM]);\n    html += displayRow('TRG', stats[id.TRG]);\n    html += displayRow('TBS', stats[id.TBS]);\n    html += displayRow('TLS', stats[id.TLS]);\n    html += displayRow('UDT', stats[id.UDT]);\n    html += displayRow('AND', stats[id.AND]);\n    html += displayRow('NOT', stats[id.NOT]);\n    html += displayRow('BKR', stats[id.BKR]);\n    html += displayRow('BKA', stats[id.BKA]);\n    html += displayRow('BKN', stats[id.BKN]);\n    html += displayRow('ABG', stats[id.ABG]);\n    html += displayRow('AEN', stats[id.AEN]);\n    html += displayRow('totals', totals);\n    return html;\n  };\n  /* helper for toHtml() */\n  const displayRules = function displayRules() {\n    let html = '';\n    html += '<tr><th></th><th></th><th></th><th></th><th></th></tr>\\n';\n    html += '<tr><th>rules</th><th></th><th></th><th></th><th></th></tr>\\n';\n    for (let i = 0; i < rules.length; i += 1) {\n      if (ruleStats[i].total > 0) {\n        html += '<tr>';\n        html += `<td class=\"${style.CLASS_ACTIVE}\">${ruleStats[i].name}</td>`;\n        html += `<td class=\"${style.CLASS_EMPTY}\">${ruleStats[i].empty}</td>`;\n        html += `<td class=\"${style.CLASS_MATCH}\">${ruleStats[i].match}</td>`;\n        html += `<td class=\"${style.CLASS_NOMATCH}\">${ruleStats[i].nomatch}</td>`;\n        html += `<td class=\"${style.CLASS_ACTIVE}\">${ruleStats[i].total}</td>`;\n        html += '</tr>\\n';\n      }\n    }\n    if (udts.length > 0) {\n      html += '<tr><th></th><th></th><th></th><th></th><th></th></tr>\\n';\n      html += '<tr><th>udts</th><th></th><th></th><th></th><th></th></tr>\\n';\n      for (let i = 0; i < udts.length; i += 1) {\n        if (udtStats[i].total > 0) {\n          html += '<tr>';\n          html += `<td class=\"${style.CLASS_ACTIVE}\">${udtStats[i].name}</td>`;\n          html += `<td class=\"${style.CLASS_EMPTY}\">${udtStats[i].empty}</td>`;\n          html += `<td class=\"${style.CLASS_MATCH}\">${udtStats[i].match}</td>`;\n          html += `<td class=\"${style.CLASS_NOMATCH}\">${udtStats[i].nomatch}</td>`;\n          html += `<td class=\"${style.CLASS_ACTIVE}\">${udtStats[i].total}</td>`;\n          html += '</tr>\\n';\n        }\n      }\n    }\n    return html;\n  };\n  /* called only by the parser to validate a stats object */\n  this.validate = function validate(name) {\n    let ret = false;\n    if (typeof name === 'string' && nameId === name) {\n      ret = true;\n    }\n    return ret;\n  };\n  /* no verification of input - only called by parser() */\n  this.init = function init(inputRules, inputUdts) {\n    rules = inputRules;\n    udts = inputUdts;\n    clear();\n  };\n  /* This function is the main interaction with the parser. */\n  /* The parser calls it after each node has been traversed. */\n  this.collect = function collect(op, result) {\n    incStat(totals, result.state, result.phraseLength);\n    incStat(stats[op.type], result.state, result.phraseLength);\n    if (op.type === id.RNM) {\n      incStat(ruleStats[op.index], result.state, result.phraseLength);\n    }\n    if (op.type === id.UDT) {\n      incStat(udtStats[op.index], result.state, result.phraseLength);\n    }\n  };\n  // Display the statistics as an HTML table.\n  // - *type*\n  //   - \"ops\" - (default) display only the total hit counts for all operator types.\n  //   - \"index\" - additionally, display the hit counts for the individual `RNM` and `UDT` operators ordered by index.\n  //   - \"hits\" - additionally, display the hit counts for the individual `RNM` and `UDT` operators by hit count.\n  //   - \"alpha\" - additionally, display the hit counts for the individual `RNM` and `UDT` operators by name alphabetically.\n  // - *caption* - optional caption for the table\n  this.toHtml = function toHtml(type, caption) {\n    let html = '';\n    html += `<table class=\"${style.CLASS_STATS}\">\\n`;\n    if (typeof caption === 'string') {\n      html += `<caption>${caption}</caption>\\n`;\n    }\n    html += `<tr><th class=\"${style.CLASS_ACTIVE}\">ops</th>\\n`;\n    html += `<th class=\"${style.CLASS_EMPTY}\">EMPTY</th>\\n`;\n    html += `<th class=\"${style.CLASS_MATCH}\">MATCH</th>\\n`;\n    html += `<th class=\"${style.CLASS_NOMATCH}\">NOMATCH</th>\\n`;\n    html += `<th class=\"${style.CLASS_ACTIVE}\">totals</th></tr>\\n`;\n    const test = true;\n    while (test) {\n      if (type === undefined) {\n        html += displayOpsOnly();\n        break;\n      }\n      if (type === null) {\n        html += displayOpsOnly();\n        break;\n      }\n      if (type === 'ops') {\n        html += displayOpsOnly();\n        break;\n      }\n      if (type === 'index') {\n        ruleStats.sort(sortIndex);\n        if (udtStats.length > 0) {\n          udtStats.sort(sortIndex);\n        }\n        html += displayOpsOnly();\n        html += displayRules();\n        break;\n      }\n      if (type === 'hits') {\n        ruleStats.sort(sortHits);\n        if (udtStats.length > 0) {\n          udtStats.sort(sortIndex);\n        }\n        html += displayOpsOnly();\n        html += displayRules();\n        break;\n      }\n      if (type === 'alpha') {\n        ruleStats.sort(sortAlpha);\n        if (udtStats.length > 0) {\n          udtStats.sort(sortAlpha);\n        }\n        html += displayOpsOnly();\n        html += displayRules();\n        break;\n      }\n      break;\n    }\n    html += '</table>\\n';\n    return html;\n  };\n  // Display the stats table in a complete HTML5 page.\n  this.toHtmlPage = function toHtmlPage(type, caption, title) {\n    return utils.htmlToPage(this.toHtml(type, caption), title);\n  };\n};\n","/* eslint-disable func-names */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\n/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module provides a means of tracing the parser through the parse tree as it goes.\n// It is the primary debugging facility for debugging both the SABNF grammar syntax\n// and the input strings that are supposed to be valid grammar sentences.\n// It is also a very informative and educational tool for understanding\n// how a parser actually operates for a given language.\n//\n// Tracing is the process of generating and saving a record of information for each passage\n// of the parser through a parse tree node. And since it traverses each node twice, once down the tree\n// and once coming back up, there are two records for each node.\n// This, obviously, has the potential of generating lots of records.\n// And since these records are normally displayed on a web page\n// it is important to have a means to limit the actual number of records generated to\n// probably no more that a few thousand. This is almost always enough to find any errors.\n// The problem is to get the *right* few thousand records.\n// Therefore, this module has a number of ways of limiting and/or filtering, the number and type of records.\n// Considerable effort has been made to make this filtering of the trace output as simple\n// and intuitive as possible.\n//\n// However, the ability to filter the trace records, or for that matter even understand what they are\n// and the information they contain, does require a minimum amount of understanding of the APG parsing\n// method. The parse tree nodes are all represented by APG operators. They break down into two natural groups.\n// - The `RNM` operators and `UDT` operators are named phrases.\n// These are names chosen by the writer of the SABNF grammar to represent special phrases of interest.\n// - All others collect, concatenate and otherwise manipulate various intermediate phrases along the way.\n//\n// There are separate means of filtering which of these operators in each of these two groups get traced.\n// Let `trace` be an instantiated `trace.js` object.\n// Prior to parsing the string, filtering the rules and UDTs can be defined as follows:\n// ```\n// trace.filter.rules[\"rulename\"] = true;\n//     /* trace rule name \"rulename\" */\n// trace.filter.rules[\"udtname\"]  = true;\n//     /* trace UDT name \"udtname\" */\n// trace.filter.rules[\"<ALL>\"]    = true;\n//     /* trace all rules and UDTs (the default) */\n// trace.filter.rules[\"<NONE>\"]   = true;\n//     /* trace no rules or UDTS */\n// ```\n// If any rule or UDT name other than \"&lt;ALL>\" or \"&lt;NONE>\" is specified, all other names are turned off.\n// Therefore, to be selective of rule names, a filter statement is required for each rule/UDT name desired.\n//\n// Filtering of the other operators follows a similar procedure.\n// ```\n// trace.filter.operators[\"TRG\"] = true;\n//     /* trace the terminal range, TRG, operators */\n// trace.filter.operators[\"CAT\"]  = true;\n//     /* trace the concatenations, CAT, operators */\n// trace.filter.operators[\"<ALL>\"]    = true;\n//     /* trace all operators */\n// trace.filter.operators[\"<NONE>\"]   = true;\n//     /* trace no operators (the default) */\n// ```\n// If any operator name other than \"&lt;ALL>\" or \"&lt;NONE>\" is specified, all other names are turned off.\n// Therefore, to be selective of operator names, a filter statement is required for each name desired.\n//\n// There is, additionally, a means for limiting the total number of filtered or saved trace records.\n// See the function, `setMaxRecords(max)` below. This will result in only the last `max` records being saved.\n//\n// (See [`apg-examples`](https://github.com/ldthomas/apg-js-examples) for examples of using `trace.js`.)\nmodule.exports = function exportTrace() {\n  const utils = require('./utilities');\n  const style = require('./style');\n  const circular = new (require('./circular-buffer'))();\n  const id = require('./identifiers');\n\n  const thisFileName = 'trace.js: ';\n  const that = this;\n  const MODE_HEX = 16;\n  const MODE_DEC = 10;\n  const MODE_ASCII = 8;\n  const MODE_UNICODE = 32;\n  const MAX_PHRASE = 80;\n  const MAX_TLS = 5;\n  const records = [];\n  let maxRecords = 5000;\n  let lastRecord = -1;\n  let filteredRecords = 0;\n  let treeDepth = 0;\n  const recordStack = [];\n  let chars = null;\n  let rules = null;\n  let udts = null;\n  const operatorFilter = [];\n  const ruleFilter = [];\n  /* special trace table phrases */\n  const PHRASE_END = `<span class=\"${style.CLASS_LINEEND}\">&bull;</span>`;\n  const PHRASE_CONTINUE = `<span class=\"${style.CLASS_LINEEND}\">&hellip;</span>`;\n  const PHRASE_EMPTY = `<span class=\"${style.CLASS_EMPTY}\">&#120634;</span>`;\n  /* filter the non-RNM & non-UDT operators */\n  const initOperatorFilter = function () {\n    const setOperators = function (set) {\n      operatorFilter[id.ALT] = set;\n      operatorFilter[id.CAT] = set;\n      operatorFilter[id.REP] = set;\n      operatorFilter[id.TLS] = set;\n      operatorFilter[id.TBS] = set;\n      operatorFilter[id.TRG] = set;\n      operatorFilter[id.AND] = set;\n      operatorFilter[id.NOT] = set;\n      operatorFilter[id.BKR] = set;\n      operatorFilter[id.BKA] = set;\n      operatorFilter[id.BKN] = set;\n      operatorFilter[id.ABG] = set;\n      operatorFilter[id.AEN] = set;\n    };\n    let items = 0;\n    // eslint-disable-next-line no-unused-vars\n    for (const name in that.filter.operators) {\n      items += 1;\n    }\n    if (items === 0) {\n      /* case 1: no operators specified: default: do not trace any operators */\n      setOperators(false);\n      return;\n    }\n    for (const name in that.filter.operators) {\n      const upper = name.toUpperCase();\n      if (upper === '<ALL>') {\n        /* case 2: <all> operators specified: trace all operators ignore all other operator commands */\n        setOperators(true);\n        return;\n      }\n      if (upper === '<NONE>') {\n        /* case 3: <none> operators specified: trace NO operators ignore all other operator commands */\n        setOperators(false);\n        return;\n      }\n    }\n    setOperators(false);\n    for (const name in that.filter.operators) {\n      const upper = name.toUpperCase();\n      /* case 4: one or more individual operators specified: trace 'true' operators only */\n      if (upper === 'ALT') {\n        operatorFilter[id.ALT] = that.filter.operators[name] === true;\n      } else if (upper === 'CAT') {\n        operatorFilter[id.CAT] = that.filter.operators[name] === true;\n      } else if (upper === 'REP') {\n        operatorFilter[id.REP] = that.filter.operators[name] === true;\n      } else if (upper === 'AND') {\n        operatorFilter[id.AND] = that.filter.operators[name] === true;\n      } else if (upper === 'NOT') {\n        operatorFilter[id.NOT] = that.filter.operators[name] === true;\n      } else if (upper === 'TLS') {\n        operatorFilter[id.TLS] = that.filter.operators[name] === true;\n      } else if (upper === 'TBS') {\n        operatorFilter[id.TBS] = that.filter.operators[name] === true;\n      } else if (upper === 'TRG') {\n        operatorFilter[id.TRG] = that.filter.operators[name] === true;\n      } else if (upper === 'BKR') {\n        operatorFilter[id.BKR] = that.filter.operators[name] === true;\n      } else if (upper === 'BKA') {\n        operatorFilter[id.BKA] = that.filter.operators[name] === true;\n      } else if (upper === 'BKN') {\n        operatorFilter[id.BKN] = that.filter.operators[name] === true;\n      } else if (upper === 'ABG') {\n        operatorFilter[id.ABG] = that.filter.operators[name] === true;\n      } else if (upper === 'AEN') {\n        operatorFilter[id.AEN] = that.filter.operators[name] === true;\n      } else {\n        throw new Error(\n          `${thisFileName}initOpratorFilter: '${name}' not a valid operator name.` +\n            ` Must be <all>, <none>, alt, cat, rep, tls, tbs, trg, and, not, bkr, bka or bkn`\n        );\n      }\n    }\n  };\n  /* filter the rule and `UDT` named operators */\n  const initRuleFilter = function () {\n    const setRules = function (set) {\n      operatorFilter[id.RNM] = set;\n      operatorFilter[id.UDT] = set;\n      const count = rules.length + udts.length;\n      ruleFilter.length = 0;\n      for (let i = 0; i < count; i += 1) {\n        ruleFilter.push(set);\n      }\n    };\n    let items;\n    let i;\n    const list = [];\n    for (i = 0; i < rules.length; i += 1) {\n      list.push(rules[i].lower);\n    }\n    for (i = 0; i < udts.length; i += 1) {\n      list.push(udts[i].lower);\n    }\n    ruleFilter.length = 0;\n    items = 0;\n    // eslint-disable-next-line no-unused-vars\n    for (const name in that.filter.rules) {\n      items += 1;\n    }\n    if (items === 0) {\n      /* case 1: default to all rules & udts */\n      setRules(true);\n      return;\n    }\n    for (const name in that.filter.rules) {\n      const lower = name.toLowerCase();\n      if (lower === '<all>') {\n        /* case 2: trace all rules ignore all other rule commands */\n        setRules(true);\n        return;\n      }\n      if (lower === '<none>') {\n        /* case 3: trace no rules */\n        setRules(false);\n        return;\n      }\n    }\n    /* case 4: trace only individually specified rules */\n    setRules(false);\n    operatorFilter[id.RNM] = true;\n    operatorFilter[id.UDT] = true;\n    for (const name in that.filter.rules) {\n      const lower = name.toLowerCase();\n      i = list.indexOf(lower);\n      if (i < 0) {\n        throw new Error(`${thisFileName}initRuleFilter: '${name}' not a valid rule or udt name`);\n      }\n      ruleFilter[i] = that.filter.rules[name] === true;\n    }\n  };\n  /* used by other APG components to verify that they have a valid trace object */\n  this.traceObject = 'traceObject';\n  this.filter = {\n    operators: [],\n    rules: [],\n  };\n  // Set the maximum number of records to keep (default = 5000).\n  // Each record number larger than `maxRecords`\n  // will result in deleting the previously oldest record.\n  // - `max`: maximum number of records to retain (default = 5000)\n  // - `last`: last record number to retain, (default = -1 for (unknown) actual last record)\n  this.setMaxRecords = function (max, last) {\n    lastRecord = -1;\n    if (typeof max === 'number' && max > 0) {\n      maxRecords = Math.ceil(max);\n    } else {\n      maxRecords = 0;\n      return;\n    }\n    if (typeof last === 'number') {\n      lastRecord = Math.floor(last);\n      if (lastRecord < 0) {\n        lastRecord = -1;\n      }\n    }\n  };\n  // Returns `maxRecords` to the caller.\n  this.getMaxRecords = function () {\n    return maxRecords;\n  };\n  // Returns `lastRecord` to the caller.\n  this.getLastRecord = function () {\n    return lastRecord;\n  };\n  /* Called only by the `parser.js` object. No verification of input. */\n  this.init = function (rulesIn, udtsIn, charsIn) {\n    records.length = 0;\n    recordStack.length = 0;\n    filteredRecords = 0;\n    treeDepth = 0;\n    chars = charsIn;\n    rules = rulesIn;\n    udts = udtsIn;\n    initOperatorFilter();\n    initRuleFilter();\n    circular.init(maxRecords);\n  };\n  /* returns true if this records passes through the designated filter, false if the record is to be skipped */\n  const filterOps = function (op) {\n    let ret = false;\n    if (op.type === id.RNM) {\n      if (operatorFilter[op.type] && ruleFilter[op.index]) {\n        ret = true;\n      } else {\n        ret = false;\n      }\n    } else if (op.type === id.UDT) {\n      if (operatorFilter[op.type] && ruleFilter[rules.length + op.index]) {\n        ret = true;\n      } else {\n        ret = false;\n      }\n    } else {\n      ret = operatorFilter[op.type];\n    }\n    return ret;\n  };\n  const filterRecords = function (record) {\n    if (lastRecord === -1) {\n      return true;\n    }\n    if (record <= lastRecord) {\n      return true;\n    }\n    return false;\n  };\n  /* Collect the \"down\" record. */\n  this.down = function (op, state, offset, length, anchor, lookAround) {\n    if (filterRecords(filteredRecords) && filterOps(op)) {\n      recordStack.push(filteredRecords);\n      records[circular.increment()] = {\n        dirUp: false,\n        depth: treeDepth,\n        thisLine: filteredRecords,\n        thatLine: undefined,\n        opcode: op,\n        state,\n        phraseIndex: offset,\n        phraseLength: length,\n        lookAnchor: anchor,\n        lookAround,\n      };\n      filteredRecords += 1;\n      treeDepth += 1;\n    }\n  };\n  /* Collect the \"up\" record. */\n  this.up = function (op, state, offset, length, anchor, lookAround) {\n    if (filterRecords(filteredRecords) && filterOps(op)) {\n      const thisLine = filteredRecords;\n      const thatLine = recordStack.pop();\n      const thatRecord = circular.getListIndex(thatLine);\n      if (thatRecord !== -1) {\n        records[thatRecord].thatLine = thisLine;\n      }\n      treeDepth -= 1;\n      records[circular.increment()] = {\n        dirUp: true,\n        depth: treeDepth,\n        thisLine,\n        thatLine,\n        opcode: op,\n        state,\n        phraseIndex: offset,\n        phraseLength: length,\n        lookAnchor: anchor,\n        lookAround,\n      };\n      filteredRecords += 1;\n    }\n  };\n  /* convert the trace records to a tree of nodes */\n  const toTreeObj = function () {\n    /* private helper functions */\n    function nodeOpcode(node, opcode) {\n      let name;\n      let casetype;\n      let modetype;\n      if (opcode) {\n        node.op = { id: opcode.type, name: utils.opcodeToString(opcode.type) };\n        node.opData = undefined;\n        switch (opcode.type) {\n          case id.RNM:\n            node.opData = rules[opcode.index].name;\n            break;\n          case id.UDT:\n            node.opData = udts[opcode.index].name;\n            break;\n          case id.BKR:\n            if (opcode.index < rules.length) {\n              name = rules[opcode.index].name;\n            } else {\n              name = udts[opcode.index - rules.length].name;\n            }\n            casetype = opcode.bkrCase === id.BKR_MODE_CI ? '%i' : '%s';\n            modetype = opcode.bkrMode === id.BKR_MODE_UM ? '%u' : '%p';\n            node.opData = `\\\\\\\\${casetype}${modetype}${name}`;\n            break;\n          case id.TLS:\n            node.opData = [];\n            for (let i = 0; i < opcode.string.length; i += 1) {\n              node.opData.push(opcode.string[i]);\n            }\n            break;\n          case id.TBS:\n            node.opData = [];\n            for (let i = 0; i < opcode.string.length; i += 1) {\n              node.opData.push(opcode.string[i]);\n            }\n            break;\n          case id.TRG:\n            node.opData = [opcode.min, opcode.max];\n            break;\n          case id.REP:\n            node.opData = [opcode.min, opcode.max];\n            break;\n          default:\n            throw new Error('unrecognized opcode');\n        }\n      } else {\n        node.op = { id: undefined, name: undefined };\n        node.opData = undefined;\n      }\n    }\n    function nodePhrase(state, index, length) {\n      if (state === id.MATCH) {\n        return {\n          index,\n          length,\n        };\n      }\n      if (state === id.NOMATCH) {\n        return {\n          index,\n          length: 0,\n        };\n      }\n      if (state === id.EMPTY) {\n        return {\n          index,\n          length: 0,\n        };\n      }\n      return null;\n    }\n    let nodeId = -1;\n    function nodeDown(parent, record, depth) {\n      const node = {\n        // eslint-disable-next-line no-plusplus\n        id: nodeId++,\n        branch: -1,\n        parent,\n        up: false,\n        down: false,\n        depth,\n        children: [],\n      };\n      if (record) {\n        node.down = true;\n        node.state = { id: record.state, name: utils.stateToString(record.state) };\n        node.phrase = null;\n        nodeOpcode(node, record.opcode);\n      } else {\n        node.state = { id: undefined, name: undefined };\n        node.phrase = nodePhrase();\n        nodeOpcode(node, undefined);\n      }\n      return node;\n    }\n    function nodeUp(node, record) {\n      if (record) {\n        node.up = true;\n        node.state = { id: record.state, name: utils.stateToString(record.state) };\n        node.phrase = nodePhrase(record.state, record.phraseIndex, record.phraseLength);\n        if (!node.down) {\n          nodeOpcode(node, record.opcode);\n        }\n      }\n    }\n    /* walk the final tree: label branches and count leaf nodes */\n    let leafNodes = 0;\n    let depth = -1;\n    let branchCount = 1;\n    function walk(node) {\n      depth += 1;\n      node.branch = branchCount;\n      if (depth > treeDepth) {\n        treeDepth = depth;\n      }\n      if (node.children.length === 0) {\n        leafNodes += 1;\n      } else {\n        for (let i = 0; i < node.children.length; i += 1) {\n          if (i > 0) {\n            branchCount += 1;\n          }\n          node.children[i].leftMost = false;\n          node.children[i].rightMost = false;\n          if (node.leftMost) {\n            node.children[i].leftMost = i === 0;\n          }\n          if (node.rightMost) {\n            node.children[i].rightMost = i === node.children.length - 1;\n          }\n          walk(node.children[i]);\n        }\n      }\n      depth -= 1;\n    }\n    function display(node, offset) {\n      let name;\n      const obj = {};\n      obj.id = node.id;\n      obj.branch = node.branch;\n      obj.leftMost = node.leftMost;\n      obj.rightMost = node.rightMost;\n      name = node.state.name ? node.state.name : 'ACTIVE';\n      obj.state = { id: node.state.id, name };\n      name = node.op.name ? node.op.name : '?';\n      obj.op = { id: node.op.id, name };\n      if (typeof node.opData === 'string') {\n        obj.opData = node.opData;\n      } else if (Array.isArray(node.opData)) {\n        obj.opData = [];\n        for (let i = 0; i < node.opData.length; i += 1) {\n          obj.opData[i] = node.opData[i];\n        }\n      } else {\n        obj.opData = undefined;\n      }\n      if (node.phrase) {\n        obj.phrase = { index: node.phrase.index, length: node.phrase.length };\n      } else {\n        obj.phrase = null;\n      }\n      obj.depth = node.depth;\n      obj.children = [];\n      for (let i = 0; i < node.children.length; i += 1) {\n        const c = i !== node.children.length - 1;\n        obj.children[i] = display(node.children[i], offset, c);\n      }\n      return obj;\n    }\n\n    /* construct the tree beginning here */\n    const branch = [];\n    let root;\n    let node;\n    let parent;\n    let record;\n    let firstRecord = true;\n    /* push a dummy node so the root node will have a non-null parent */\n    const dummy = nodeDown(null, null, -1);\n    branch.push(dummy);\n    node = dummy;\n    circular.forEach((lineIndex) => {\n      record = records[lineIndex];\n      if (firstRecord) {\n        firstRecord = false;\n        if (record.depth > 0) {\n          /* push some dummy nodes to fill in for missing records */\n          const num = record.dirUp ? record.depth + 1 : record.depth;\n          for (let i = 0; i < num; i += 1) {\n            parent = node;\n            node = nodeDown(node, null, i);\n            branch.push(node);\n            parent.children.push(node);\n          }\n        }\n      }\n      if (record.dirUp) {\n        /* handle the next record up */\n        node = branch.pop();\n        nodeUp(node, record);\n        node = branch[branch.length - 1];\n      } else {\n        /* handle the next record down */\n        parent = node;\n        node = nodeDown(node, record, record.depth);\n        branch.push(node);\n        parent.children.push(node);\n      }\n    });\n\n    /* if not at root, walk it up to root */\n    while (branch.length > 1) {\n      node = branch.pop();\n      nodeUp(node, null);\n    }\n    /* maybe redundant or paranoid tests: these should never happen */\n    if (dummy.children.length === 0) {\n      throw new Error('trace.toTree(): parse tree has no nodes');\n    }\n    if (branch.length === 0) {\n      throw new Error('trace.toTree(): integrity check: dummy root node disappeared?');\n    }\n\n    /* if no record for start rule: find the pseudo root node (first dummy node above a real node) */\n    root = dummy.children[0];\n    let prev = root;\n    while (root && !root.down && !root.up) {\n      prev = root;\n      root = root.children[0];\n    }\n    root = prev;\n\n    /* walk the tree of nodes: label brances and count leaves */\n    root.leftMost = true;\n    root.rightMost = true;\n    walk(root);\n    root.branch = 0;\n\n    /* generate the exported object */\n    const obj = {};\n    obj.string = [];\n    for (let i = 0; i < chars.length; i += 1) {\n      obj.string[i] = chars[i];\n    }\n    /* generate the exported rule names */\n    obj.rules = [];\n    for (let i = 0; i < rules.length; i += 1) {\n      obj.rules[i] = rules[i].name;\n    }\n    /* generate the exported UDT names */\n    obj.udts = [];\n    for (let i = 0; i < udts.length; i += 1) {\n      obj.udts[i] = udts[i].name;\n    }\n    /* generate the ids */\n    obj.id = {};\n    obj.id.ALT = { id: id.ALT, name: 'ALT' };\n    obj.id.CAT = { id: id.CAT, name: 'CAT' };\n    obj.id.REP = { id: id.REP, name: 'REP' };\n    obj.id.RNM = { id: id.RNM, name: 'RNM' };\n    obj.id.TLS = { id: id.TLS, name: 'TLS' };\n    obj.id.TBS = { id: id.TBS, name: 'TBS' };\n    obj.id.TRG = { id: id.TRG, name: 'TRG' };\n    obj.id.UDT = { id: id.UDT, name: 'UDT' };\n    obj.id.AND = { id: id.AND, name: 'AND' };\n    obj.id.NOT = { id: id.NOT, name: 'NOT' };\n    obj.id.BKR = { id: id.BKR, name: 'BKR' };\n    obj.id.BKA = { id: id.BKA, name: 'BKA' };\n    obj.id.BKN = { id: id.BKN, name: 'BKN' };\n    obj.id.ABG = { id: id.ABG, name: 'ABG' };\n    obj.id.AEN = { id: id.AEN, name: 'AEN' };\n    obj.id.ACTIVE = { id: id.ACTIVE, name: 'ACTIVE' };\n    obj.id.MATCH = { id: id.MATCH, name: 'MATCH' };\n    obj.id.EMPTY = { id: id.EMPTY, name: 'EMPTY' };\n    obj.id.NOMATCH = { id: id.NOMATCH, name: 'NOMATCH' };\n    /* generate the max tree depth */\n    obj.treeDepth = treeDepth;\n    /* generate the number of leaf nodes (branches) */\n    obj.leafNodes = leafNodes;\n    /* generate the types of the left- and right-most branches */\n    let branchesIncomplete;\n    if (root.down) {\n      if (root.up) {\n        branchesIncomplete = 'none';\n      } else {\n        branchesIncomplete = 'right';\n      }\n    } else if (root.up) {\n      branchesIncomplete = 'left';\n    } else {\n      branchesIncomplete = 'both';\n    }\n    obj.branchesIncomplete = branchesIncomplete;\n    obj.tree = display(root, root.depth, false);\n    return obj;\n  };\n  // Returns the trace records as JSON parse tree object.\n  // - stringify: if `true`, the object is 'stringified' before returning, otherwise, the object itself is returned.\n  this.toTree = function (stringify) {\n    const obj = toTreeObj();\n    if (stringify) {\n      return JSON.stringify(obj);\n    }\n    return obj;\n  };\n  // Translate the trace records to HTML format and create a complete HTML page for browser display.\n  this.toHtmlPage = function (mode, caption, title) {\n    return utils.htmlToPage(this.toHtml(mode, caption), title);\n  };\n\n  /* From here on down, these are just helper functions for `toHtml()`. */\n  const htmlHeader = function (mode, caption) {\n    /* open the page */\n    /* write the HTML5 header with table style */\n    /* open the <table> tag */\n    let modeName;\n    switch (mode) {\n      case MODE_HEX:\n        modeName = 'hexadecimal';\n        break;\n      case MODE_DEC:\n        modeName = 'decimal';\n        break;\n      case MODE_ASCII:\n        modeName = 'ASCII';\n        break;\n      case MODE_UNICODE:\n        modeName = 'UNICODE';\n        break;\n      default:\n        throw new Error(`${thisFileName}htmlHeader: unrecognized mode: ${mode}`);\n    }\n    let header = '';\n    header += `<p>display mode: ${modeName}</p>\\n`;\n    header += `<table class=\"${style.CLASS_TRACE}\">\\n`;\n    if (typeof caption === 'string') {\n      header += `<caption>${caption}</caption>`;\n    }\n    return header;\n  };\n  const htmlFooter = function () {\n    let footer = '';\n    /* close the </table> tag */\n    footer += '</table>\\n';\n    /* display a table legend */\n    footer += `<p class=\"${style.CLASS_MONOSPACE}\">legend:<br>\\n`;\n    footer += '(a)&nbsp;-&nbsp;line number<br>\\n';\n    footer += '(b)&nbsp;-&nbsp;matching line number<br>\\n';\n    footer += '(c)&nbsp;-&nbsp;phrase offset<br>\\n';\n    footer += '(d)&nbsp;-&nbsp;phrase length<br>\\n';\n    footer += '(e)&nbsp;-&nbsp;tree depth<br>\\n';\n    footer += '(f)&nbsp;-&nbsp;operator state<br>\\n';\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class=\"${style.CLASS_ACTIVE}\">&darr;</span>&nbsp;&nbsp;phrase opened<br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class=\"${style.CLASS_MATCH}\">&uarr;M</span> phrase matched<br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class=\"${style.CLASS_EMPTY}\">&uarr;E</span> empty phrase matched<br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class=\"${style.CLASS_NOMATCH}\">&uarr;N</span> phrase not matched<br>\\n`;\n    footer +=\n      'operator&nbsp;-&nbsp;ALT, CAT, REP, RNM, TRG, TLS, TBS<sup>&dagger;</sup>, UDT, AND, NOT, BKA, BKN, BKR, ABG, AEN<sup>&Dagger;</sup><br>\\n';\n    footer += `phrase&nbsp;&nbsp;&nbsp;-&nbsp;up to ${MAX_PHRASE} characters of the phrase being matched<br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class=\"${style.CLASS_MATCH}\">matched characters</span><br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class=\"${style.CLASS_LOOKAHEAD}\">matched characters in look ahead mode</span><br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class=\"${style.CLASS_LOOKBEHIND}\">matched characters in look behind mode</span><br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class=\"${style.CLASS_REMAINDER}\">remainder characters(not yet examined by parser)</span><br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class=\"${style.CLASS_CTRLCHAR}\">control characters, TAB, LF, CR, etc. (ASCII mode only)</span><br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${PHRASE_EMPTY} empty string<br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${PHRASE_END} end of input string<br>\\n`;\n    footer += `&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${PHRASE_CONTINUE} input string display truncated<br>\\n`;\n    footer += '</p>\\n';\n    footer += `<p class=\"${style.CLASS_MONOSPACE}\">\\n`;\n    footer += '<sup>&dagger;</sup>original ABNF operators:<br>\\n';\n    footer += 'ALT - alternation<br>\\n';\n    footer += 'CAT - concatenation<br>\\n';\n    footer += 'REP - repetition<br>\\n';\n    footer += 'RNM - rule name<br>\\n';\n    footer += 'TRG - terminal range<br>\\n';\n    footer += 'TLS - terminal literal string (case insensitive)<br>\\n';\n    footer += 'TBS - terminal binary string (case sensitive)<br>\\n';\n    footer += '<br>\\n';\n    footer += '<sup>&Dagger;</sup>super set SABNF operators:<br>\\n';\n    footer += 'UDT - user-defined terminal<br>\\n';\n    footer += 'AND - positive look ahead<br>\\n';\n    footer += 'NOT - negative look ahead<br>\\n';\n    footer += 'BKA - positive look behind<br>\\n';\n    footer += 'BKN - negative look behind<br>\\n';\n    footer += 'BKR - back reference<br>\\n';\n    footer += 'ABG - anchor - begin of input string<br>\\n';\n    footer += 'AEN - anchor - end of input string<br>\\n';\n    footer += '</p>\\n';\n    return footer;\n  };\n  this.indent = function (depth) {\n    let html = '';\n    for (let i = 0; i < depth; i += 1) {\n      html += '.';\n    }\n    return html;\n  };\n  /* format the TRG operator */\n  const displayTrg = function (mode, op) {\n    let html = '';\n    if (op.type === id.TRG) {\n      if (mode === MODE_HEX || mode === MODE_UNICODE) {\n        let hex = op.min.toString(16).toUpperCase();\n        if (hex.length % 2 !== 0) {\n          hex = `0${hex}`;\n        }\n        html += mode === MODE_HEX ? '%x' : 'U+';\n        html += hex;\n        hex = op.max.toString(16).toUpperCase();\n        if (hex.length % 2 !== 0) {\n          hex = `0${hex}`;\n        }\n        html += `&ndash;${hex}`;\n      } else {\n        html = `%d${op.min.toString(10)}&ndash;${op.max.toString(10)}`;\n      }\n    }\n    return html;\n  };\n  /* format the REP operator */\n  const displayRep = function (mode, op) {\n    let html = '';\n    if (op.type === id.REP) {\n      if (mode === MODE_HEX) {\n        let hex = op.min.toString(16).toUpperCase();\n        if (hex.length % 2 !== 0) {\n          hex = `0${hex}`;\n        }\n        html = `x${hex}`;\n        if (op.max < Infinity) {\n          hex = op.max.toString(16).toUpperCase();\n          if (hex.length % 2 !== 0) {\n            hex = `0${hex}`;\n          }\n        } else {\n          hex = 'inf';\n        }\n        html += `&ndash;${hex}`;\n      } else if (op.max < Infinity) {\n        html = `${op.min.toString(10)}&ndash;${op.max.toString(10)}`;\n      } else {\n        html = `${op.min.toString(10)}&ndash;inf`;\n      }\n    }\n    return html;\n  };\n  /* format the TBS operator */\n  const displayTbs = function (mode, op) {\n    let html = '';\n    if (op.type === id.TBS) {\n      const len = Math.min(op.string.length, MAX_TLS * 2);\n      if (mode === MODE_HEX || mode === MODE_UNICODE) {\n        html += mode === MODE_HEX ? '%x' : 'U+';\n        for (let i = 0; i < len; i += 1) {\n          let hex;\n          if (i > 0) {\n            html += '.';\n          }\n          hex = op.string[i].toString(16).toUpperCase();\n          if (hex.length % 2 !== 0) {\n            hex = `0${hex}`;\n          }\n          html += hex;\n        }\n      } else {\n        html = '%d';\n        for (let i = 0; i < len; i += 1) {\n          if (i > 0) {\n            html += '.';\n          }\n          html += op.string[i].toString(10);\n        }\n      }\n      if (len < op.string.length) {\n        html += PHRASE_CONTINUE;\n      }\n    }\n    return html;\n  };\n  /* format the TLS operator */\n  const displayTls = function (mode, op) {\n    let html = '';\n    if (op.type === id.TLS) {\n      const len = Math.min(op.string.length, MAX_TLS);\n      if (mode === MODE_HEX || mode === MODE_DEC) {\n        let charu;\n        let charl;\n        let base;\n        if (mode === MODE_HEX) {\n          html = '%x';\n          base = 16;\n        } else {\n          html = '%d';\n          base = 10;\n        }\n        for (let i = 0; i < len; i += 1) {\n          if (i > 0) {\n            html += '.';\n          }\n          charl = op.string[i];\n          if (charl >= 97 && charl <= 122) {\n            charu = charl - 32;\n            html += `${charu.toString(base)}/${charl.toString(base)}`.toUpperCase();\n          } else if (charl >= 65 && charl <= 90) {\n            charu = charl;\n            charl += 32;\n            html += `${charu.toString(base)}/${charl.toString(base)}`.toUpperCase();\n          } else {\n            html += charl.toString(base).toUpperCase();\n          }\n        }\n        if (len < op.string.length) {\n          html += PHRASE_CONTINUE;\n        }\n      } else {\n        html = '\"';\n        for (let i = 0; i < len; i += 1) {\n          html += utils.asciiChars[op.string[i]];\n        }\n        if (len < op.string.length) {\n          html += PHRASE_CONTINUE;\n        }\n        html += '\"';\n      }\n    }\n    return html;\n  };\n  const subPhrase = function (mode, charsArg, index, length, prev) {\n    if (length === 0) {\n      return '';\n    }\n    let phrase = '';\n    const comma = prev ? ',' : '';\n    switch (mode) {\n      case MODE_HEX:\n        phrase = comma + utils.charsToHex(charsArg, index, length);\n        break;\n      case MODE_DEC:\n        if (prev) {\n          return `,${utils.charsToDec(charsArg, index, length)}`;\n        }\n        phrase = comma + utils.charsToDec(charsArg, index, length);\n        break;\n      case MODE_UNICODE:\n        phrase = utils.charsToUnicode(charsArg, index, length);\n        break;\n      case MODE_ASCII:\n      default:\n        phrase = utils.charsToAsciiHtml(charsArg, index, length);\n        break;\n    }\n    return phrase;\n  };\n  /* display phrases matched in look-behind mode */\n  const displayBehind = function (mode, charsArg, state, index, length, anchor) {\n    let html = '';\n    let beg1;\n    let len1;\n    let beg2;\n    let len2;\n    let lastchar = PHRASE_END;\n    const spanBehind = `<span class=\"${style.CLASS_LOOKBEHIND}\">`;\n    const spanRemainder = `<span class=\"${style.CLASS_REMAINDER}\">`;\n    const spanend = '</span>';\n    let prev = false;\n    switch (state) {\n      case id.EMPTY:\n        html += PHRASE_EMPTY;\n      /* // eslint-disable-next-line no-fallthrough */\n      case id.NOMATCH:\n      case id.MATCH:\n      case id.ACTIVE:\n        beg1 = index - length;\n        len1 = anchor - beg1;\n        beg2 = anchor;\n        len2 = charsArg.length - beg2;\n        break;\n      default:\n        throw new Error('unrecognized state');\n    }\n    lastchar = PHRASE_END;\n    if (len1 > MAX_PHRASE) {\n      len1 = MAX_PHRASE;\n      lastchar = PHRASE_CONTINUE;\n      len2 = 0;\n    } else if (len1 + len2 > MAX_PHRASE) {\n      lastchar = PHRASE_CONTINUE;\n      len2 = MAX_PHRASE - len1;\n    }\n    if (len1 > 0) {\n      html += spanBehind;\n      html += subPhrase(mode, charsArg, beg1, len1, prev);\n      html += spanend;\n      prev = true;\n    }\n    if (len2 > 0) {\n      html += spanRemainder;\n      html += subPhrase(mode, charsArg, beg2, len2, prev);\n      html += spanend;\n    }\n    return html + lastchar;\n  };\n  const displayForward = function (mode, charsArg, state, index, length, spanAhead) {\n    let html = '';\n    let beg1;\n    let len1;\n    let beg2;\n    let len2;\n    let lastchar = PHRASE_END;\n    const spanRemainder = `<span class=\"${style.CLASS_REMAINDER}\">`;\n    const spanend = '</span>';\n    let prev = false;\n    switch (state) {\n      case id.EMPTY:\n        html += PHRASE_EMPTY;\n      /* // eslint-disable-next-line no-fallthrough */\n      case id.NOMATCH:\n      case id.ACTIVE:\n        beg1 = index;\n        len1 = 0;\n        beg2 = index;\n        len2 = charsArg.length - beg2;\n        break;\n      case id.MATCH:\n        beg1 = index;\n        len1 = length;\n        beg2 = index + len1;\n        len2 = charsArg.length - beg2;\n        break;\n      default:\n        throw new Error('unrecognized state');\n    }\n    lastchar = PHRASE_END;\n    if (len1 > MAX_PHRASE) {\n      len1 = MAX_PHRASE;\n      lastchar = PHRASE_CONTINUE;\n      len2 = 0;\n    } else if (len1 + len2 > MAX_PHRASE) {\n      lastchar = PHRASE_CONTINUE;\n      len2 = MAX_PHRASE - len1;\n    }\n    if (len1 > 0) {\n      html += spanAhead;\n      html += subPhrase(mode, charsArg, beg1, len1, prev);\n      html += spanend;\n      prev = true;\n    }\n    if (len2 > 0) {\n      html += spanRemainder;\n      html += subPhrase(mode, charsArg, beg2, len2, prev);\n      html += spanend;\n    }\n    return html + lastchar;\n  };\n  /* display phrases matched in look-ahead mode */\n  const displayAhead = function (mode, charsArg, state, index, length) {\n    const spanAhead = `<span class=\"${style.CLASS_LOOKAHEAD}\">`;\n    return displayForward(mode, charsArg, state, index, length, spanAhead);\n  };\n  /* display phrases matched in normal parsing mode */\n  const displayNone = function (mode, charsArg, state, index, length) {\n    const spanAhead = `<span class=\"${style.CLASS_MATCH}\">`;\n    return displayForward(mode, charsArg, state, index, length, spanAhead);\n  };\n  /* Returns the filtered records, formatted as an HTML table. */\n  const htmlTable = function (mode) {\n    if (rules === null) {\n      return '';\n    }\n    let html = '';\n    let thisLine;\n    let thatLine;\n    let lookAhead;\n    let lookBehind;\n    let lookAround;\n    let anchor;\n    html += '<tr><th>(a)</th><th>(b)</th><th>(c)</th><th>(d)</th><th>(e)</th><th>(f)</th>';\n    html += '<th>operator</th><th>phrase</th></tr>\\n';\n    circular.forEach((lineIndex) => {\n      const line = records[lineIndex];\n      thisLine = line.thisLine;\n      thatLine = line.thatLine !== undefined ? line.thatLine : '--';\n      lookAhead = false;\n      lookBehind = false;\n      lookAround = false;\n      if (line.lookAround === id.LOOKAROUND_AHEAD) {\n        lookAhead = true;\n        lookAround = true;\n        anchor = line.lookAnchor;\n      }\n      if (line.opcode.type === id.AND || line.opcode.type === id.NOT) {\n        lookAhead = true;\n        lookAround = true;\n        anchor = line.phraseIndex;\n      }\n      if (line.lookAround === id.LOOKAROUND_BEHIND) {\n        lookBehind = true;\n        lookAround = true;\n        anchor = line.lookAnchor;\n      }\n      if (line.opcode.type === id.BKA || line.opcode.type === id.BKN) {\n        lookBehind = true;\n        lookAround = true;\n        anchor = line.phraseIndex;\n      }\n      html += '<tr>';\n      html += `<td>${thisLine}</td><td>${thatLine}</td>`;\n      html += `<td>${line.phraseIndex}</td>`;\n      html += `<td>${line.phraseLength}</td>`;\n      html += `<td>${line.depth}</td>`;\n      html += '<td>';\n      switch (line.state) {\n        case id.ACTIVE:\n          html += `<span class=\"${style.CLASS_ACTIVE}\">&darr;&nbsp;</span>`;\n          break;\n        case id.MATCH:\n          html += `<span class=\"${style.CLASS_MATCH}\">&uarr;M</span>`;\n          break;\n        case id.NOMATCH:\n          html += `<span class=\"${style.CLASS_NOMATCH}\">&uarr;N</span>`;\n          break;\n        case id.EMPTY:\n          html += `<span class=\"${style.CLASS_EMPTY}\">&uarr;E</span>`;\n          break;\n        default:\n          html += `<span class=\"${style.CLASS_ACTIVE}\">--</span>`;\n          break;\n      }\n      html += '</td>';\n      html += '<td>';\n      html += that.indent(line.depth);\n      if (lookAhead) {\n        html += `<span class=\"${style.CLASS_LOOKAHEAD}\">`;\n      } else if (lookBehind) {\n        html += `<span class=\"${style.CLASS_LOOKBEHIND}\">`;\n      }\n      html += utils.opcodeToString(line.opcode.type);\n      if (line.opcode.type === id.RNM) {\n        html += `(${rules[line.opcode.index].name}) `;\n      }\n      if (line.opcode.type === id.BKR) {\n        const casetype = line.opcode.bkrCase === id.BKR_MODE_CI ? '%i' : '%s';\n        const modetype = line.opcode.bkrMode === id.BKR_MODE_UM ? '%u' : '%p';\n        html += `(\\\\${casetype}${modetype}${rules[line.opcode.index].name}) `;\n      }\n      if (line.opcode.type === id.UDT) {\n        html += `(${udts[line.opcode.index].name}) `;\n      }\n      if (line.opcode.type === id.TRG) {\n        html += `(${displayTrg(mode, line.opcode)}) `;\n      }\n      if (line.opcode.type === id.TBS) {\n        html += `(${displayTbs(mode, line.opcode)}) `;\n      }\n      if (line.opcode.type === id.TLS) {\n        html += `(${displayTls(mode, line.opcode)}) `;\n      }\n      if (line.opcode.type === id.REP) {\n        html += `(${displayRep(mode, line.opcode)}) `;\n      }\n      if (lookAround) {\n        html += '</span>';\n      }\n      html += '</td>';\n      html += '<td>';\n      if (lookBehind) {\n        html += displayBehind(mode, chars, line.state, line.phraseIndex, line.phraseLength, anchor);\n      } else if (lookAhead) {\n        html += displayAhead(mode, chars, line.state, line.phraseIndex, line.phraseLength);\n      } else {\n        html += displayNone(mode, chars, line.state, line.phraseIndex, line.phraseLength);\n      }\n      html += '</td></tr>\\n';\n    });\n    html += '<tr><th>(a)</th><th>(b)</th><th>(c)</th><th>(d)</th><th>(e)</th><th>(f)</th>';\n    html += '<th>operator</th><th>phrase</th></tr>\\n';\n    html += '</table>\\n';\n    return html;\n  };\n  // Translate the trace records to HTML format.\n  // - *modearg* - can be `\"ascii\"`, `\"decimal\"`, `\"hexadecimal\"` or `\"unicode\"`.\n  // Determines the format of the string character code display.\n  // - *caption* - optional caption for the HTML table.\n  this.toHtml = function (modearg, caption) {\n    /* writes the trace records as a table in a complete html page */\n    let mode = MODE_ASCII;\n    if (typeof modearg === 'string' && modearg.length >= 3) {\n      const modein = modearg.toLowerCase().slice(0, 3);\n      if (modein === 'hex') {\n        mode = MODE_HEX;\n      } else if (modein === 'dec') {\n        mode = MODE_DEC;\n      } else if (modein === 'uni') {\n        mode = MODE_UNICODE;\n      }\n    }\n    let html = '';\n    html += htmlHeader(mode, caption);\n    html += htmlTable(mode);\n    html += htmlFooter();\n    return html;\n  };\n};\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module serves to export all library objects and object constructors with the `require(\"apg-lib\")` statement.\n// For example, to create a new parser in your program,\n// ````\n// let apglib = require(\"../apg-lib/node-exports\");\n// let my-parser = new apglib.parser();\n// ````\nmodule.exports = {\n  ast: require('./ast'),\n  circular: require('./circular-buffer'),\n  ids: require('./identifiers'),\n  parser: require('./parser'),\n  stats: require('./stats'),\n  trace: require('./trace'),\n  utils: require('./utilities'),\n  emitcss: require('./emitcss'),\n  style: require('./style'),\n};\n","// copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved<br>\n//   license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)<br>\n//\n// Generated by apg-js, Version 4.0.0 [apg-js](https://github.com/ldthomas/apg-js)\nmodule.exports = function grammar(){\n  // ```\n  // SUMMARY\n  //      rules = 10\n  //       udts = 0\n  //    opcodes = 31\n  //        ---   ABNF original opcodes\n  //        ALT = 5\n  //        CAT = 2\n  //        REP = 4\n  //        RNM = 11\n  //        TLS = 0\n  //        TBS = 4\n  //        TRG = 5\n  //        ---   SABNF superset opcodes\n  //        UDT = 0\n  //        AND = 0\n  //        NOT = 0\n  //        BKA = 0\n  //        BKN = 0\n  //        BKR = 0\n  //        ABG = 0\n  //        AEN = 0\n  // characters = [0 - 4294967295]\n  // ```\n  /* OBJECT IDENTIFIER (for internal parser use) */\n  this.grammarObject = 'grammarObject';\n\n  /* RULES */\n  this.rules = [];\n  this.rules[0] = {name: 'file', lower: 'file', index: 0, isBkr: false};\n  this.rules[1] = {name: 'line', lower: 'line', index: 1, isBkr: false};\n  this.rules[2] = {name: 'line-text', lower: 'line-text', index: 2, isBkr: false};\n  this.rules[3] = {name: 'last-line', lower: 'last-line', index: 3, isBkr: false};\n  this.rules[4] = {name: 'valid', lower: 'valid', index: 4, isBkr: false};\n  this.rules[5] = {name: 'invalid', lower: 'invalid', index: 5, isBkr: false};\n  this.rules[6] = {name: 'end', lower: 'end', index: 6, isBkr: false};\n  this.rules[7] = {name: 'CRLF', lower: 'crlf', index: 7, isBkr: false};\n  this.rules[8] = {name: 'LF', lower: 'lf', index: 8, isBkr: false};\n  this.rules[9] = {name: 'CR', lower: 'cr', index: 9, isBkr: false};\n\n  /* UDTS */\n  this.udts = [];\n\n  /* OPCODES */\n  /* file */\n  this.rules[0].opcodes = [];\n  this.rules[0].opcodes[0] = {type: 2, children: [1,3]};// CAT\n  this.rules[0].opcodes[1] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[0].opcodes[2] = {type: 4, index: 1};// RNM(line)\n  this.rules[0].opcodes[3] = {type: 3, min: 0, max: 1};// REP\n  this.rules[0].opcodes[4] = {type: 4, index: 3};// RNM(last-line)\n\n  /* line */\n  this.rules[1].opcodes = [];\n  this.rules[1].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[1].opcodes[1] = {type: 4, index: 2};// RNM(line-text)\n  this.rules[1].opcodes[2] = {type: 4, index: 6};// RNM(end)\n\n  /* line-text */\n  this.rules[2].opcodes = [];\n  this.rules[2].opcodes[0] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[2].opcodes[1] = {type: 1, children: [2,3]};// ALT\n  this.rules[2].opcodes[2] = {type: 4, index: 4};// RNM(valid)\n  this.rules[2].opcodes[3] = {type: 4, index: 5};// RNM(invalid)\n\n  /* last-line */\n  this.rules[3].opcodes = [];\n  this.rules[3].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[3].opcodes[1] = {type: 1, children: [2,3]};// ALT\n  this.rules[3].opcodes[2] = {type: 4, index: 4};// RNM(valid)\n  this.rules[3].opcodes[3] = {type: 4, index: 5};// RNM(invalid)\n\n  /* valid */\n  this.rules[4].opcodes = [];\n  this.rules[4].opcodes[0] = {type: 1, children: [1,2]};// ALT\n  this.rules[4].opcodes[1] = {type: 5, min: 32, max: 126};// TRG\n  this.rules[4].opcodes[2] = {type: 6, string: [9]};// TBS\n\n  /* invalid */\n  this.rules[5].opcodes = [];\n  this.rules[5].opcodes[0] = {type: 1, children: [1,2,3,4]};// ALT\n  this.rules[5].opcodes[1] = {type: 5, min: 0, max: 8};// TRG\n  this.rules[5].opcodes[2] = {type: 5, min: 11, max: 12};// TRG\n  this.rules[5].opcodes[3] = {type: 5, min: 14, max: 31};// TRG\n  this.rules[5].opcodes[4] = {type: 5, min: 127, max: 4294967295};// TRG\n\n  /* end */\n  this.rules[6].opcodes = [];\n  this.rules[6].opcodes[0] = {type: 1, children: [1,2,3]};// ALT\n  this.rules[6].opcodes[1] = {type: 4, index: 7};// RNM(CRLF)\n  this.rules[6].opcodes[2] = {type: 4, index: 8};// RNM(LF)\n  this.rules[6].opcodes[3] = {type: 4, index: 9};// RNM(CR)\n\n  /* CRLF */\n  this.rules[7].opcodes = [];\n  this.rules[7].opcodes[0] = {type: 6, string: [13,10]};// TBS\n\n  /* LF */\n  this.rules[8].opcodes = [];\n  this.rules[8].opcodes[0] = {type: 6, string: [10]};// TBS\n\n  /* CR */\n  this.rules[9].opcodes = [];\n  this.rules[9].opcodes[0] = {type: 6, string: [13]};// TBS\n\n  // The `toString()` function will display the original grammar file(s) that produced these opcodes.\n  this.toString = function toString(){\n    let str = \"\";\n    str += \"file = *line [last-line]\\n\";\n    str += \"line = line-text end\\n\";\n    str += \"line-text = *(valid/invalid)\\n\";\n    str += \"last-line = 1*(valid/invalid)\\n\";\n    str += \"valid = %d32-126 / %d9\\n\";\n    str += \"invalid = %d0-8 / %d11-12 /%d14-31 / %x7f-ffffffff\\n\";\n    str += \"end = CRLF / LF / CR\\n\";\n    str += \"CRLF = %d13.10\\n\";\n    str += \"LF = %d10\\n\";\n    str += \"CR = %d13\\n\";\n    return str;\n  }\n}\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// These are the AST translation callback functions used by the scanner\n// to analyze the characters and lines.\nconst ids = require('../apg-lib/identifiers');\nconst utils = require('../apg-lib/utilities');\n\nfunction semLine(state, chars, phraseIndex, phraseCount, data) {\n  if (state === ids.SEM_PRE) {\n    data.endLength = 0;\n    data.textLength = 0;\n    data.invalidCount = 0;\n  } else {\n    data.lines.push({\n      lineNo: data.lines.length,\n      beginChar: phraseIndex,\n      length: phraseCount,\n      textLength: data.textLength,\n      endType: data.endType,\n      invalidChars: data.invalidCount,\n    });\n  }\n  return ids.SEM_OK;\n}\nfunction semLineText(state, chars, phraseIndex, phraseCount, data) {\n  if (state === ids.SEM_PRE) {\n    data.textLength = phraseCount;\n  }\n  return ids.SEM_OK;\n}\nfunction semLastLine(state, chars, phraseIndex, phraseCount, data) {\n  if (state === ids.SEM_PRE) {\n    data.endLength = 0;\n    data.textLength = 0;\n    data.invalidCount = 0;\n  } else if (data.strict) {\n    data.lines.push({\n      lineNo: data.lines.length,\n      beginChar: phraseIndex,\n      length: phraseCount,\n      textLength: phraseCount,\n      endType: 'none',\n      invalidChars: data.invalidCount,\n    });\n    data.errors.push({\n      line: data.lineNo,\n      char: phraseIndex + phraseCount,\n      msg: 'no line end on last line - strict ABNF specifies CRLF(\\\\r\\\\n, \\\\x0D\\\\x0A)',\n    });\n  } else {\n    /* add a line ender */\n    chars.push(10);\n    data.lines.push({\n      lineNo: data.lines.length,\n      beginChar: phraseIndex,\n      length: phraseCount + 1,\n      textLength: phraseCount,\n      endType: 'LF',\n      invalidChars: data.invalidCount,\n    });\n  }\n  return ids.SEM_OK;\n}\nfunction semInvalid(state, chars, phraseIndex, phraseCount, data) {\n  if (state === ids.SEM_PRE) {\n    data.errors.push({\n      line: data.lineNo,\n      char: phraseIndex,\n      msg: `invalid character found '\\\\x${utils.charToHex(chars[phraseIndex])}'`,\n    });\n  }\n  return ids.SEM_OK;\n}\nfunction semEnd(state, chars, phraseIndex, phraseCount, data) {\n  if (state === ids.SEM_POST) {\n    data.lineNo += 1;\n  }\n  return ids.SEM_OK;\n}\nfunction semLF(state, chars, phraseIndex, phraseCount, data) {\n  if (state === ids.SEM_PRE) {\n    data.endType = 'LF';\n    if (data.strict) {\n      data.errors.push({\n        line: data.lineNo,\n        char: phraseIndex,\n        msg: 'line end character LF(\\\\n, \\\\x0A) - strict ABNF specifies CRLF(\\\\r\\\\n, \\\\x0D\\\\x0A)',\n      });\n    }\n  }\n  return ids.SEM_OK;\n}\nfunction semCR(state, chars, phraseIndex, phraseCount, data) {\n  if (state === ids.SEM_PRE) {\n    data.endType = 'CR';\n    if (data.strict) {\n      data.errors.push({\n        line: data.lineNo,\n        char: phraseIndex,\n        msg: 'line end character CR(\\\\r, \\\\x0D) - strict ABNF specifies CRLF(\\\\r\\\\n, \\\\x0D\\\\x0A)',\n      });\n    }\n  }\n  return ids.SEM_OK;\n}\nfunction semCRLF(state, chars, phraseIndex, phraseCount, data) {\n  if (state === ids.SEM_PRE) {\n    data.endType = 'CRLF';\n  }\n  return ids.SEM_OK;\n}\nconst callbacks = [];\ncallbacks.line = semLine;\ncallbacks['line-text'] = semLineText;\ncallbacks['last-line'] = semLastLine;\ncallbacks.invalid = semInvalid;\ncallbacks.end = semEnd;\ncallbacks.lf = semLF;\ncallbacks.cr = semCR;\ncallbacks.crlf = semCRLF;\nexports.callbacks = callbacks;\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module reads the input grammar file and does a preliminary analysis\n// before attempting to parse it into a grammar object.\n// See:<br>\n// `./dist/scanner-grammar.bnf`<br>\n// for the grammar file this parser is based on.\n//\n// It has two primary functions.\n// - verify the character codes - no non-printing ASCII characters\n// - catalog the lines - create an array with a line object for each line.\n// The object carries information about the line number and character length which is used\n// by the parser generator primarily for error reporting.\nmodule.exports = function exfn(chars, errors, strict, trace) {\n  const thisFileName = 'scanner.js: ';\n  const apglib = require('../apg-lib/node-exports');\n  const grammar = new (require('./scanner-grammar'))();\n  const { callbacks } = require('./scanner-callbacks');\n\n  /* Scan the grammar for character code errors and catalog the lines. */\n  const lines = [];\n  // eslint-disable-next-line new-cap\n  const parser = new apglib.parser();\n  // eslint-disable-next-line new-cap\n  parser.ast = new apglib.ast();\n  parser.ast.callbacks = callbacks;\n  if (trace) {\n    if (trace.traceObject !== 'traceObject') {\n      throw new TypeError(`${thisFileName}trace argument is not a trace object`);\n    }\n    parser.trace = trace;\n  }\n\n  /* parse the input SABNF grammar */\n  const test = parser.parse(grammar, 'file', chars);\n  if (test.success !== true) {\n    errors.push({\n      line: 0,\n      char: 0,\n      msg: 'syntax analysis error analyzing input SABNF grammar',\n    });\n    return;\n  }\n  const data = {\n    lines,\n    lineNo: 0,\n    errors,\n    strict: !!strict,\n  };\n\n  /* translate (analyze) the input SABNF grammar */\n  parser.ast.translate(data);\n  // eslint-disable-next-line consistent-return\n  return lines;\n};\n","/* eslint-disable func-names */\n/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module has all of the callback functions for the syntax phase of the generation.\n// See:<br>\n// `./dist/abnf-for-sabnf-grammar.bnf`<br>\n// for the grammar file these callback functions are based on.\nmodule.exports = function exfn() {\n  const thisFileName = 'syntax-callbacks.js: ';\n  const apglib = require('../apg-lib/node-exports');\n  const id = apglib.ids;\n  let topAlt;\n  /* syntax, RNM, callback functions */\n  const synFile = function synFile(result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        data.altStack = [];\n        data.repCount = 0;\n        break;\n      case id.EMPTY:\n        data.errors.push({\n          line: 0,\n          char: 0,\n          msg: 'grammar file is empty',\n        });\n        break;\n      case id.MATCH:\n        if (data.ruleCount === 0) {\n          data.errors.push({\n            line: 0,\n            char: 0,\n            msg: 'no rules defined',\n          });\n        }\n        break;\n      case id.NOMATCH:\n        throw new Error(`${thisFileName}synFile: grammar file NOMATCH: design error: should never happen.`);\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  // eslint-disable-next-line func-names\n  const synRule = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        data.altStack.length = 0;\n        topAlt = {\n          groupOpen: null,\n          groupError: false,\n          optionOpen: null,\n          optionError: false,\n          tlsOpen: null,\n          clsOpen: null,\n          prosValOpen: null,\n          basicError: false,\n        };\n        data.altStack.push(topAlt);\n        break;\n      case id.EMPTY:\n        throw new Error(`${thisFileName}synRule: EMPTY: rule cannot be empty`);\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        data.ruleCount += 1;\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synRuleError = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, phraseIndex, data.charsLength),\n          char: phraseIndex,\n          msg: 'Unrecognized SABNF line. Invalid rule, comment or blank line.',\n        });\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synRuleNameError = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, phraseIndex, data.charsLength),\n          char: phraseIndex,\n          msg: 'Rule names must be alphanum and begin with alphabetic character.',\n        });\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synDefinedAsError = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, phraseIndex, data.charsLength),\n          char: phraseIndex,\n          msg: \"Expected '=' or '=/'. Not found.\",\n        });\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synAndOp = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.strict) {\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: 'AND operator(&) found - strict ABNF specified.',\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synNotOp = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.strict) {\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: 'NOT operator(!) found - strict ABNF specified.',\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synBkaOp = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.strict) {\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: 'Positive look-behind operator(&&) found - strict ABNF specified.',\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synBknOp = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.strict) {\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: 'Negative look-behind operator(!!) found - strict ABNF specified.',\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synAbgOp = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.strict) {\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: 'Beginning of string anchor(%^) found - strict ABNF specified.',\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synAenOp = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.strict) {\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: 'End of string anchor(%$) found - strict ABNF specified.',\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synBkrOp = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.strict) {\n          const name = apglib.utils.charsToString(chars, phraseIndex, result.phraseLength);\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: `Back reference operator(${name}) found - strict ABNF specified.`,\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synUdtOp = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.strict) {\n          const name = apglib.utils.charsToString(chars, phraseIndex, result.phraseLength);\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: `UDT operator found(${name}) - strict ABNF specified.`,\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synTlsOpen = function (result, chars, phraseIndex) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        topAlt.tlsOpen = phraseIndex;\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synTlsString = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        data.stringTabChar = false;\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.stringTabChar !== false) {\n          data.errors.push({\n            line: data.findLine(data.lines, data.stringTabChar),\n            char: data.stringTabChar,\n            msg: \"Tab character (\\\\t, x09) not allowed in literal string (see 'quoted-string' definition, RFC 7405.)\",\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synStringTab = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        data.stringTabChar = phraseIndex;\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synTlsClose = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, topAlt.tlsOpen),\n          char: topAlt.tlsOpen,\n          msg: 'Case-insensitive literal string(\"...\") opened but not closed.',\n        });\n        topAlt.basicError = true;\n        topAlt.tlsOpen = null;\n        break;\n      case id.MATCH:\n        topAlt.tlsOpen = null;\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synClsOpen = function (result, chars, phraseIndex) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        topAlt.clsOpen = phraseIndex;\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synClsString = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        data.stringTabChar = false;\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.stringTabChar !== false) {\n          data.errors.push({\n            line: data.findLine(data.lines, data.stringTabChar),\n            char: data.stringTabChar,\n            msg: 'Tab character (\\\\t, x09) not allowed in literal string.',\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synClsClose = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, topAlt.clsOpen),\n          char: topAlt.clsOpen,\n          msg: \"Case-sensitive literal string('...') opened but not closed.\",\n        });\n        topAlt.clsOpen = null;\n        topAlt.basicError = true;\n        break;\n      case id.MATCH:\n        if (data.strict) {\n          data.errors.push({\n            line: data.findLine(data.lines, topAlt.clsOpen),\n            char: topAlt.clsOpen,\n            msg: \"Case-sensitive string operator('...') found - strict ABNF specified.\",\n          });\n        }\n        topAlt.clsOpen = null;\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synProsValOpen = function (result, chars, phraseIndex) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        topAlt.prosValOpen = phraseIndex;\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synProsValString = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        data.stringTabChar = false;\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (data.stringTabChar !== false) {\n          data.errors.push({\n            line: data.findLine(data.lines, data.stringTabChar),\n            char: data.stringTabChar,\n            msg: 'Tab character (\\\\t, x09) not allowed in prose value string.',\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synProsValClose = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, topAlt.prosValOpen),\n          char: topAlt.prosValOpen,\n          msg: 'Prose value operator(<...>) opened but not closed.',\n        });\n        topAlt.basicError = true;\n        topAlt.prosValOpen = null;\n        break;\n      case id.MATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, topAlt.prosValOpen),\n          char: topAlt.prosValOpen,\n          msg: 'Prose value operator(<...>) found. The ABNF syntax is valid, but a parser cannot be generated from this grammar.',\n        });\n        topAlt.prosValOpen = null;\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synGroupOpen = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        topAlt = {\n          groupOpen: phraseIndex,\n          groupError: false,\n          optionOpen: null,\n          optionError: false,\n          tlsOpen: null,\n          clsOpen: null,\n          prosValOpen: null,\n          basicError: false,\n        };\n        data.altStack.push(topAlt);\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synGroupClose = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, topAlt.groupOpen),\n          char: topAlt.groupOpen,\n          msg: 'Group \"(...)\" opened but not closed.',\n        });\n        topAlt = data.altStack.pop();\n        topAlt.groupError = true;\n        break;\n      case id.MATCH:\n        topAlt = data.altStack.pop();\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synOptionOpen = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        topAlt = {\n          groupOpen: null,\n          groupError: false,\n          optionOpen: phraseIndex,\n          optionError: false,\n          tlsOpen: null,\n          clsOpen: null,\n          prosValOpen: null,\n          basicError: false,\n        };\n        data.altStack.push(topAlt);\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synOptionClose = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, topAlt.optionOpen),\n          char: topAlt.optionOpen,\n          msg: 'Option \"[...]\" opened but not closed.',\n        });\n        topAlt = data.altStack.pop();\n        topAlt.optionError = true;\n        break;\n      case id.MATCH:\n        topAlt = data.altStack.pop();\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synBasicElementError = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (topAlt.basicError === false) {\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: 'Unrecognized SABNF element.',\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synLineEnd = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        if (result.phraseLength === 1 && data.strict) {\n          const end = chars[phraseIndex] === 13 ? 'CR' : 'LF';\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: `Line end '${end}' found - strict ABNF specified, only CRLF allowed.`,\n          });\n        }\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synLineEndError = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        break;\n      case id.MATCH:\n        data.errors.push({\n          line: data.findLine(data.lines, phraseIndex, data.charsLength),\n          char: phraseIndex,\n          msg: 'Unrecognized grammar element or characters.',\n        });\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  const synRepetition = function (result, chars, phraseIndex, data) {\n    switch (result.state) {\n      case id.ACTIVE:\n        break;\n      case id.EMPTY:\n        break;\n      case id.NOMATCH:\n        data.repCount += 1;\n        break;\n      case id.MATCH:\n        data.repCount += 1;\n        break;\n      default:\n        throw new Error(`${thisFileName}synFile: unrecognized case.`);\n    }\n  };\n  // Define the list of callback functions.\n  this.callbacks = [];\n  this.callbacks.andop = synAndOp;\n  this.callbacks.basicelementerr = synBasicElementError;\n  this.callbacks.clsclose = synClsClose;\n  this.callbacks.clsopen = synClsOpen;\n  this.callbacks.clsstring = synClsString;\n  this.callbacks.definedaserror = synDefinedAsError;\n  this.callbacks.file = synFile;\n  this.callbacks.groupclose = synGroupClose;\n  this.callbacks.groupopen = synGroupOpen;\n  this.callbacks.lineenderror = synLineEndError;\n  this.callbacks.lineend = synLineEnd;\n  this.callbacks.notop = synNotOp;\n  this.callbacks.optionclose = synOptionClose;\n  this.callbacks.optionopen = synOptionOpen;\n  this.callbacks.prosvalclose = synProsValClose;\n  this.callbacks.prosvalopen = synProsValOpen;\n  this.callbacks.prosvalstring = synProsValString;\n  this.callbacks.repetition = synRepetition;\n  this.callbacks.rule = synRule;\n  this.callbacks.ruleerror = synRuleError;\n  this.callbacks.rulenameerror = synRuleNameError;\n  this.callbacks.stringtab = synStringTab;\n  this.callbacks.tlsclose = synTlsClose;\n  this.callbacks.tlsopen = synTlsOpen;\n  this.callbacks.tlsstring = synTlsString;\n  this.callbacks.udtop = synUdtOp;\n  this.callbacks.bkaop = synBkaOp;\n  this.callbacks.bknop = synBknOp;\n  this.callbacks.bkrop = synBkrOp;\n  this.callbacks.abgop = synAbgOp;\n  this.callbacks.aenop = synAenOp;\n};\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module has all of the AST translation callback functions for the semantic analysis\n// phase of the generator.\n// See:<br>\n// `./dist/abnf-for-sabnf-grammar.bnf`<br>\n// for the grammar file these callback functions are based on.\nmodule.exports = function exfn() {\n  const apglib = require('../apg-lib/node-exports');\n  const id = apglib.ids;\n\n  /* Some helper functions. */\n  const NameList = function NameList() {\n    this.names = [];\n    /* Adds a new rule name object to the list. Returns -1 if the name already exists. */\n    /* Returns the added name object if the name does not already exist. */\n    this.add = function add(name) {\n      let ret = -1;\n      const find = this.get(name);\n      if (find === -1) {\n        ret = {\n          name,\n          lower: name.toLowerCase(),\n          index: this.names.length,\n        };\n        this.names.push(ret);\n      }\n      return ret;\n    };\n    /* Brute-force look up. */\n    this.get = function get(name) {\n      let ret = -1;\n      const lower = name.toLowerCase();\n      for (let i = 0; i < this.names.length; i += 1) {\n        if (this.names[i].lower === lower) {\n          ret = this.names[i];\n          break;\n        }\n      }\n      return ret;\n    };\n  };\n  /* converts text decimal numbers from, e.g. %d99, to an integer */\n  const decnum = function decnum(chars, beg, len) {\n    let num = 0;\n    for (let i = beg; i < beg + len; i += 1) {\n      num = 10 * num + chars[i] - 48;\n    }\n    return num;\n  };\n  /* converts text binary numbers from, e.g. %b10, to an integer */\n  const binnum = function binnum(chars, beg, len) {\n    let num = 0;\n    for (let i = beg; i < beg + len; i += 1) {\n      num = 2 * num + chars[i] - 48;\n    }\n    return num;\n  };\n  /* converts text hexadecimal numbers from, e.g. %xff, to an integer */\n  const hexnum = function hexnum(chars, beg, len) {\n    let num = 0;\n    for (let i = beg; i < beg + len; i += 1) {\n      let digit = chars[i];\n      if (digit >= 48 && digit <= 57) {\n        digit -= 48;\n      } else if (digit >= 65 && digit <= 70) {\n        digit -= 55;\n      } else if (digit >= 97 && digit <= 102) {\n        digit -= 87;\n      } else {\n        throw new Error('hexnum out of range');\n      }\n      num = 16 * num + digit;\n    }\n    return num;\n  };\n\n  // This is the prototype for all semantic analysis callback functions.\n  // ````\n  // state - the translator state\n  //   id.SEM_PRE for downward (pre-branch) traversal of the AST\n  //   id.SEM_POST for upward (post branch) traversal of the AST\n  // chars - the array of character codes for the input string\n  // phraseIndex - index into the chars array to the first\n  //               character of the phrase\n  // phraseCount - the number of characters in the phrase\n  // data - user-defined data passed to the translator\n  //        for use by the callback functions.\n  // @return id.SEM_OK, normal return.\n  //         id.SEM_SKIP in state id.SEM_PRE will\n  //         skip the branch below.\n  //         Any thing else is an error which will\n  //         stop the translation.\n  // ````\n  /*\n  function semCallbackPrototype(state, chars, phraseIndex, phraseCount, data) {\n    let ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n    } else if (state === id.SEM_POST) {\n    }\n    return ret;\n  }\n  */\n  // The AST callback functions.\n  function semFile(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.ruleNames = new NameList();\n      data.udtNames = new NameList();\n      data.rules = [];\n      data.udts = [];\n      data.rulesLineMap = [];\n      data.opcodes = [];\n      data.altStack = [];\n      data.topStack = null;\n      data.topRule = null;\n    } else if (state === id.SEM_POST) {\n      /* validate RNM rule names and set opcode rule index */\n      let nameObj;\n      data.rules.forEach((rule) => {\n        rule.isBkr = false;\n        rule.opcodes.forEach((op) => {\n          if (op.type === id.RNM) {\n            nameObj = data.ruleNames.get(op.index.name);\n            if (nameObj === -1) {\n              data.errors.push({\n                line: data.findLine(data.lines, op.index.phraseIndex, data.charsLength),\n                char: op.index.phraseIndex,\n                msg: `Rule name '${op.index.name}' used but not defined.`,\n              });\n              op.index = -1;\n            } else {\n              op.index = nameObj.index;\n            }\n          }\n        });\n      });\n      /* validate BKR rule names and set opcode rule index */\n      data.udts.forEach((udt) => {\n        udt.isBkr = false;\n      });\n      data.rules.forEach((rule) => {\n        rule.opcodes.forEach((op) => {\n          if (op.type === id.BKR) {\n            rule.hasBkr = true;\n            nameObj = data.ruleNames.get(op.index.name);\n            if (nameObj !== -1) {\n              data.rules[nameObj.index].isBkr = true;\n              op.index = nameObj.index;\n            } else {\n              nameObj = data.udtNames.get(op.index.name);\n              if (nameObj !== -1) {\n                data.udts[nameObj.index].isBkr = true;\n                op.index = data.rules.length + nameObj.index;\n              } else {\n                data.errors.push({\n                  line: data.findLine(data.lines, op.index.phraseIndex, data.charsLength),\n                  char: op.index.phraseIndex,\n                  msg: `Back reference name '${op.index.name}' refers to undefined rule or unamed UDT.`,\n                });\n                op.index = -1;\n              }\n            }\n          }\n        });\n      });\n    }\n    return ret;\n  }\n  function semRule(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.altStack.length = 0;\n      data.topStack = null;\n      data.rulesLineMap.push({\n        line: data.findLine(data.lines, phraseIndex, data.charsLength),\n        char: phraseIndex,\n      });\n    }\n    return ret;\n  }\n  function semRuleLookup(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.ruleName = '';\n      data.definedas = '';\n    } else if (state === id.SEM_POST) {\n      let ruleName;\n      if (data.definedas === '=') {\n        ruleName = data.ruleNames.add(data.ruleName);\n        if (ruleName === -1) {\n          data.definedas = null;\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: `Rule name '${data.ruleName}' previously defined.`,\n          });\n        } else {\n          /* start a new rule */\n          data.topRule = {\n            name: ruleName.name,\n            lower: ruleName.lower,\n            opcodes: [],\n            index: ruleName.index,\n          };\n          data.rules.push(data.topRule);\n          data.opcodes = data.topRule.opcodes;\n        }\n      } else {\n        ruleName = data.ruleNames.get(data.ruleName);\n        if (ruleName === -1) {\n          data.definedas = null;\n          data.errors.push({\n            line: data.findLine(data.lines, phraseIndex, data.charsLength),\n            char: phraseIndex,\n            msg: `Rule name '${data.ruleName}' for incremental alternate not previously defined.`,\n          });\n        } else {\n          data.topRule = data.rules[ruleName.index];\n          data.opcodes = data.topRule.opcodes;\n        }\n      }\n    }\n    return ret;\n  }\n  function semAlternation(state, chars, phraseIndex, phraseCount, data) {\n    let ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      const TRUE = true;\n      while (TRUE) {\n        if (data.definedas === null) {\n          /* rule error - skip opcode generation */\n          ret = id.SEM_SKIP;\n          break;\n        }\n        if (data.topStack === null) {\n          /* top-level ALT */\n          if (data.definedas === '=') {\n            /* \"=\" new rule */\n            data.topStack = {\n              alt: {\n                type: id.ALT,\n                children: [],\n              },\n              cat: null,\n            };\n            data.altStack.push(data.topStack);\n            data.opcodes.push(data.topStack.alt);\n            break;\n          }\n          /* \"=/\" incremental alternate */\n          data.topStack = {\n            alt: data.opcodes[0],\n            cat: null,\n          };\n          data.altStack.push(data.topStack);\n          break;\n        }\n        /* lower-level ALT */\n        data.topStack = {\n          alt: {\n            type: id.ALT,\n            children: [],\n          },\n          cat: null,\n        };\n        data.altStack.push(data.topStack);\n        data.opcodes.push(data.topStack.alt);\n        break;\n      }\n    } else if (state === id.SEM_POST) {\n      data.altStack.pop();\n      if (data.altStack.length > 0) {\n        data.topStack = data.altStack[data.altStack.length - 1];\n      } else {\n        data.topStack = null;\n      }\n    }\n    return ret;\n  }\n  function semConcatenation(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.topStack.alt.children.push(data.opcodes.length);\n      data.topStack.cat = {\n        type: id.CAT,\n        children: [],\n      };\n      data.opcodes.push(data.topStack.cat);\n    } else if (state === id.SEM_POST) {\n      data.topStack.cat = null;\n    }\n    return ret;\n  }\n  function semRepetition(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.topStack.cat.children.push(data.opcodes.length);\n    }\n    return ret;\n  }\n  function semOptionOpen(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.REP,\n        min: 0,\n        max: 1,\n        char: phraseIndex,\n      });\n    }\n    return ret;\n  }\n  function semRuleName(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.ruleName = apglib.utils.charsToString(chars, phraseIndex, phraseCount);\n    }\n    return ret;\n  }\n  function semDefined(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.definedas = '=';\n    }\n    return ret;\n  }\n  function semIncAlt(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.definedas = '=/';\n    }\n    return ret;\n  }\n  function semRepOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.min = 0;\n      data.max = Infinity;\n      data.topRep = {\n        type: id.REP,\n        min: 0,\n        max: Infinity,\n      };\n      data.opcodes.push(data.topRep);\n    } else if (state === id.SEM_POST) {\n      if (data.min > data.max) {\n        data.errors.push({\n          line: data.findLine(data.lines, phraseIndex, data.charsLength),\n          char: phraseIndex,\n          msg: `repetition min cannot be greater than max: min: ${data.min}: max: ${data.max}`,\n        });\n      }\n      data.topRep.min = data.min;\n      data.topRep.max = data.max;\n    }\n    return ret;\n  }\n  function semRepMin(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.min = decnum(chars, phraseIndex, phraseCount);\n    }\n    return ret;\n  }\n  function semRepMax(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.max = decnum(chars, phraseIndex, phraseCount);\n    }\n    return ret;\n  }\n  function semRepMinMax(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.max = decnum(chars, phraseIndex, phraseCount);\n      data.min = data.max;\n    }\n    return ret;\n  }\n  function semAndOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.AND,\n      });\n    }\n    return ret;\n  }\n  function semNotOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.NOT,\n      });\n    }\n    return ret;\n  }\n  function semRnmOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.RNM,\n        /* NOTE: this is temporary info, index will be replaced with integer later. */\n        /* Probably not the best coding practice but here you go. */\n        index: {\n          phraseIndex,\n          name: apglib.utils.charsToString(chars, phraseIndex, phraseCount),\n        },\n      });\n    }\n    return ret;\n  }\n  function semAbgOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.ABG,\n      });\n    }\n    return ret;\n  }\n  function semAenOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.AEN,\n      });\n    }\n    return ret;\n  }\n  function semBkaOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.BKA,\n      });\n    }\n    return ret;\n  }\n  function semBknOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.BKN,\n      });\n    }\n    return ret;\n  }\n  function semBkrOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.ci = true; /* default to case insensitive */\n      data.cs = false;\n      data.um = true;\n      data.pm = false;\n    } else if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.BKR,\n        bkrCase: data.cs === true ? id.BKR_MODE_CS : id.BKR_MODE_CI,\n        bkrMode: data.pm === true ? id.BKR_MODE_PM : id.BKR_MODE_UM,\n        /* NOTE: this is temporary info, index will be replaced with integer later. */\n        /* Probably not the best coding practice but here you go. */\n        index: {\n          phraseIndex: data.bkrname.phraseIndex,\n          name: apglib.utils.charsToString(chars, data.bkrname.phraseIndex, data.bkrname.phraseLength),\n        },\n      });\n    }\n    return ret;\n  }\n  function semBkrCi(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.ci = true;\n    }\n    return ret;\n  }\n  function semBkrCs(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.cs = true;\n    }\n    return ret;\n  }\n  function semBkrUm(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.um = true;\n    }\n    return ret;\n  }\n  function semBkrPm(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.pm = true;\n    }\n    return ret;\n  }\n  function semBkrName(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.bkrname = {\n        phraseIndex,\n        phraseLength: phraseCount,\n      };\n    }\n    return ret;\n  }\n  function semUdtEmpty(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      const name = apglib.utils.charsToString(chars, phraseIndex, phraseCount);\n      let udtName = data.udtNames.add(name);\n      if (udtName === -1) {\n        udtName = data.udtNames.get(name);\n        if (udtName === -1) {\n          throw new Error('semUdtEmpty: name look up error');\n        }\n      } else {\n        data.udts.push({\n          name: udtName.name,\n          lower: udtName.lower,\n          index: udtName.index,\n          empty: true,\n        });\n      }\n      data.opcodes.push({\n        type: id.UDT,\n        empty: true,\n        index: udtName.index,\n      });\n    }\n    return ret;\n  }\n  function semUdtNonEmpty(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      const name = apglib.utils.charsToString(chars, phraseIndex, phraseCount);\n      let udtName = data.udtNames.add(name);\n      if (udtName === -1) {\n        udtName = data.udtNames.get(name);\n        if (udtName === -1) {\n          throw new Error('semUdtNonEmpty: name look up error');\n        }\n      } else {\n        data.udts.push({\n          name: udtName.name,\n          lower: udtName.lower,\n          index: udtName.index,\n          empty: false,\n        });\n      }\n      data.opcodes.push({\n        type: id.UDT,\n        empty: false,\n        index: udtName.index,\n        syntax: null,\n        semantic: null,\n      });\n    }\n    return ret;\n  }\n  function semTlsOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.tlscase = true; /* default to case insensitive */\n    }\n    return ret;\n  }\n  function semTlsCase(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      if (phraseCount > 0 && (chars[phraseIndex + 1] === 83 || chars[phraseIndex + 1] === 115)) {\n        data.tlscase = false; /* set to case sensitive */\n      }\n    }\n    return ret;\n  }\n  function semTlsString(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      if (data.tlscase) {\n        const str = chars.slice(phraseIndex, phraseIndex + phraseCount);\n        for (let i = 0; i < str.length; i += 1) {\n          if (str[i] >= 65 && str[i] <= 90) {\n            str[i] += 32;\n          }\n        }\n        data.opcodes.push({\n          type: id.TLS,\n          string: str,\n        });\n      } else {\n        data.opcodes.push({\n          type: id.TBS,\n          string: chars.slice(phraseIndex, phraseIndex + phraseCount),\n        });\n      }\n    }\n    return ret;\n  }\n  function semClsOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      if (phraseCount <= 2) {\n        /* only TLS is allowed to be empty */\n        data.opcodes.push({\n          type: id.TLS,\n          string: [],\n        });\n      } else {\n        data.opcodes.push({\n          type: id.TBS,\n          string: chars.slice(phraseIndex + 1, phraseIndex + phraseCount - 1),\n        });\n      }\n    }\n    return ret;\n  }\n  function semTbsOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.tbsstr = [];\n    } else if (state === id.SEM_POST) {\n      data.opcodes.push({\n        type: id.TBS,\n        string: data.tbsstr,\n      });\n    }\n    return ret;\n  }\n  function semTrgOp(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_PRE) {\n      data.min = 0;\n      data.max = 0;\n    } else if (state === id.SEM_POST) {\n      if (data.min > data.max) {\n        data.errors.push({\n          line: data.findLine(data.lines, phraseIndex, data.charsLength),\n          char: phraseIndex,\n          msg: `TRG, (%dmin-max), min cannot be greater than max: min: ${data.min}: max: ${data.max}`,\n        });\n      }\n      data.opcodes.push({\n        type: id.TRG,\n        min: data.min,\n        max: data.max,\n      });\n    }\n    return ret;\n  }\n  function semDmin(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.min = decnum(chars, phraseIndex, phraseCount);\n    }\n    return ret;\n  }\n  function semDmax(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.max = decnum(chars, phraseIndex, phraseCount);\n    }\n    return ret;\n  }\n  function semBmin(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.min = binnum(chars, phraseIndex, phraseCount);\n    }\n    return ret;\n  }\n  function semBmax(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.max = binnum(chars, phraseIndex, phraseCount);\n    }\n    return ret;\n  }\n  function semXmin(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.min = hexnum(chars, phraseIndex, phraseCount);\n    }\n    return ret;\n  }\n  function semXmax(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.max = hexnum(chars, phraseIndex, phraseCount);\n    }\n    return ret;\n  }\n  function semDstring(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.tbsstr.push(decnum(chars, phraseIndex, phraseCount));\n    }\n    return ret;\n  }\n  function semBstring(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.tbsstr.push(binnum(chars, phraseIndex, phraseCount));\n    }\n    return ret;\n  }\n  function semXstring(state, chars, phraseIndex, phraseCount, data) {\n    const ret = id.SEM_OK;\n    if (state === id.SEM_POST) {\n      data.tbsstr.push(hexnum(chars, phraseIndex, phraseCount));\n    }\n    return ret;\n  }\n  // Define the callback functions to the AST object.\n  this.callbacks = [];\n  this.callbacks.abgop = semAbgOp;\n  this.callbacks.aenop = semAenOp;\n  this.callbacks.alternation = semAlternation;\n  this.callbacks.andop = semAndOp;\n  this.callbacks.bmax = semBmax;\n  this.callbacks.bmin = semBmin;\n  this.callbacks.bkaop = semBkaOp;\n  this.callbacks.bknop = semBknOp;\n  this.callbacks.bkrop = semBkrOp;\n  this.callbacks['bkr-name'] = semBkrName;\n  this.callbacks.bstring = semBstring;\n  this.callbacks.clsop = semClsOp;\n  this.callbacks.ci = semBkrCi;\n  this.callbacks.cs = semBkrCs;\n  this.callbacks.um = semBkrUm;\n  this.callbacks.pm = semBkrPm;\n  this.callbacks.concatenation = semConcatenation;\n  this.callbacks.defined = semDefined;\n  this.callbacks.dmax = semDmax;\n  this.callbacks.dmin = semDmin;\n  this.callbacks.dstring = semDstring;\n  this.callbacks.file = semFile;\n  this.callbacks.incalt = semIncAlt;\n  this.callbacks.notop = semNotOp;\n  this.callbacks.optionopen = semOptionOpen;\n  this.callbacks['rep-max'] = semRepMax;\n  this.callbacks['rep-min'] = semRepMin;\n  this.callbacks['rep-min-max'] = semRepMinMax;\n  this.callbacks.repetition = semRepetition;\n  this.callbacks.repop = semRepOp;\n  this.callbacks.rnmop = semRnmOp;\n  this.callbacks.rule = semRule;\n  this.callbacks.rulelookup = semRuleLookup;\n  this.callbacks.rulename = semRuleName;\n  this.callbacks.tbsop = semTbsOp;\n  this.callbacks.tlscase = semTlsCase;\n  this.callbacks.tlsstring = semTlsString;\n  this.callbacks.tlsop = semTlsOp;\n  this.callbacks.trgop = semTrgOp;\n  this.callbacks['udt-empty'] = semUdtEmpty;\n  this.callbacks['udt-non-empty'] = semUdtNonEmpty;\n  this.callbacks.xmax = semXmax;\n  this.callbacks.xmin = semXmin;\n  this.callbacks.xstring = semXstring;\n};\n","// copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved<br>\n//   license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)<br>\n//\n// Generated by apg-js, Version 4.0.0 [apg-js](https://github.com/ldthomas/apg-js)\nmodule.exports = function grammar(){\n  // ```\n  // SUMMARY\n  //      rules = 95\n  //       udts = 0\n  //    opcodes = 372\n  //        ---   ABNF original opcodes\n  //        ALT = 43\n  //        CAT = 48\n  //        REP = 34\n  //        RNM = 149\n  //        TLS = 2\n  //        TBS = 61\n  //        TRG = 35\n  //        ---   SABNF superset opcodes\n  //        UDT = 0\n  //        AND = 0\n  //        NOT = 0\n  //        BKA = 0\n  //        BKN = 0\n  //        BKR = 0\n  //        ABG = 0\n  //        AEN = 0\n  // characters = [9 - 126]\n  // ```\n  /* OBJECT IDENTIFIER (for internal parser use) */\n  this.grammarObject = 'grammarObject';\n\n  /* RULES */\n  this.rules = [];\n  this.rules[0] = {name: 'File', lower: 'file', index: 0, isBkr: false};\n  this.rules[1] = {name: 'BlankLine', lower: 'blankline', index: 1, isBkr: false};\n  this.rules[2] = {name: 'Rule', lower: 'rule', index: 2, isBkr: false};\n  this.rules[3] = {name: 'RuleLookup', lower: 'rulelookup', index: 3, isBkr: false};\n  this.rules[4] = {name: 'RuleNameTest', lower: 'rulenametest', index: 4, isBkr: false};\n  this.rules[5] = {name: 'RuleName', lower: 'rulename', index: 5, isBkr: false};\n  this.rules[6] = {name: 'RuleNameError', lower: 'rulenameerror', index: 6, isBkr: false};\n  this.rules[7] = {name: 'DefinedAsTest', lower: 'definedastest', index: 7, isBkr: false};\n  this.rules[8] = {name: 'DefinedAsError', lower: 'definedaserror', index: 8, isBkr: false};\n  this.rules[9] = {name: 'DefinedAs', lower: 'definedas', index: 9, isBkr: false};\n  this.rules[10] = {name: 'Defined', lower: 'defined', index: 10, isBkr: false};\n  this.rules[11] = {name: 'IncAlt', lower: 'incalt', index: 11, isBkr: false};\n  this.rules[12] = {name: 'RuleError', lower: 'ruleerror', index: 12, isBkr: false};\n  this.rules[13] = {name: 'LineEndError', lower: 'lineenderror', index: 13, isBkr: false};\n  this.rules[14] = {name: 'Alternation', lower: 'alternation', index: 14, isBkr: false};\n  this.rules[15] = {name: 'Concatenation', lower: 'concatenation', index: 15, isBkr: false};\n  this.rules[16] = {name: 'Repetition', lower: 'repetition', index: 16, isBkr: false};\n  this.rules[17] = {name: 'Modifier', lower: 'modifier', index: 17, isBkr: false};\n  this.rules[18] = {name: 'Predicate', lower: 'predicate', index: 18, isBkr: false};\n  this.rules[19] = {name: 'BasicElement', lower: 'basicelement', index: 19, isBkr: false};\n  this.rules[20] = {name: 'BasicElementErr', lower: 'basicelementerr', index: 20, isBkr: false};\n  this.rules[21] = {name: 'Group', lower: 'group', index: 21, isBkr: false};\n  this.rules[22] = {name: 'GroupError', lower: 'grouperror', index: 22, isBkr: false};\n  this.rules[23] = {name: 'GroupOpen', lower: 'groupopen', index: 23, isBkr: false};\n  this.rules[24] = {name: 'GroupClose', lower: 'groupclose', index: 24, isBkr: false};\n  this.rules[25] = {name: 'Option', lower: 'option', index: 25, isBkr: false};\n  this.rules[26] = {name: 'OptionError', lower: 'optionerror', index: 26, isBkr: false};\n  this.rules[27] = {name: 'OptionOpen', lower: 'optionopen', index: 27, isBkr: false};\n  this.rules[28] = {name: 'OptionClose', lower: 'optionclose', index: 28, isBkr: false};\n  this.rules[29] = {name: 'RnmOp', lower: 'rnmop', index: 29, isBkr: false};\n  this.rules[30] = {name: 'BkrOp', lower: 'bkrop', index: 30, isBkr: false};\n  this.rules[31] = {name: 'bkrModifier', lower: 'bkrmodifier', index: 31, isBkr: false};\n  this.rules[32] = {name: 'cs', lower: 'cs', index: 32, isBkr: false};\n  this.rules[33] = {name: 'ci', lower: 'ci', index: 33, isBkr: false};\n  this.rules[34] = {name: 'um', lower: 'um', index: 34, isBkr: false};\n  this.rules[35] = {name: 'pm', lower: 'pm', index: 35, isBkr: false};\n  this.rules[36] = {name: 'bkr-name', lower: 'bkr-name', index: 36, isBkr: false};\n  this.rules[37] = {name: 'rname', lower: 'rname', index: 37, isBkr: false};\n  this.rules[38] = {name: 'uname', lower: 'uname', index: 38, isBkr: false};\n  this.rules[39] = {name: 'ename', lower: 'ename', index: 39, isBkr: false};\n  this.rules[40] = {name: 'UdtOp', lower: 'udtop', index: 40, isBkr: false};\n  this.rules[41] = {name: 'udt-non-empty', lower: 'udt-non-empty', index: 41, isBkr: false};\n  this.rules[42] = {name: 'udt-empty', lower: 'udt-empty', index: 42, isBkr: false};\n  this.rules[43] = {name: 'RepOp', lower: 'repop', index: 43, isBkr: false};\n  this.rules[44] = {name: 'AltOp', lower: 'altop', index: 44, isBkr: false};\n  this.rules[45] = {name: 'CatOp', lower: 'catop', index: 45, isBkr: false};\n  this.rules[46] = {name: 'StarOp', lower: 'starop', index: 46, isBkr: false};\n  this.rules[47] = {name: 'AndOp', lower: 'andop', index: 47, isBkr: false};\n  this.rules[48] = {name: 'NotOp', lower: 'notop', index: 48, isBkr: false};\n  this.rules[49] = {name: 'BkaOp', lower: 'bkaop', index: 49, isBkr: false};\n  this.rules[50] = {name: 'BknOp', lower: 'bknop', index: 50, isBkr: false};\n  this.rules[51] = {name: 'AbgOp', lower: 'abgop', index: 51, isBkr: false};\n  this.rules[52] = {name: 'AenOp', lower: 'aenop', index: 52, isBkr: false};\n  this.rules[53] = {name: 'TrgOp', lower: 'trgop', index: 53, isBkr: false};\n  this.rules[54] = {name: 'TbsOp', lower: 'tbsop', index: 54, isBkr: false};\n  this.rules[55] = {name: 'TlsOp', lower: 'tlsop', index: 55, isBkr: false};\n  this.rules[56] = {name: 'TlsCase', lower: 'tlscase', index: 56, isBkr: false};\n  this.rules[57] = {name: 'TlsOpen', lower: 'tlsopen', index: 57, isBkr: false};\n  this.rules[58] = {name: 'TlsClose', lower: 'tlsclose', index: 58, isBkr: false};\n  this.rules[59] = {name: 'TlsString', lower: 'tlsstring', index: 59, isBkr: false};\n  this.rules[60] = {name: 'StringTab', lower: 'stringtab', index: 60, isBkr: false};\n  this.rules[61] = {name: 'ClsOp', lower: 'clsop', index: 61, isBkr: false};\n  this.rules[62] = {name: 'ClsOpen', lower: 'clsopen', index: 62, isBkr: false};\n  this.rules[63] = {name: 'ClsClose', lower: 'clsclose', index: 63, isBkr: false};\n  this.rules[64] = {name: 'ClsString', lower: 'clsstring', index: 64, isBkr: false};\n  this.rules[65] = {name: 'ProsVal', lower: 'prosval', index: 65, isBkr: false};\n  this.rules[66] = {name: 'ProsValOpen', lower: 'prosvalopen', index: 66, isBkr: false};\n  this.rules[67] = {name: 'ProsValString', lower: 'prosvalstring', index: 67, isBkr: false};\n  this.rules[68] = {name: 'ProsValClose', lower: 'prosvalclose', index: 68, isBkr: false};\n  this.rules[69] = {name: 'rep-min', lower: 'rep-min', index: 69, isBkr: false};\n  this.rules[70] = {name: 'rep-min-max', lower: 'rep-min-max', index: 70, isBkr: false};\n  this.rules[71] = {name: 'rep-max', lower: 'rep-max', index: 71, isBkr: false};\n  this.rules[72] = {name: 'rep-num', lower: 'rep-num', index: 72, isBkr: false};\n  this.rules[73] = {name: 'dString', lower: 'dstring', index: 73, isBkr: false};\n  this.rules[74] = {name: 'xString', lower: 'xstring', index: 74, isBkr: false};\n  this.rules[75] = {name: 'bString', lower: 'bstring', index: 75, isBkr: false};\n  this.rules[76] = {name: 'Dec', lower: 'dec', index: 76, isBkr: false};\n  this.rules[77] = {name: 'Hex', lower: 'hex', index: 77, isBkr: false};\n  this.rules[78] = {name: 'Bin', lower: 'bin', index: 78, isBkr: false};\n  this.rules[79] = {name: 'dmin', lower: 'dmin', index: 79, isBkr: false};\n  this.rules[80] = {name: 'dmax', lower: 'dmax', index: 80, isBkr: false};\n  this.rules[81] = {name: 'bmin', lower: 'bmin', index: 81, isBkr: false};\n  this.rules[82] = {name: 'bmax', lower: 'bmax', index: 82, isBkr: false};\n  this.rules[83] = {name: 'xmin', lower: 'xmin', index: 83, isBkr: false};\n  this.rules[84] = {name: 'xmax', lower: 'xmax', index: 84, isBkr: false};\n  this.rules[85] = {name: 'dnum', lower: 'dnum', index: 85, isBkr: false};\n  this.rules[86] = {name: 'bnum', lower: 'bnum', index: 86, isBkr: false};\n  this.rules[87] = {name: 'xnum', lower: 'xnum', index: 87, isBkr: false};\n  this.rules[88] = {name: 'alphanum', lower: 'alphanum', index: 88, isBkr: false};\n  this.rules[89] = {name: 'owsp', lower: 'owsp', index: 89, isBkr: false};\n  this.rules[90] = {name: 'wsp', lower: 'wsp', index: 90, isBkr: false};\n  this.rules[91] = {name: 'space', lower: 'space', index: 91, isBkr: false};\n  this.rules[92] = {name: 'comment', lower: 'comment', index: 92, isBkr: false};\n  this.rules[93] = {name: 'LineEnd', lower: 'lineend', index: 93, isBkr: false};\n  this.rules[94] = {name: 'LineContinue', lower: 'linecontinue', index: 94, isBkr: false};\n\n  /* UDTS */\n  this.udts = [];\n\n  /* OPCODES */\n  /* File */\n  this.rules[0].opcodes = [];\n  this.rules[0].opcodes[0] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[0].opcodes[1] = {type: 1, children: [2,3,4]};// ALT\n  this.rules[0].opcodes[2] = {type: 4, index: 1};// RNM(BlankLine)\n  this.rules[0].opcodes[3] = {type: 4, index: 2};// RNM(Rule)\n  this.rules[0].opcodes[4] = {type: 4, index: 12};// RNM(RuleError)\n\n  /* BlankLine */\n  this.rules[1].opcodes = [];\n  this.rules[1].opcodes[0] = {type: 2, children: [1,5,7]};// CAT\n  this.rules[1].opcodes[1] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[1].opcodes[2] = {type: 1, children: [3,4]};// ALT\n  this.rules[1].opcodes[3] = {type: 6, string: [32]};// TBS\n  this.rules[1].opcodes[4] = {type: 6, string: [9]};// TBS\n  this.rules[1].opcodes[5] = {type: 3, min: 0, max: 1};// REP\n  this.rules[1].opcodes[6] = {type: 4, index: 92};// RNM(comment)\n  this.rules[1].opcodes[7] = {type: 4, index: 93};// RNM(LineEnd)\n\n  /* Rule */\n  this.rules[2].opcodes = [];\n  this.rules[2].opcodes[0] = {type: 2, children: [1,2,3,4]};// CAT\n  this.rules[2].opcodes[1] = {type: 4, index: 3};// RNM(RuleLookup)\n  this.rules[2].opcodes[2] = {type: 4, index: 89};// RNM(owsp)\n  this.rules[2].opcodes[3] = {type: 4, index: 14};// RNM(Alternation)\n  this.rules[2].opcodes[4] = {type: 1, children: [5,8]};// ALT\n  this.rules[2].opcodes[5] = {type: 2, children: [6,7]};// CAT\n  this.rules[2].opcodes[6] = {type: 4, index: 89};// RNM(owsp)\n  this.rules[2].opcodes[7] = {type: 4, index: 93};// RNM(LineEnd)\n  this.rules[2].opcodes[8] = {type: 2, children: [9,10]};// CAT\n  this.rules[2].opcodes[9] = {type: 4, index: 13};// RNM(LineEndError)\n  this.rules[2].opcodes[10] = {type: 4, index: 93};// RNM(LineEnd)\n\n  /* RuleLookup */\n  this.rules[3].opcodes = [];\n  this.rules[3].opcodes[0] = {type: 2, children: [1,2,3]};// CAT\n  this.rules[3].opcodes[1] = {type: 4, index: 4};// RNM(RuleNameTest)\n  this.rules[3].opcodes[2] = {type: 4, index: 89};// RNM(owsp)\n  this.rules[3].opcodes[3] = {type: 4, index: 7};// RNM(DefinedAsTest)\n\n  /* RuleNameTest */\n  this.rules[4].opcodes = [];\n  this.rules[4].opcodes[0] = {type: 1, children: [1,2]};// ALT\n  this.rules[4].opcodes[1] = {type: 4, index: 5};// RNM(RuleName)\n  this.rules[4].opcodes[2] = {type: 4, index: 6};// RNM(RuleNameError)\n\n  /* RuleName */\n  this.rules[5].opcodes = [];\n  this.rules[5].opcodes[0] = {type: 4, index: 88};// RNM(alphanum)\n\n  /* RuleNameError */\n  this.rules[6].opcodes = [];\n  this.rules[6].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[6].opcodes[1] = {type: 1, children: [2,3]};// ALT\n  this.rules[6].opcodes[2] = {type: 5, min: 33, max: 60};// TRG\n  this.rules[6].opcodes[3] = {type: 5, min: 62, max: 126};// TRG\n\n  /* DefinedAsTest */\n  this.rules[7].opcodes = [];\n  this.rules[7].opcodes[0] = {type: 1, children: [1,2]};// ALT\n  this.rules[7].opcodes[1] = {type: 4, index: 9};// RNM(DefinedAs)\n  this.rules[7].opcodes[2] = {type: 4, index: 8};// RNM(DefinedAsError)\n\n  /* DefinedAsError */\n  this.rules[8].opcodes = [];\n  this.rules[8].opcodes[0] = {type: 3, min: 1, max: 2};// REP\n  this.rules[8].opcodes[1] = {type: 5, min: 33, max: 126};// TRG\n\n  /* DefinedAs */\n  this.rules[9].opcodes = [];\n  this.rules[9].opcodes[0] = {type: 1, children: [1,2]};// ALT\n  this.rules[9].opcodes[1] = {type: 4, index: 11};// RNM(IncAlt)\n  this.rules[9].opcodes[2] = {type: 4, index: 10};// RNM(Defined)\n\n  /* Defined */\n  this.rules[10].opcodes = [];\n  this.rules[10].opcodes[0] = {type: 6, string: [61]};// TBS\n\n  /* IncAlt */\n  this.rules[11].opcodes = [];\n  this.rules[11].opcodes[0] = {type: 6, string: [61,47]};// TBS\n\n  /* RuleError */\n  this.rules[12].opcodes = [];\n  this.rules[12].opcodes[0] = {type: 2, children: [1,6]};// CAT\n  this.rules[12].opcodes[1] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[12].opcodes[2] = {type: 1, children: [3,4,5]};// ALT\n  this.rules[12].opcodes[3] = {type: 5, min: 32, max: 126};// TRG\n  this.rules[12].opcodes[4] = {type: 6, string: [9]};// TBS\n  this.rules[12].opcodes[5] = {type: 4, index: 94};// RNM(LineContinue)\n  this.rules[12].opcodes[6] = {type: 4, index: 93};// RNM(LineEnd)\n\n  /* LineEndError */\n  this.rules[13].opcodes = [];\n  this.rules[13].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[13].opcodes[1] = {type: 1, children: [2,3,4]};// ALT\n  this.rules[13].opcodes[2] = {type: 5, min: 32, max: 126};// TRG\n  this.rules[13].opcodes[3] = {type: 6, string: [9]};// TBS\n  this.rules[13].opcodes[4] = {type: 4, index: 94};// RNM(LineContinue)\n\n  /* Alternation */\n  this.rules[14].opcodes = [];\n  this.rules[14].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[14].opcodes[1] = {type: 4, index: 15};// RNM(Concatenation)\n  this.rules[14].opcodes[2] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[14].opcodes[3] = {type: 2, children: [4,5,6]};// CAT\n  this.rules[14].opcodes[4] = {type: 4, index: 89};// RNM(owsp)\n  this.rules[14].opcodes[5] = {type: 4, index: 44};// RNM(AltOp)\n  this.rules[14].opcodes[6] = {type: 4, index: 15};// RNM(Concatenation)\n\n  /* Concatenation */\n  this.rules[15].opcodes = [];\n  this.rules[15].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[15].opcodes[1] = {type: 4, index: 16};// RNM(Repetition)\n  this.rules[15].opcodes[2] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[15].opcodes[3] = {type: 2, children: [4,5]};// CAT\n  this.rules[15].opcodes[4] = {type: 4, index: 45};// RNM(CatOp)\n  this.rules[15].opcodes[5] = {type: 4, index: 16};// RNM(Repetition)\n\n  /* Repetition */\n  this.rules[16].opcodes = [];\n  this.rules[16].opcodes[0] = {type: 2, children: [1,3]};// CAT\n  this.rules[16].opcodes[1] = {type: 3, min: 0, max: 1};// REP\n  this.rules[16].opcodes[2] = {type: 4, index: 17};// RNM(Modifier)\n  this.rules[16].opcodes[3] = {type: 1, children: [4,5,6,7]};// ALT\n  this.rules[16].opcodes[4] = {type: 4, index: 21};// RNM(Group)\n  this.rules[16].opcodes[5] = {type: 4, index: 25};// RNM(Option)\n  this.rules[16].opcodes[6] = {type: 4, index: 19};// RNM(BasicElement)\n  this.rules[16].opcodes[7] = {type: 4, index: 20};// RNM(BasicElementErr)\n\n  /* Modifier */\n  this.rules[17].opcodes = [];\n  this.rules[17].opcodes[0] = {type: 1, children: [1,5]};// ALT\n  this.rules[17].opcodes[1] = {type: 2, children: [2,3]};// CAT\n  this.rules[17].opcodes[2] = {type: 4, index: 18};// RNM(Predicate)\n  this.rules[17].opcodes[3] = {type: 3, min: 0, max: 1};// REP\n  this.rules[17].opcodes[4] = {type: 4, index: 43};// RNM(RepOp)\n  this.rules[17].opcodes[5] = {type: 4, index: 43};// RNM(RepOp)\n\n  /* Predicate */\n  this.rules[18].opcodes = [];\n  this.rules[18].opcodes[0] = {type: 1, children: [1,2,3,4]};// ALT\n  this.rules[18].opcodes[1] = {type: 4, index: 49};// RNM(BkaOp)\n  this.rules[18].opcodes[2] = {type: 4, index: 50};// RNM(BknOp)\n  this.rules[18].opcodes[3] = {type: 4, index: 47};// RNM(AndOp)\n  this.rules[18].opcodes[4] = {type: 4, index: 48};// RNM(NotOp)\n\n  /* BasicElement */\n  this.rules[19].opcodes = [];\n  this.rules[19].opcodes[0] = {type: 1, children: [1,2,3,4,5,6,7,8,9,10]};// ALT\n  this.rules[19].opcodes[1] = {type: 4, index: 40};// RNM(UdtOp)\n  this.rules[19].opcodes[2] = {type: 4, index: 29};// RNM(RnmOp)\n  this.rules[19].opcodes[3] = {type: 4, index: 53};// RNM(TrgOp)\n  this.rules[19].opcodes[4] = {type: 4, index: 54};// RNM(TbsOp)\n  this.rules[19].opcodes[5] = {type: 4, index: 55};// RNM(TlsOp)\n  this.rules[19].opcodes[6] = {type: 4, index: 61};// RNM(ClsOp)\n  this.rules[19].opcodes[7] = {type: 4, index: 30};// RNM(BkrOp)\n  this.rules[19].opcodes[8] = {type: 4, index: 51};// RNM(AbgOp)\n  this.rules[19].opcodes[9] = {type: 4, index: 52};// RNM(AenOp)\n  this.rules[19].opcodes[10] = {type: 4, index: 65};// RNM(ProsVal)\n\n  /* BasicElementErr */\n  this.rules[20].opcodes = [];\n  this.rules[20].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[20].opcodes[1] = {type: 1, children: [2,3,4,5]};// ALT\n  this.rules[20].opcodes[2] = {type: 5, min: 33, max: 40};// TRG\n  this.rules[20].opcodes[3] = {type: 5, min: 42, max: 46};// TRG\n  this.rules[20].opcodes[4] = {type: 5, min: 48, max: 92};// TRG\n  this.rules[20].opcodes[5] = {type: 5, min: 94, max: 126};// TRG\n\n  /* Group */\n  this.rules[21].opcodes = [];\n  this.rules[21].opcodes[0] = {type: 2, children: [1,2,3]};// CAT\n  this.rules[21].opcodes[1] = {type: 4, index: 23};// RNM(GroupOpen)\n  this.rules[21].opcodes[2] = {type: 4, index: 14};// RNM(Alternation)\n  this.rules[21].opcodes[3] = {type: 1, children: [4,5]};// ALT\n  this.rules[21].opcodes[4] = {type: 4, index: 24};// RNM(GroupClose)\n  this.rules[21].opcodes[5] = {type: 4, index: 22};// RNM(GroupError)\n\n  /* GroupError */\n  this.rules[22].opcodes = [];\n  this.rules[22].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[22].opcodes[1] = {type: 1, children: [2,3,4,5]};// ALT\n  this.rules[22].opcodes[2] = {type: 5, min: 33, max: 40};// TRG\n  this.rules[22].opcodes[3] = {type: 5, min: 42, max: 46};// TRG\n  this.rules[22].opcodes[4] = {type: 5, min: 48, max: 92};// TRG\n  this.rules[22].opcodes[5] = {type: 5, min: 94, max: 126};// TRG\n\n  /* GroupOpen */\n  this.rules[23].opcodes = [];\n  this.rules[23].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[23].opcodes[1] = {type: 6, string: [40]};// TBS\n  this.rules[23].opcodes[2] = {type: 4, index: 89};// RNM(owsp)\n\n  /* GroupClose */\n  this.rules[24].opcodes = [];\n  this.rules[24].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[24].opcodes[1] = {type: 4, index: 89};// RNM(owsp)\n  this.rules[24].opcodes[2] = {type: 6, string: [41]};// TBS\n\n  /* Option */\n  this.rules[25].opcodes = [];\n  this.rules[25].opcodes[0] = {type: 2, children: [1,2,3]};// CAT\n  this.rules[25].opcodes[1] = {type: 4, index: 27};// RNM(OptionOpen)\n  this.rules[25].opcodes[2] = {type: 4, index: 14};// RNM(Alternation)\n  this.rules[25].opcodes[3] = {type: 1, children: [4,5]};// ALT\n  this.rules[25].opcodes[4] = {type: 4, index: 28};// RNM(OptionClose)\n  this.rules[25].opcodes[5] = {type: 4, index: 26};// RNM(OptionError)\n\n  /* OptionError */\n  this.rules[26].opcodes = [];\n  this.rules[26].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[26].opcodes[1] = {type: 1, children: [2,3,4,5]};// ALT\n  this.rules[26].opcodes[2] = {type: 5, min: 33, max: 40};// TRG\n  this.rules[26].opcodes[3] = {type: 5, min: 42, max: 46};// TRG\n  this.rules[26].opcodes[4] = {type: 5, min: 48, max: 92};// TRG\n  this.rules[26].opcodes[5] = {type: 5, min: 94, max: 126};// TRG\n\n  /* OptionOpen */\n  this.rules[27].opcodes = [];\n  this.rules[27].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[27].opcodes[1] = {type: 6, string: [91]};// TBS\n  this.rules[27].opcodes[2] = {type: 4, index: 89};// RNM(owsp)\n\n  /* OptionClose */\n  this.rules[28].opcodes = [];\n  this.rules[28].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[28].opcodes[1] = {type: 4, index: 89};// RNM(owsp)\n  this.rules[28].opcodes[2] = {type: 6, string: [93]};// TBS\n\n  /* RnmOp */\n  this.rules[29].opcodes = [];\n  this.rules[29].opcodes[0] = {type: 4, index: 88};// RNM(alphanum)\n\n  /* BkrOp */\n  this.rules[30].opcodes = [];\n  this.rules[30].opcodes[0] = {type: 2, children: [1,2,4]};// CAT\n  this.rules[30].opcodes[1] = {type: 6, string: [92]};// TBS\n  this.rules[30].opcodes[2] = {type: 3, min: 0, max: 1};// REP\n  this.rules[30].opcodes[3] = {type: 4, index: 31};// RNM(bkrModifier)\n  this.rules[30].opcodes[4] = {type: 4, index: 36};// RNM(bkr-name)\n\n  /* bkrModifier */\n  this.rules[31].opcodes = [];\n  this.rules[31].opcodes[0] = {type: 1, children: [1,7,13,19]};// ALT\n  this.rules[31].opcodes[1] = {type: 2, children: [2,3]};// CAT\n  this.rules[31].opcodes[2] = {type: 4, index: 32};// RNM(cs)\n  this.rules[31].opcodes[3] = {type: 3, min: 0, max: 1};// REP\n  this.rules[31].opcodes[4] = {type: 1, children: [5,6]};// ALT\n  this.rules[31].opcodes[5] = {type: 4, index: 34};// RNM(um)\n  this.rules[31].opcodes[6] = {type: 4, index: 35};// RNM(pm)\n  this.rules[31].opcodes[7] = {type: 2, children: [8,9]};// CAT\n  this.rules[31].opcodes[8] = {type: 4, index: 33};// RNM(ci)\n  this.rules[31].opcodes[9] = {type: 3, min: 0, max: 1};// REP\n  this.rules[31].opcodes[10] = {type: 1, children: [11,12]};// ALT\n  this.rules[31].opcodes[11] = {type: 4, index: 34};// RNM(um)\n  this.rules[31].opcodes[12] = {type: 4, index: 35};// RNM(pm)\n  this.rules[31].opcodes[13] = {type: 2, children: [14,15]};// CAT\n  this.rules[31].opcodes[14] = {type: 4, index: 34};// RNM(um)\n  this.rules[31].opcodes[15] = {type: 3, min: 0, max: 1};// REP\n  this.rules[31].opcodes[16] = {type: 1, children: [17,18]};// ALT\n  this.rules[31].opcodes[17] = {type: 4, index: 32};// RNM(cs)\n  this.rules[31].opcodes[18] = {type: 4, index: 33};// RNM(ci)\n  this.rules[31].opcodes[19] = {type: 2, children: [20,21]};// CAT\n  this.rules[31].opcodes[20] = {type: 4, index: 35};// RNM(pm)\n  this.rules[31].opcodes[21] = {type: 3, min: 0, max: 1};// REP\n  this.rules[31].opcodes[22] = {type: 1, children: [23,24]};// ALT\n  this.rules[31].opcodes[23] = {type: 4, index: 32};// RNM(cs)\n  this.rules[31].opcodes[24] = {type: 4, index: 33};// RNM(ci)\n\n  /* cs */\n  this.rules[32].opcodes = [];\n  this.rules[32].opcodes[0] = {type: 6, string: [37,115]};// TBS\n\n  /* ci */\n  this.rules[33].opcodes = [];\n  this.rules[33].opcodes[0] = {type: 6, string: [37,105]};// TBS\n\n  /* um */\n  this.rules[34].opcodes = [];\n  this.rules[34].opcodes[0] = {type: 6, string: [37,117]};// TBS\n\n  /* pm */\n  this.rules[35].opcodes = [];\n  this.rules[35].opcodes[0] = {type: 6, string: [37,112]};// TBS\n\n  /* bkr-name */\n  this.rules[36].opcodes = [];\n  this.rules[36].opcodes[0] = {type: 1, children: [1,2,3]};// ALT\n  this.rules[36].opcodes[1] = {type: 4, index: 38};// RNM(uname)\n  this.rules[36].opcodes[2] = {type: 4, index: 39};// RNM(ename)\n  this.rules[36].opcodes[3] = {type: 4, index: 37};// RNM(rname)\n\n  /* rname */\n  this.rules[37].opcodes = [];\n  this.rules[37].opcodes[0] = {type: 4, index: 88};// RNM(alphanum)\n\n  /* uname */\n  this.rules[38].opcodes = [];\n  this.rules[38].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[38].opcodes[1] = {type: 6, string: [117,95]};// TBS\n  this.rules[38].opcodes[2] = {type: 4, index: 88};// RNM(alphanum)\n\n  /* ename */\n  this.rules[39].opcodes = [];\n  this.rules[39].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[39].opcodes[1] = {type: 6, string: [101,95]};// TBS\n  this.rules[39].opcodes[2] = {type: 4, index: 88};// RNM(alphanum)\n\n  /* UdtOp */\n  this.rules[40].opcodes = [];\n  this.rules[40].opcodes[0] = {type: 1, children: [1,2]};// ALT\n  this.rules[40].opcodes[1] = {type: 4, index: 42};// RNM(udt-empty)\n  this.rules[40].opcodes[2] = {type: 4, index: 41};// RNM(udt-non-empty)\n\n  /* udt-non-empty */\n  this.rules[41].opcodes = [];\n  this.rules[41].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[41].opcodes[1] = {type: 6, string: [117,95]};// TBS\n  this.rules[41].opcodes[2] = {type: 4, index: 88};// RNM(alphanum)\n\n  /* udt-empty */\n  this.rules[42].opcodes = [];\n  this.rules[42].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[42].opcodes[1] = {type: 6, string: [101,95]};// TBS\n  this.rules[42].opcodes[2] = {type: 4, index: 88};// RNM(alphanum)\n\n  /* RepOp */\n  this.rules[43].opcodes = [];\n  this.rules[43].opcodes[0] = {type: 1, children: [1,5,8,11,12]};// ALT\n  this.rules[43].opcodes[1] = {type: 2, children: [2,3,4]};// CAT\n  this.rules[43].opcodes[2] = {type: 4, index: 69};// RNM(rep-min)\n  this.rules[43].opcodes[3] = {type: 4, index: 46};// RNM(StarOp)\n  this.rules[43].opcodes[4] = {type: 4, index: 71};// RNM(rep-max)\n  this.rules[43].opcodes[5] = {type: 2, children: [6,7]};// CAT\n  this.rules[43].opcodes[6] = {type: 4, index: 69};// RNM(rep-min)\n  this.rules[43].opcodes[7] = {type: 4, index: 46};// RNM(StarOp)\n  this.rules[43].opcodes[8] = {type: 2, children: [9,10]};// CAT\n  this.rules[43].opcodes[9] = {type: 4, index: 46};// RNM(StarOp)\n  this.rules[43].opcodes[10] = {type: 4, index: 71};// RNM(rep-max)\n  this.rules[43].opcodes[11] = {type: 4, index: 46};// RNM(StarOp)\n  this.rules[43].opcodes[12] = {type: 4, index: 70};// RNM(rep-min-max)\n\n  /* AltOp */\n  this.rules[44].opcodes = [];\n  this.rules[44].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[44].opcodes[1] = {type: 6, string: [47]};// TBS\n  this.rules[44].opcodes[2] = {type: 4, index: 89};// RNM(owsp)\n\n  /* CatOp */\n  this.rules[45].opcodes = [];\n  this.rules[45].opcodes[0] = {type: 4, index: 90};// RNM(wsp)\n\n  /* StarOp */\n  this.rules[46].opcodes = [];\n  this.rules[46].opcodes[0] = {type: 6, string: [42]};// TBS\n\n  /* AndOp */\n  this.rules[47].opcodes = [];\n  this.rules[47].opcodes[0] = {type: 6, string: [38]};// TBS\n\n  /* NotOp */\n  this.rules[48].opcodes = [];\n  this.rules[48].opcodes[0] = {type: 6, string: [33]};// TBS\n\n  /* BkaOp */\n  this.rules[49].opcodes = [];\n  this.rules[49].opcodes[0] = {type: 6, string: [38,38]};// TBS\n\n  /* BknOp */\n  this.rules[50].opcodes = [];\n  this.rules[50].opcodes[0] = {type: 6, string: [33,33]};// TBS\n\n  /* AbgOp */\n  this.rules[51].opcodes = [];\n  this.rules[51].opcodes[0] = {type: 6, string: [37,94]};// TBS\n\n  /* AenOp */\n  this.rules[52].opcodes = [];\n  this.rules[52].opcodes[0] = {type: 6, string: [37,36]};// TBS\n\n  /* TrgOp */\n  this.rules[53].opcodes = [];\n  this.rules[53].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[53].opcodes[1] = {type: 6, string: [37]};// TBS\n  this.rules[53].opcodes[2] = {type: 1, children: [3,8,13]};// ALT\n  this.rules[53].opcodes[3] = {type: 2, children: [4,5,6,7]};// CAT\n  this.rules[53].opcodes[4] = {type: 4, index: 76};// RNM(Dec)\n  this.rules[53].opcodes[5] = {type: 4, index: 79};// RNM(dmin)\n  this.rules[53].opcodes[6] = {type: 6, string: [45]};// TBS\n  this.rules[53].opcodes[7] = {type: 4, index: 80};// RNM(dmax)\n  this.rules[53].opcodes[8] = {type: 2, children: [9,10,11,12]};// CAT\n  this.rules[53].opcodes[9] = {type: 4, index: 77};// RNM(Hex)\n  this.rules[53].opcodes[10] = {type: 4, index: 83};// RNM(xmin)\n  this.rules[53].opcodes[11] = {type: 6, string: [45]};// TBS\n  this.rules[53].opcodes[12] = {type: 4, index: 84};// RNM(xmax)\n  this.rules[53].opcodes[13] = {type: 2, children: [14,15,16,17]};// CAT\n  this.rules[53].opcodes[14] = {type: 4, index: 78};// RNM(Bin)\n  this.rules[53].opcodes[15] = {type: 4, index: 81};// RNM(bmin)\n  this.rules[53].opcodes[16] = {type: 6, string: [45]};// TBS\n  this.rules[53].opcodes[17] = {type: 4, index: 82};// RNM(bmax)\n\n  /* TbsOp */\n  this.rules[54].opcodes = [];\n  this.rules[54].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[54].opcodes[1] = {type: 6, string: [37]};// TBS\n  this.rules[54].opcodes[2] = {type: 1, children: [3,10,17]};// ALT\n  this.rules[54].opcodes[3] = {type: 2, children: [4,5,6]};// CAT\n  this.rules[54].opcodes[4] = {type: 4, index: 76};// RNM(Dec)\n  this.rules[54].opcodes[5] = {type: 4, index: 73};// RNM(dString)\n  this.rules[54].opcodes[6] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[54].opcodes[7] = {type: 2, children: [8,9]};// CAT\n  this.rules[54].opcodes[8] = {type: 6, string: [46]};// TBS\n  this.rules[54].opcodes[9] = {type: 4, index: 73};// RNM(dString)\n  this.rules[54].opcodes[10] = {type: 2, children: [11,12,13]};// CAT\n  this.rules[54].opcodes[11] = {type: 4, index: 77};// RNM(Hex)\n  this.rules[54].opcodes[12] = {type: 4, index: 74};// RNM(xString)\n  this.rules[54].opcodes[13] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[54].opcodes[14] = {type: 2, children: [15,16]};// CAT\n  this.rules[54].opcodes[15] = {type: 6, string: [46]};// TBS\n  this.rules[54].opcodes[16] = {type: 4, index: 74};// RNM(xString)\n  this.rules[54].opcodes[17] = {type: 2, children: [18,19,20]};// CAT\n  this.rules[54].opcodes[18] = {type: 4, index: 78};// RNM(Bin)\n  this.rules[54].opcodes[19] = {type: 4, index: 75};// RNM(bString)\n  this.rules[54].opcodes[20] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[54].opcodes[21] = {type: 2, children: [22,23]};// CAT\n  this.rules[54].opcodes[22] = {type: 6, string: [46]};// TBS\n  this.rules[54].opcodes[23] = {type: 4, index: 75};// RNM(bString)\n\n  /* TlsOp */\n  this.rules[55].opcodes = [];\n  this.rules[55].opcodes[0] = {type: 2, children: [1,2,3,4]};// CAT\n  this.rules[55].opcodes[1] = {type: 4, index: 56};// RNM(TlsCase)\n  this.rules[55].opcodes[2] = {type: 4, index: 57};// RNM(TlsOpen)\n  this.rules[55].opcodes[3] = {type: 4, index: 59};// RNM(TlsString)\n  this.rules[55].opcodes[4] = {type: 4, index: 58};// RNM(TlsClose)\n\n  /* TlsCase */\n  this.rules[56].opcodes = [];\n  this.rules[56].opcodes[0] = {type: 3, min: 0, max: 1};// REP\n  this.rules[56].opcodes[1] = {type: 1, children: [2,3]};// ALT\n  this.rules[56].opcodes[2] = {type: 7, string: [37,105]};// TLS\n  this.rules[56].opcodes[3] = {type: 7, string: [37,115]};// TLS\n\n  /* TlsOpen */\n  this.rules[57].opcodes = [];\n  this.rules[57].opcodes[0] = {type: 6, string: [34]};// TBS\n\n  /* TlsClose */\n  this.rules[58].opcodes = [];\n  this.rules[58].opcodes[0] = {type: 6, string: [34]};// TBS\n\n  /* TlsString */\n  this.rules[59].opcodes = [];\n  this.rules[59].opcodes[0] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[59].opcodes[1] = {type: 1, children: [2,3,4]};// ALT\n  this.rules[59].opcodes[2] = {type: 5, min: 32, max: 33};// TRG\n  this.rules[59].opcodes[3] = {type: 5, min: 35, max: 126};// TRG\n  this.rules[59].opcodes[4] = {type: 4, index: 60};// RNM(StringTab)\n\n  /* StringTab */\n  this.rules[60].opcodes = [];\n  this.rules[60].opcodes[0] = {type: 6, string: [9]};// TBS\n\n  /* ClsOp */\n  this.rules[61].opcodes = [];\n  this.rules[61].opcodes[0] = {type: 2, children: [1,2,3]};// CAT\n  this.rules[61].opcodes[1] = {type: 4, index: 62};// RNM(ClsOpen)\n  this.rules[61].opcodes[2] = {type: 4, index: 64};// RNM(ClsString)\n  this.rules[61].opcodes[3] = {type: 4, index: 63};// RNM(ClsClose)\n\n  /* ClsOpen */\n  this.rules[62].opcodes = [];\n  this.rules[62].opcodes[0] = {type: 6, string: [39]};// TBS\n\n  /* ClsClose */\n  this.rules[63].opcodes = [];\n  this.rules[63].opcodes[0] = {type: 6, string: [39]};// TBS\n\n  /* ClsString */\n  this.rules[64].opcodes = [];\n  this.rules[64].opcodes[0] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[64].opcodes[1] = {type: 1, children: [2,3,4]};// ALT\n  this.rules[64].opcodes[2] = {type: 5, min: 32, max: 38};// TRG\n  this.rules[64].opcodes[3] = {type: 5, min: 40, max: 126};// TRG\n  this.rules[64].opcodes[4] = {type: 4, index: 60};// RNM(StringTab)\n\n  /* ProsVal */\n  this.rules[65].opcodes = [];\n  this.rules[65].opcodes[0] = {type: 2, children: [1,2,3]};// CAT\n  this.rules[65].opcodes[1] = {type: 4, index: 66};// RNM(ProsValOpen)\n  this.rules[65].opcodes[2] = {type: 4, index: 67};// RNM(ProsValString)\n  this.rules[65].opcodes[3] = {type: 4, index: 68};// RNM(ProsValClose)\n\n  /* ProsValOpen */\n  this.rules[66].opcodes = [];\n  this.rules[66].opcodes[0] = {type: 6, string: [60]};// TBS\n\n  /* ProsValString */\n  this.rules[67].opcodes = [];\n  this.rules[67].opcodes[0] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[67].opcodes[1] = {type: 1, children: [2,3,4]};// ALT\n  this.rules[67].opcodes[2] = {type: 5, min: 32, max: 61};// TRG\n  this.rules[67].opcodes[3] = {type: 5, min: 63, max: 126};// TRG\n  this.rules[67].opcodes[4] = {type: 4, index: 60};// RNM(StringTab)\n\n  /* ProsValClose */\n  this.rules[68].opcodes = [];\n  this.rules[68].opcodes[0] = {type: 6, string: [62]};// TBS\n\n  /* rep-min */\n  this.rules[69].opcodes = [];\n  this.rules[69].opcodes[0] = {type: 4, index: 72};// RNM(rep-num)\n\n  /* rep-min-max */\n  this.rules[70].opcodes = [];\n  this.rules[70].opcodes[0] = {type: 4, index: 72};// RNM(rep-num)\n\n  /* rep-max */\n  this.rules[71].opcodes = [];\n  this.rules[71].opcodes[0] = {type: 4, index: 72};// RNM(rep-num)\n\n  /* rep-num */\n  this.rules[72].opcodes = [];\n  this.rules[72].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[72].opcodes[1] = {type: 5, min: 48, max: 57};// TRG\n\n  /* dString */\n  this.rules[73].opcodes = [];\n  this.rules[73].opcodes[0] = {type: 4, index: 85};// RNM(dnum)\n\n  /* xString */\n  this.rules[74].opcodes = [];\n  this.rules[74].opcodes[0] = {type: 4, index: 87};// RNM(xnum)\n\n  /* bString */\n  this.rules[75].opcodes = [];\n  this.rules[75].opcodes[0] = {type: 4, index: 86};// RNM(bnum)\n\n  /* Dec */\n  this.rules[76].opcodes = [];\n  this.rules[76].opcodes[0] = {type: 1, children: [1,2]};// ALT\n  this.rules[76].opcodes[1] = {type: 6, string: [68]};// TBS\n  this.rules[76].opcodes[2] = {type: 6, string: [100]};// TBS\n\n  /* Hex */\n  this.rules[77].opcodes = [];\n  this.rules[77].opcodes[0] = {type: 1, children: [1,2]};// ALT\n  this.rules[77].opcodes[1] = {type: 6, string: [88]};// TBS\n  this.rules[77].opcodes[2] = {type: 6, string: [120]};// TBS\n\n  /* Bin */\n  this.rules[78].opcodes = [];\n  this.rules[78].opcodes[0] = {type: 1, children: [1,2]};// ALT\n  this.rules[78].opcodes[1] = {type: 6, string: [66]};// TBS\n  this.rules[78].opcodes[2] = {type: 6, string: [98]};// TBS\n\n  /* dmin */\n  this.rules[79].opcodes = [];\n  this.rules[79].opcodes[0] = {type: 4, index: 85};// RNM(dnum)\n\n  /* dmax */\n  this.rules[80].opcodes = [];\n  this.rules[80].opcodes[0] = {type: 4, index: 85};// RNM(dnum)\n\n  /* bmin */\n  this.rules[81].opcodes = [];\n  this.rules[81].opcodes[0] = {type: 4, index: 86};// RNM(bnum)\n\n  /* bmax */\n  this.rules[82].opcodes = [];\n  this.rules[82].opcodes[0] = {type: 4, index: 86};// RNM(bnum)\n\n  /* xmin */\n  this.rules[83].opcodes = [];\n  this.rules[83].opcodes[0] = {type: 4, index: 87};// RNM(xnum)\n\n  /* xmax */\n  this.rules[84].opcodes = [];\n  this.rules[84].opcodes[0] = {type: 4, index: 87};// RNM(xnum)\n\n  /* dnum */\n  this.rules[85].opcodes = [];\n  this.rules[85].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[85].opcodes[1] = {type: 5, min: 48, max: 57};// TRG\n\n  /* bnum */\n  this.rules[86].opcodes = [];\n  this.rules[86].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[86].opcodes[1] = {type: 5, min: 48, max: 49};// TRG\n\n  /* xnum */\n  this.rules[87].opcodes = [];\n  this.rules[87].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[87].opcodes[1] = {type: 1, children: [2,3,4]};// ALT\n  this.rules[87].opcodes[2] = {type: 5, min: 48, max: 57};// TRG\n  this.rules[87].opcodes[3] = {type: 5, min: 65, max: 70};// TRG\n  this.rules[87].opcodes[4] = {type: 5, min: 97, max: 102};// TRG\n\n  /* alphanum */\n  this.rules[88].opcodes = [];\n  this.rules[88].opcodes[0] = {type: 2, children: [1,4]};// CAT\n  this.rules[88].opcodes[1] = {type: 1, children: [2,3]};// ALT\n  this.rules[88].opcodes[2] = {type: 5, min: 97, max: 122};// TRG\n  this.rules[88].opcodes[3] = {type: 5, min: 65, max: 90};// TRG\n  this.rules[88].opcodes[4] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[88].opcodes[5] = {type: 1, children: [6,7,8,9]};// ALT\n  this.rules[88].opcodes[6] = {type: 5, min: 97, max: 122};// TRG\n  this.rules[88].opcodes[7] = {type: 5, min: 65, max: 90};// TRG\n  this.rules[88].opcodes[8] = {type: 5, min: 48, max: 57};// TRG\n  this.rules[88].opcodes[9] = {type: 6, string: [45]};// TBS\n\n  /* owsp */\n  this.rules[89].opcodes = [];\n  this.rules[89].opcodes[0] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[89].opcodes[1] = {type: 4, index: 91};// RNM(space)\n\n  /* wsp */\n  this.rules[90].opcodes = [];\n  this.rules[90].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP\n  this.rules[90].opcodes[1] = {type: 4, index: 91};// RNM(space)\n\n  /* space */\n  this.rules[91].opcodes = [];\n  this.rules[91].opcodes[0] = {type: 1, children: [1,2,3,4]};// ALT\n  this.rules[91].opcodes[1] = {type: 6, string: [32]};// TBS\n  this.rules[91].opcodes[2] = {type: 6, string: [9]};// TBS\n  this.rules[91].opcodes[3] = {type: 4, index: 92};// RNM(comment)\n  this.rules[91].opcodes[4] = {type: 4, index: 94};// RNM(LineContinue)\n\n  /* comment */\n  this.rules[92].opcodes = [];\n  this.rules[92].opcodes[0] = {type: 2, children: [1,2]};// CAT\n  this.rules[92].opcodes[1] = {type: 6, string: [59]};// TBS\n  this.rules[92].opcodes[2] = {type: 3, min: 0, max: Infinity};// REP\n  this.rules[92].opcodes[3] = {type: 1, children: [4,5]};// ALT\n  this.rules[92].opcodes[4] = {type: 5, min: 32, max: 126};// TRG\n  this.rules[92].opcodes[5] = {type: 6, string: [9]};// TBS\n\n  /* LineEnd */\n  this.rules[93].opcodes = [];\n  this.rules[93].opcodes[0] = {type: 1, children: [1,2,3]};// ALT\n  this.rules[93].opcodes[1] = {type: 6, string: [13,10]};// TBS\n  this.rules[93].opcodes[2] = {type: 6, string: [10]};// TBS\n  this.rules[93].opcodes[3] = {type: 6, string: [13]};// TBS\n\n  /* LineContinue */\n  this.rules[94].opcodes = [];\n  this.rules[94].opcodes[0] = {type: 2, children: [1,5]};// CAT\n  this.rules[94].opcodes[1] = {type: 1, children: [2,3,4]};// ALT\n  this.rules[94].opcodes[2] = {type: 6, string: [13,10]};// TBS\n  this.rules[94].opcodes[3] = {type: 6, string: [10]};// TBS\n  this.rules[94].opcodes[4] = {type: 6, string: [13]};// TBS\n  this.rules[94].opcodes[5] = {type: 1, children: [6,7]};// ALT\n  this.rules[94].opcodes[6] = {type: 6, string: [32]};// TBS\n  this.rules[94].opcodes[7] = {type: 6, string: [9]};// TBS\n\n  // The `toString()` function will display the original grammar file(s) that produced these opcodes.\n  this.toString = function toString(){\n    let str = \"\";\n    str += \";\\n\";\n    str += \"; ABNF for JavaScript APG 2.0 SABNF\\n\";\n    str += \"; RFC 5234 with some restrictions and additions.\\n\";\n    str += \"; Updated 11/24/2015 for RFC 7405 case-sensitive literal string notation\\n\";\n    str += \";  - accepts %s\\\"string\\\" as a case-sensitive string\\n\";\n    str += \";  - accepts %i\\\"string\\\" as a case-insensitive string\\n\";\n    str += \";  - accepts \\\"string\\\" as a case-insensitive string\\n\";\n    str += \";\\n\";\n    str += \"; Some restrictions:\\n\";\n    str += \";   1. Rules must begin at first character of each line.\\n\";\n    str += \";      Indentations on first rule and rules thereafter are not allowed.\\n\";\n    str += \";   2. Relaxed line endings. CRLF, LF or CR are accepted as valid line ending.\\n\";\n    str += \";   3. Prose values, i.e. <prose value>, are accepted as valid grammar syntax.\\n\";\n    str += \";      However, a working parser cannot be generated from them.\\n\";\n    str += \";\\n\";\n    str += \"; Super set (SABNF) additions:\\n\";\n    str += \";   1. Look-ahead (syntactic predicate) operators are accepted as element prefixes.\\n\";\n    str += \";      & is the positive look-ahead operator, succeeds and backtracks if the look-ahead phrase is found\\n\";\n    str += \";      ! is the negative look-ahead operator, succeeds and backtracks if the look-ahead phrase is NOT found\\n\";\n    str += \";      e.g. &%d13 or &rule or !(A / B)\\n\";\n    str += \";   2. User-Defined Terminals (UDT) of the form, u_name and e_name are accepted.\\n\";\n    str += \";      'name' is alpha followed by alpha/num/hyphen just like a rule name.\\n\";\n    str += \";      u_name may be used as an element but no rule definition is given.\\n\";\n    str += \";      e.g. rule = A / u_myUdt\\n\";\n    str += \";           A = \\\"a\\\"\\n\";\n    str += \";      would be a valid grammar.\\n\";\n    str += \";   3. Case-sensitive, single-quoted strings are accepted.\\n\";\n    str += \";      e.g. 'abc' would be equivalent to %d97.98.99\\n\";\n    str += \";      (kept for backward compatibility, but superseded by %s\\\"abc\\\")  \\n\";\n    str += \"; New 12/26/2015\\n\";\n    str += \";   4. Look-behind operators are accepted as element prefixes.\\n\";\n    str += \";      && is the positive look-behind operator, succeeds and backtracks if the look-behind phrase is found\\n\";\n    str += \";      !! is the negative look-behind operator, succeeds and backtracks if the look-behind phrase is NOT found\\n\";\n    str += \";      e.g. &&%d13 or &&rule or !!(A / B)\\n\";\n    str += \";   5. Back reference operators, i.e. \\\\rulename, are accepted.\\n\";\n    str += \";      A back reference operator acts like a TLS or TBS terminal except that the phrase it attempts\\n\";\n    str += \";      to match is a phrase previously matched by the rule 'rulename'.\\n\";\n    str += \";      There are two modes of previous phrase matching - the parent-frame mode and the universal mode.\\n\";\n    str += \";      In universal mode, \\\\rulename matches the last match to 'rulename' regardless of where it was found.\\n\";\n    str += \";      In parent-frame mode, \\\\rulename matches only the last match found on the parent's frame or parse tree level.\\n\";\n    str += \";      Back reference modifiers can be used to specify case and mode.\\n\";\n    str += \";      \\\\A defaults to case-insensitive and universal mode, e.g. \\\\A === \\\\%i%uA\\n\";\n    str += \";      Modifiers %i and %s determine case-insensitive and case-sensitive mode, respectively.\\n\";\n    str += \";      Modifiers %u and %p determine universal mode and parent frame mode, respectively.\\n\";\n    str += \";      Case and mode modifiers can appear in any order, e.g. \\\\%s%pA === \\\\%p%sA. \\n\";\n    str += \";   7. String begin anchor, ABG(%^) matches the beginning of the input string location.\\n\";\n    str += \";      Returns EMPTY or NOMATCH. Never consumes any characters.\\n\";\n    str += \";   8. String end anchor, AEN(%$) matches the end of the input string location.\\n\";\n    str += \";      Returns EMPTY or NOMATCH. Never consumes any characters.\\n\";\n    str += \";\\n\";\n    str += \"File            = *(BlankLine / Rule / RuleError)\\n\";\n    str += \"BlankLine       = *(%d32/%d9) [comment] LineEnd\\n\";\n    str += \"Rule            = RuleLookup owsp Alternation ((owsp LineEnd)\\n\";\n    str += \"                / (LineEndError LineEnd))\\n\";\n    str += \"RuleLookup      = RuleNameTest owsp DefinedAsTest\\n\";\n    str += \"RuleNameTest    = RuleName/RuleNameError\\n\";\n    str += \"RuleName        = alphanum\\n\";\n    str += \"RuleNameError   = 1*(%d33-60/%d62-126)\\n\";\n    str += \"DefinedAsTest   = DefinedAs / DefinedAsError\\n\";\n    str += \"DefinedAsError  = 1*2%d33-126\\n\";\n    str += \"DefinedAs       = IncAlt / Defined\\n\";\n    str += \"Defined         = %d61\\n\";\n    str += \"IncAlt          = %d61.47\\n\";\n    str += \"RuleError       = 1*(%d32-126 / %d9  / LineContinue) LineEnd\\n\";\n    str += \"LineEndError    = 1*(%d32-126 / %d9  / LineContinue)\\n\";\n    str += \"Alternation     = Concatenation *(owsp AltOp Concatenation)\\n\";\n    str += \"Concatenation   = Repetition *(CatOp Repetition)\\n\";\n    str += \"Repetition      = [Modifier] (Group / Option / BasicElement / BasicElementErr)\\n\";\n    str += \"Modifier        = (Predicate [RepOp])\\n\";\n    str += \"                / RepOp\\n\";\n    str += \"Predicate       = BkaOp\\n\";\n    str += \"                / BknOp\\n\";\n    str += \"                / AndOp\\n\";\n    str += \"                / NotOp\\n\";\n    str += \"BasicElement    = UdtOp\\n\";\n    str += \"                / RnmOp\\n\";\n    str += \"                / TrgOp\\n\";\n    str += \"                / TbsOp\\n\";\n    str += \"                / TlsOp\\n\";\n    str += \"                / ClsOp\\n\";\n    str += \"                / BkrOp\\n\";\n    str += \"                / AbgOp\\n\";\n    str += \"                / AenOp\\n\";\n    str += \"                / ProsVal\\n\";\n    str += \"BasicElementErr = 1*(%d33-40/%d42-46/%d48-92/%d94-126)\\n\";\n    str += \"Group           = GroupOpen  Alternation (GroupClose / GroupError)\\n\";\n    str += \"GroupError      = 1*(%d33-40/%d42-46/%d48-92/%d94-126) ; same as BasicElementErr\\n\";\n    str += \"GroupOpen       = %d40 owsp\\n\";\n    str += \"GroupClose      = owsp %d41\\n\";\n    str += \"Option          = OptionOpen Alternation (OptionClose / OptionError)\\n\";\n    str += \"OptionError     = 1*(%d33-40/%d42-46/%d48-92/%d94-126) ; same as BasicElementErr\\n\";\n    str += \"OptionOpen      = %d91 owsp\\n\";\n    str += \"OptionClose     = owsp %d93\\n\";\n    str += \"RnmOp           = alphanum\\n\";\n    str += \"BkrOp           = %d92 [bkrModifier] bkr-name\\n\";\n    str += \"bkrModifier     = (cs [um / pm]) / (ci [um / pm]) / (um [cs /ci]) / (pm [cs / ci])\\n\";\n    str += \"cs              = '%s'\\n\";\n    str += \"ci              = '%i'\\n\";\n    str += \"um              = '%u'\\n\";\n    str += \"pm              = '%p'\\n\";\n    str += \"bkr-name        = uname / ename / rname\\n\";\n    str += \"rname           = alphanum\\n\";\n    str += \"uname           = %d117.95 alphanum\\n\";\n    str += \"ename           = %d101.95 alphanum\\n\";\n    str += \"UdtOp           = udt-empty\\n\";\n    str += \"                / udt-non-empty\\n\";\n    str += \"udt-non-empty   = %d117.95 alphanum\\n\";\n    str += \"udt-empty       = %d101.95 alphanum\\n\";\n    str += \"RepOp           = (rep-min StarOp rep-max)\\n\";\n    str += \"                / (rep-min StarOp)\\n\";\n    str += \"                / (StarOp rep-max)\\n\";\n    str += \"                / StarOp\\n\";\n    str += \"                / rep-min-max\\n\";\n    str += \"AltOp           = %d47 owsp\\n\";\n    str += \"CatOp           = wsp\\n\";\n    str += \"StarOp          = %d42\\n\";\n    str += \"AndOp           = %d38\\n\";\n    str += \"NotOp           = %d33\\n\";\n    str += \"BkaOp           = %d38.38\\n\";\n    str += \"BknOp           = %d33.33\\n\";\n    str += \"AbgOp           = %d37.94\\n\";\n    str += \"AenOp           = %d37.36\\n\";\n    str += \"TrgOp           = %d37 ((Dec dmin %d45 dmax) / (Hex xmin %d45 xmax) / (Bin bmin %d45 bmax))\\n\";\n    str += \"TbsOp           = %d37 ((Dec dString *(%d46 dString)) / (Hex xString *(%d46 xString)) / (Bin bString *(%d46 bString)))\\n\";\n    str += \"TlsOp           = TlsCase TlsOpen TlsString TlsClose\\n\";\n    str += \"TlsCase         = [\\\"%i\\\" / \\\"%s\\\"]\\n\";\n    str += \"TlsOpen         = %d34\\n\";\n    str += \"TlsClose        = %d34\\n\";\n    str += \"TlsString       = *(%d32-33/%d35-126/StringTab)\\n\";\n    str += \"StringTab       = %d9\\n\";\n    str += \"ClsOp           = ClsOpen ClsString ClsClose\\n\";\n    str += \"ClsOpen         = %d39\\n\";\n    str += \"ClsClose        = %d39\\n\";\n    str += \"ClsString       = *(%d32-38/%d40-126/StringTab)\\n\";\n    str += \"ProsVal         = ProsValOpen ProsValString ProsValClose\\n\";\n    str += \"ProsValOpen     = %d60\\n\";\n    str += \"ProsValString   = *(%d32-61/%d63-126/StringTab)\\n\";\n    str += \"ProsValClose    = %d62\\n\";\n    str += \"rep-min         = rep-num\\n\";\n    str += \"rep-min-max     = rep-num\\n\";\n    str += \"rep-max         = rep-num\\n\";\n    str += \"rep-num         = 1*(%d48-57)\\n\";\n    str += \"dString         = dnum\\n\";\n    str += \"xString         = xnum\\n\";\n    str += \"bString         = bnum\\n\";\n    str += \"Dec             = (%d68/%d100)\\n\";\n    str += \"Hex             = (%d88/%d120)\\n\";\n    str += \"Bin             = (%d66/%d98)\\n\";\n    str += \"dmin            = dnum\\n\";\n    str += \"dmax            = dnum\\n\";\n    str += \"bmin            = bnum\\n\";\n    str += \"bmax            = bnum\\n\";\n    str += \"xmin            = xnum\\n\";\n    str += \"xmax            = xnum\\n\";\n    str += \"dnum            = 1*(%d48-57)\\n\";\n    str += \"bnum            = 1*%d48-49\\n\";\n    str += \"xnum            = 1*(%d48-57 / %d65-70 / %d97-102)\\n\";\n    str += \";\\n\";\n    str += \"; Basics\\n\";\n    str += \"alphanum        = (%d97-122/%d65-90) *(%d97-122/%d65-90/%d48-57/%d45)\\n\";\n    str += \"owsp            = *space\\n\";\n    str += \"wsp             = 1*space\\n\";\n    str += \"space           = %d32\\n\";\n    str += \"                / %d9\\n\";\n    str += \"                / comment\\n\";\n    str += \"                / LineContinue\\n\";\n    str += \"comment         = %d59 *(%d32-126 / %d9)\\n\";\n    str += \"LineEnd         = %d13.10\\n\";\n    str += \"                / %d10\\n\";\n    str += \"                / %d13\\n\";\n    str += \"LineContinue    = (%d13.10 / %d10 / %d13) (%d32 / %d9)\\n\";\n    return str;\n  }\n}\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module converts an input SABNF grammar text file into a\n// grammar object that can be used with `apg-lib` in an application parser.\n// **apg** is, in fact itself, an ABNF parser that generates an SABNF parser.\n// It is based on the grammar<br>\n// `./dist/abnf-for-sabnf-grammar.bnf`.<br>\n// In its syntax phase, **apg** analyzes the user's input SABNF grammar for correct syntax, generating an AST as it goes.\n// In its semantic phase, **apg** translates the AST to generate the parser for the input grammar.\nmodule.exports = function exportParser() {\n  const thisFileName = 'parser: ';\n  const ApgLib = require('../apg-lib/node-exports');\n  const id = ApgLib.ids;\n  const syn = new (require('./syntax-callbacks'))();\n  const sem = new (require('./semantic-callbacks'))();\n  const sabnfGrammar = new (require('./sabnf-grammar'))();\n  // eslint-disable-next-line new-cap\n  const parser = new ApgLib.parser();\n  // eslint-disable-next-line new-cap\n  parser.ast = new ApgLib.ast();\n  parser.callbacks = syn.callbacks;\n  parser.ast.callbacks = sem.callbacks;\n\n  /* find the line containing the given character index */\n  const findLine = function findLine(lines, charIndex, charLength) {\n    if (charIndex < 0 || charIndex >= charLength) {\n      /* return error if out of range */\n      return -1;\n    }\n    for (let i = 0; i < lines.length; i += 1) {\n      if (charIndex >= lines[i].beginChar && charIndex < lines[i].beginChar + lines[i].length) {\n        return i;\n      }\n    }\n    /* should never reach here */\n    return -1;\n  };\n  const translateIndex = function translateIndex(map, index) {\n    let ret = -1;\n    if (index < map.length) {\n      for (let i = index; i < map.length; i += 1) {\n        if (map[i] !== null) {\n          ret = map[i];\n          break;\n        }\n      }\n    }\n    return ret;\n  };\n  /* helper function when removing redundant opcodes */\n  const reduceOpcodes = function reduceOpcodes(rules) {\n    rules.forEach((rule) => {\n      const opcodes = [];\n      const map = [];\n      let reducedIndex = 0;\n      rule.opcodes.forEach((op) => {\n        if (op.type === id.ALT && op.children.length === 1) {\n          map.push(null);\n        } else if (op.type === id.CAT && op.children.length === 1) {\n          map.push(null);\n        } else if (op.type === id.REP && op.min === 1 && op.max === 1) {\n          map.push(null);\n        } else {\n          map.push(reducedIndex);\n          opcodes.push(op);\n          reducedIndex += 1;\n        }\n      });\n      map.push(reducedIndex);\n      /* translate original opcode indexes to the reduced set. */\n      opcodes.forEach((op) => {\n        if (op.type === id.ALT || op.type === id.CAT) {\n          for (let i = 0; i < op.children.length; i += 1) {\n            op.children[i] = translateIndex(map, op.children[i]);\n          }\n        }\n      });\n      rule.opcodes = opcodes;\n    });\n  };\n  /* Parse the grammar - the syntax phase. */\n  /* SABNF grammar syntax errors are caught and reported here. */\n  this.syntax = function syntax(chars, lines, errors, strict, trace) {\n    if (trace) {\n      if (trace.traceObject !== 'traceObject') {\n        throw new TypeError(`${thisFileName}trace argument is not a trace object`);\n      }\n      parser.trace = trace;\n    }\n    const data = {};\n    data.errors = errors;\n    data.strict = !!strict;\n    data.lines = lines;\n    data.findLine = findLine;\n    data.charsLength = chars.length;\n    data.ruleCount = 0;\n    const result = parser.parse(sabnfGrammar, 'file', chars, data);\n    if (!result.success) {\n      errors.push({\n        line: 0,\n        char: 0,\n        msg: 'syntax analysis of input grammar failed',\n      });\n    }\n  };\n  /* Parse the grammar - the semantic phase, translates the AST. */\n  /* SABNF grammar syntax errors are caught and reported here. */\n  this.semantic = function semantic(chars, lines, errors) {\n    const data = {};\n    data.errors = errors;\n    data.lines = lines;\n    data.findLine = findLine;\n    data.charsLength = chars.length;\n    parser.ast.translate(data);\n    if (errors.length) {\n      return null;\n    }\n    /* Remove unneeded operators. */\n    /* ALT operators with a single alternate */\n    /* CAT operators with a single phrase to concatenate */\n    /* REP(1,1) operators (`1*1RuleName` or `1RuleName` is the same as just `RuleName`.) */\n    reduceOpcodes(data.rules);\n    return {\n      rules: data.rules,\n      udts: data.udts,\n      lineMap: data.rulesLineMap,\n    };\n  };\n  // Generate a grammar constructor function.\n  // An object instantiated from this constructor is used with the `apg-lib` `parser()` function.\n  this.generateSource = function generateSource(chars, lines, rules, udts, name) {\n    let source = '';\n    let i;\n    let bkrname;\n    let bkrlower;\n    let opcodeCount = 0;\n    let charCodeMin = Infinity;\n    let charCodeMax = 0;\n    const ruleNames = [];\n    const udtNames = [];\n    let alt = 0;\n    let cat = 0;\n    let rnm = 0;\n    let udt = 0;\n    let rep = 0;\n    let and = 0;\n    let not = 0;\n    let tls = 0;\n    let tbs = 0;\n    let trg = 0;\n    let bkr = 0;\n    let bka = 0;\n    let bkn = 0;\n    let abg = 0;\n    let aen = 0;\n    rules.forEach((rule) => {\n      ruleNames.push(rule.lower);\n      opcodeCount += rule.opcodes.length;\n      rule.opcodes.forEach((op) => {\n        switch (op.type) {\n          case id.ALT:\n            alt += 1;\n            break;\n          case id.CAT:\n            cat += 1;\n            break;\n          case id.RNM:\n            rnm += 1;\n            break;\n          case id.UDT:\n            udt += 1;\n            break;\n          case id.REP:\n            rep += 1;\n            break;\n          case id.AND:\n            and += 1;\n            break;\n          case id.NOT:\n            not += 1;\n            break;\n          case id.BKA:\n            bka += 1;\n            break;\n          case id.BKN:\n            bkn += 1;\n            break;\n          case id.BKR:\n            bkr += 1;\n            break;\n          case id.ABG:\n            abg += 1;\n            break;\n          case id.AEN:\n            aen += 1;\n            break;\n          case id.TLS:\n            tls += 1;\n            for (i = 0; i < op.string.length; i += 1) {\n              if (op.string[i] < charCodeMin) {\n                charCodeMin = op.string[i];\n              }\n              if (op.string[i] > charCodeMax) {\n                charCodeMax = op.string[i];\n              }\n            }\n            break;\n          case id.TBS:\n            tbs += 1;\n            for (i = 0; i < op.string.length; i += 1) {\n              if (op.string[i] < charCodeMin) {\n                charCodeMin = op.string[i];\n              }\n              if (op.string[i] > charCodeMax) {\n                charCodeMax = op.string[i];\n              }\n            }\n            break;\n          case id.TRG:\n            trg += 1;\n            if (op.min < charCodeMin) {\n              charCodeMin = op.min;\n            }\n            if (op.max > charCodeMax) {\n              charCodeMax = op.max;\n            }\n            break;\n          default:\n            throw new Error('generateSource: unrecognized opcode');\n        }\n      });\n    });\n    ruleNames.sort();\n    if (udts.length > 0) {\n      udts.forEach((udtFunc) => {\n        udtNames.push(udtFunc.lower);\n      });\n      udtNames.sort();\n    }\n    let funcname = 'module.exports';\n    if (name && typeof name === 'string') {\n      funcname = `let ${name}`;\n    }\n    source += '// copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved<br>\\n';\n    source += '//   license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)<br>\\n';\n    source += '//\\n';\n    source += '// Generated by apg-js, Version 4.0.0 [apg-js](https://github.com/ldthomas/apg-js)\\n';\n    source += `${funcname} = function grammar(){\\n`;\n    source += '  // ```\\n';\n    source += '  // SUMMARY\\n';\n    source += `  //      rules = ${rules.length}\\n`;\n    source += `  //       udts = ${udts.length}\\n`;\n    source += `  //    opcodes = ${opcodeCount}\\n`;\n    source += '  //        ---   ABNF original opcodes\\n';\n    source += `  //        ALT = ${alt}\\n`;\n    source += `  //        CAT = ${cat}\\n`;\n    source += `  //        REP = ${rep}\\n`;\n    source += `  //        RNM = ${rnm}\\n`;\n    source += `  //        TLS = ${tls}\\n`;\n    source += `  //        TBS = ${tbs}\\n`;\n    source += `  //        TRG = ${trg}\\n`;\n    source += '  //        ---   SABNF superset opcodes\\n';\n    source += `  //        UDT = ${udt}\\n`;\n    source += `  //        AND = ${and}\\n`;\n    source += `  //        NOT = ${not}\\n`;\n    source += `  //        BKA = ${bka}\\n`;\n    source += `  //        BKN = ${bkn}\\n`;\n    source += `  //        BKR = ${bkr}\\n`;\n    source += `  //        ABG = ${abg}\\n`;\n    source += `  //        AEN = ${aen}\\n`;\n    source += '  // characters = [';\n    if (tls + tbs + trg === 0) {\n      source += ' none defined ]';\n    } else {\n      source += `${charCodeMin} - ${charCodeMax}]`;\n    }\n    if (udt > 0) {\n      source += ' + user defined';\n    }\n    source += '\\n';\n    source += '  // ```\\n';\n    source += '  /* OBJECT IDENTIFIER (for internal parser use) */\\n';\n    source += \"  this.grammarObject = 'grammarObject';\\n\";\n    source += '\\n';\n    source += '  /* RULES */\\n';\n    source += '  this.rules = [];\\n';\n    rules.forEach((rule, ii) => {\n      let thisRule = '  this.rules[';\n      thisRule += ii;\n      thisRule += \"] = {name: '\";\n      thisRule += rule.name;\n      thisRule += \"', lower: '\";\n      thisRule += rule.lower;\n      thisRule += \"', index: \";\n      thisRule += rule.index;\n      thisRule += ', isBkr: ';\n      thisRule += rule.isBkr;\n      thisRule += '};\\n';\n      source += thisRule;\n    });\n    source += '\\n';\n    source += '  /* UDTS */\\n';\n    source += '  this.udts = [];\\n';\n    if (udts.length > 0) {\n      udts.forEach((udtFunc, ii) => {\n        let thisUdt = '  this.udts[';\n        thisUdt += ii;\n        thisUdt += \"] = {name: '\";\n        thisUdt += udtFunc.name;\n        thisUdt += \"', lower: '\";\n        thisUdt += udtFunc.lower;\n        thisUdt += \"', index: \";\n        thisUdt += udtFunc.index;\n        thisUdt += ', empty: ';\n        thisUdt += udtFunc.empty;\n        thisUdt += ', isBkr: ';\n        thisUdt += udtFunc.isBkr;\n        thisUdt += '};\\n';\n        source += thisUdt;\n      });\n    }\n    source += '\\n';\n    source += '  /* OPCODES */\\n';\n    rules.forEach((rule, ruleIndex) => {\n      if (ruleIndex > 0) {\n        source += '\\n';\n      }\n      source += `  /* ${rule.name} */\\n`;\n      source += `  this.rules[${ruleIndex}].opcodes = [];\\n`;\n      rule.opcodes.forEach((op, opIndex) => {\n        let prefix;\n        switch (op.type) {\n          case id.ALT:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${\n              op.type\n            }, children: [${op.children.toString()}]};// ALT\\n`;\n            break;\n          case id.CAT:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${\n              op.type\n            }, children: [${op.children.toString()}]};// CAT\\n`;\n            break;\n          case id.RNM:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}, index: ${op.index}};// RNM(${\n              rules[op.index].name\n            })\\n`;\n            break;\n          case id.BKR:\n            if (op.index >= rules.length) {\n              bkrname = udts[op.index - rules.length].name;\n              bkrlower = udts[op.index - rules.length].lower;\n            } else {\n              bkrname = rules[op.index].name;\n              bkrlower = rules[op.index].lower;\n            }\n            prefix = '%i';\n            if (op.bkrCase === id.BKR_MODE_CS) {\n              prefix = '%s';\n            }\n            if (op.bkrMode === id.BKR_MODE_UM) {\n              prefix += '%u';\n            } else {\n              prefix += '%p';\n            }\n            bkrname = prefix + bkrname;\n            source +=\n              `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}, index: ${op.index}, lower: '${bkrlower}'` +\n              `, bkrCase: ${op.bkrCase}, bkrMode: ${op.bkrMode}};// BKR(\\\\${bkrname})\\n`;\n            break;\n          case id.UDT:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}, empty: ${op.empty}, index: ${\n              op.index\n            }};// UDT(${udts[op.index].name})\\n`;\n            break;\n          case id.REP:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}, min: ${op.min}, max: ${op.max}};// REP\\n`;\n            break;\n          case id.AND:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}};// AND\\n`;\n            break;\n          case id.NOT:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}};// NOT\\n`;\n            break;\n          case id.ABG:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}};// ABG(%^)\\n`;\n            break;\n          case id.AEN:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}};// AEN(%$)\\n`;\n            break;\n          case id.BKA:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}};// BKA\\n`;\n            break;\n          case id.BKN:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}};// BKN\\n`;\n            break;\n          case id.TLS:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${\n              op.type\n            }, string: [${op.string.toString()}]};// TLS\\n`;\n            break;\n          case id.TBS:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${\n              op.type\n            }, string: [${op.string.toString()}]};// TBS\\n`;\n            break;\n          case id.TRG:\n            source += `  this.rules[${ruleIndex}].opcodes[${opIndex}] = {type: ${op.type}, min: ${op.min}, max: ${op.max}};// TRG\\n`;\n            break;\n          default:\n            throw new Error('parser.js: ~143: unrecognized opcode');\n        }\n      });\n    });\n    source += '\\n';\n    source += '  // The `toString()` function will display the original grammar file(s) that produced these opcodes.\\n';\n    source += '  this.toString = function toString(){\\n';\n    source += '    let str = \"\";\\n';\n    let str;\n    lines.forEach((line) => {\n      const end = line.beginChar + line.length;\n      str = '';\n      source += '    str += \"';\n      for (let ii = line.beginChar; ii < end; ii += 1) {\n        switch (chars[ii]) {\n          case 9:\n            str = ' ';\n            break;\n          case 10:\n            str = '\\\\n';\n            break;\n          case 13:\n            str = '\\\\r';\n            break;\n          case 34:\n            str = '\\\\\"';\n            break;\n          case 92:\n            str = '\\\\\\\\';\n            break;\n          default:\n            str = String.fromCharCode(chars[ii]);\n            break;\n        }\n        source += str;\n      }\n      source += '\";\\n';\n    });\n    source += '    return str;\\n';\n    source += '  }\\n';\n    source += '}\\n';\n    return source;\n  };\n  // Generate a grammar file object.\n  // Returns the same object as instantiating the constructor function returned by<br>\n  // `this.generateSource()`.<br>\n  this.generateObject = function generateObject(stringArg, rules, udts) {\n    const obj = {};\n    const ruleNames = [];\n    const udtNames = [];\n    const string = stringArg.slice(0);\n    obj.grammarObject = 'grammarObject';\n    rules.forEach((rule) => {\n      ruleNames.push(rule.lower);\n    });\n    ruleNames.sort();\n    if (udts.length > 0) {\n      udts.forEach((udtFunc) => {\n        udtNames.push(udtFunc.lower);\n      });\n      udtNames.sort();\n    }\n    obj.callbacks = [];\n    ruleNames.forEach((name) => {\n      obj.callbacks[name] = false;\n    });\n    if (udts.length > 0) {\n      udtNames.forEach((name) => {\n        obj.callbacks[name] = false;\n      });\n    }\n    obj.rules = rules;\n    obj.udts = udts;\n    obj.toString = function toStringFunc() {\n      return string;\n    };\n    return obj;\n  };\n};\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module does the heavy lifting for attribute generation.\nmodule.exports = (function exportRuleAttributes() {\n  const id = require('../apg-lib/identifiers');\n  const thisFile = 'rule-attributes.js';\n  let state = null;\n  function isEmptyOnly(attr) {\n    if (attr.left || attr.nested || attr.right || attr.cyclic) {\n      return false;\n    }\n    return attr.empty;\n  }\n  function isRecursive(attr) {\n    if (attr.left || attr.nested || attr.right || attr.cyclic) {\n      return true;\n    }\n    return false;\n  }\n  function isCatNested(attrs, count) {\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    /* 1. if any child is nested, CAT is nested */\n    for (i = 0; i < count; i += 1) {\n      if (attrs[i].nested) {\n        return true;\n      }\n    }\n    /* 2.) the left-most right recursive child\n               is followed by at least one non-empty child */\n    for (i = 0; i < count; i += 1) {\n      if (attrs[i].right && !attrs[i].leaf) {\n        for (j = i + 1; j < count; j += 1) {\n          if (!isEmptyOnly(attrs[j])) {\n            return true;\n          }\n        }\n      }\n    }\n    /* 3.) the right-most left recursive child\n               is preceded by at least one non-empty child */\n    for (i = count - 1; i >= 0; i -= 1) {\n      if (attrs[i].left && !attrs[i].leaf) {\n        for (j = i - 1; j >= 0; j -= 1) {\n          if (!isEmptyOnly(attrs[j])) {\n            return true;\n          }\n        }\n      }\n    }\n    /* 4. there is at lease one recursive child between\n              the left-most and right-most non-recursive, non-empty children */\n    for (i = 0; i < count; i += 1) {\n      if (!attrs[i].empty && !isRecursive(attrs[i])) {\n        for (j = i + 1; j < count; j += 1) {\n          if (isRecursive(attrs[j])) {\n            for (k = j + 1; k < count; k += 1) {\n              if (!attrs[k].empty && !isRecursive(attrs[k])) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /* none of the above */\n    return false;\n  }\n  function isCatCyclic(attrs, count) {\n    /* if all children are cyclic, CAT is cyclic */\n    for (let i = 0; i < count; i += 1) {\n      if (!attrs[i].cyclic) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function isCatLeft(attrs, count) {\n    /* if the left-most non-empty is left, CAT is left */\n    for (let i = 0; i < count; i += 1) {\n      if (attrs[i].left) {\n        return true;\n      }\n      if (!attrs[i].empty) {\n        return false;\n      }\n      /* keep looking */\n    }\n    return false; /* all left-most are empty */\n  }\n  function isCatRight(attrs, count) {\n    /* if the right-most non-empty is right, CAT is right */\n    for (let i = count - 1; i >= 0; i -= 1) {\n      if (attrs[i].right) {\n        return true;\n      }\n      if (!attrs[i].empty) {\n        return false;\n      }\n      /* keep looking */\n    }\n    return false;\n  }\n  function isCatEmpty(attrs, count) {\n    /* if all children are empty, CAT is empty */\n    for (let i = 0; i < count; i += 1) {\n      if (!attrs[i].empty) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function isCatFinite(attrs, count) {\n    /* if all children are finite, CAT is finite */\n    for (let i = 0; i < count; i += 1) {\n      if (!attrs[i].finite) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function cat(stateArg, opcodes, opIndex, iAttr) {\n    let i = 0;\n    const opCat = opcodes[opIndex];\n    const count = opCat.children.length;\n\n    /* generate an empty array of child attributes */\n    const childAttrs = [];\n    for (i = 0; i < count; i += 1) {\n      childAttrs.push(stateArg.attrGen());\n    }\n    for (i = 0; i < count; i += 1) {\n      // eslint-disable-next-line no-use-before-define\n      opEval(stateArg, opcodes, opCat.children[i], childAttrs[i]);\n    }\n    iAttr.left = isCatLeft(childAttrs, count);\n    iAttr.right = isCatRight(childAttrs, count);\n    iAttr.nested = isCatNested(childAttrs, count);\n    iAttr.empty = isCatEmpty(childAttrs, count);\n    iAttr.finite = isCatFinite(childAttrs, count);\n    iAttr.cyclic = isCatCyclic(childAttrs, count);\n  }\n  function alt(stateArg, opcodes, opIndex, iAttr) {\n    let i = 0;\n    const opAlt = opcodes[opIndex];\n    const count = opAlt.children.length;\n\n    /* generate an empty array of child attributes */\n    const childAttrs = [];\n    for (i = 0; i < count; i += 1) {\n      childAttrs.push(stateArg.attrGen());\n    }\n    for (i = 0; i < count; i += 1) {\n      // eslint-disable-next-line no-use-before-define\n      opEval(stateArg, opcodes, opAlt.children[i], childAttrs[i]);\n    }\n\n    /* if any child attribute is true, ALT is true */\n    iAttr.left = false;\n    iAttr.right = false;\n    iAttr.nested = false;\n    iAttr.empty = false;\n    iAttr.finite = false;\n    iAttr.cyclic = false;\n    for (i = 0; i < count; i += 1) {\n      if (childAttrs[i].left) {\n        iAttr.left = true;\n      }\n      if (childAttrs[i].nested) {\n        iAttr.nested = true;\n      }\n      if (childAttrs[i].right) {\n        iAttr.right = true;\n      }\n      if (childAttrs[i].empty) {\n        iAttr.empty = true;\n      }\n      if (childAttrs[i].finite) {\n        iAttr.finite = true;\n      }\n      if (childAttrs[i].cyclic) {\n        iAttr.cyclic = true;\n      }\n    }\n  }\n  function bkr(stateArg, opcodes, opIndex, iAttr) {\n    const opBkr = opcodes[opIndex];\n    if (opBkr.index >= stateArg.ruleCount) {\n      /* use UDT values */\n      iAttr.empty = stateArg.udts[opBkr.index - stateArg.ruleCount].empty;\n      iAttr.finite = true;\n    } else {\n      /* use the empty and finite values from the back referenced rule */\n      // eslint-disable-next-line no-use-before-define\n      ruleAttrsEval(stateArg, opBkr.index, iAttr);\n\n      /* however, this is a terminal node like TLS */\n      iAttr.left = false;\n      iAttr.nested = false;\n      iAttr.right = false;\n      iAttr.cyclic = false;\n    }\n  }\n\n  function opEval(stateArg, opcodes, opIndex, iAttr) {\n    stateArg.attrInit(iAttr);\n    const opi = opcodes[opIndex];\n    switch (opi.type) {\n      case id.ALT:\n        alt(stateArg, opcodes, opIndex, iAttr);\n        break;\n      case id.CAT:\n        cat(stateArg, opcodes, opIndex, iAttr);\n        break;\n      case id.REP:\n        opEval(stateArg, opcodes, opIndex + 1, iAttr);\n        if (opi.min === 0) {\n          iAttr.empty = true;\n          iAttr.finite = true;\n        }\n        break;\n      case id.RNM:\n        // eslint-disable-next-line no-use-before-define\n        ruleAttrsEval(stateArg, opcodes[opIndex].index, iAttr);\n        break;\n      case id.BKR:\n        bkr(stateArg, opcodes, opIndex, iAttr);\n        break;\n      case id.AND:\n      case id.NOT:\n      case id.BKA:\n      case id.BKN:\n        opEval(stateArg, opcodes, opIndex + 1, iAttr);\n        iAttr.empty = true;\n        break;\n      case id.TLS:\n        iAttr.empty = !opcodes[opIndex].string.length;\n        iAttr.finite = true;\n        iAttr.cyclic = false;\n        break;\n      case id.TBS:\n      case id.TRG:\n        iAttr.empty = false;\n        iAttr.finite = true;\n        iAttr.cyclic = false;\n        break;\n      case id.UDT:\n        iAttr.empty = opi.empty;\n        iAttr.finite = true;\n        iAttr.cyclic = false;\n        break;\n      case id.ABG:\n      case id.AEN:\n        iAttr.empty = true;\n        iAttr.finite = true;\n        iAttr.cyclic = false;\n        break;\n      default:\n        throw new Error(`unknown opcode type: ${opi}`);\n    }\n  }\n  // The main logic for handling rules that:\n  //  - have already be evaluated\n  //  - have not been evaluated and is the first occurrence on this branch\n  //  - second occurrence on this branch for the start rule\n  //  - second occurrence on this branch for non-start rules\n  function ruleAttrsEval(stateArg, ruleIndex, iAttr) {\n    const attri = stateArg.attrsWorking[ruleIndex];\n    if (attri.isComplete) {\n      /* just use the completed values */\n      stateArg.attrCopy(iAttr, attri);\n    } else if (!attri.isOpen) {\n      /* open the rule and traverse it */\n      attri.isOpen = true;\n      opEval(stateArg, attri.rule.opcodes, 0, iAttr);\n      /* complete this rule's attributes */\n      attri.left = iAttr.left;\n      attri.right = iAttr.right;\n      attri.nested = iAttr.nested;\n      attri.empty = iAttr.empty;\n      attri.finite = iAttr.finite;\n      attri.cyclic = iAttr.cyclic;\n      attri.leaf = false;\n      attri.isOpen = false;\n      attri.isComplete = true;\n    } else if (ruleIndex === stateArg.startRule) {\n      /* use recursive leaf values */\n      if (ruleIndex === stateArg.startRule) {\n        iAttr.left = true;\n        iAttr.right = true;\n        iAttr.cyclic = true;\n        iAttr.leaf = true;\n      }\n    } else {\n      /* non-start rule terminal leaf */\n      iAttr.finite = true;\n    }\n  }\n  // The main driver for the attribute generation.\n  const ruleAttributes = (stateArg) => {\n    state = stateArg;\n    let i = 0;\n    let j = 0;\n    const iAttr = state.attrGen();\n    for (i = 0; i < state.ruleCount; i += 1) {\n      /* initialize working attributes */\n      for (j = 0; j < state.ruleCount; j += 1) {\n        state.attrInit(state.attrsWorking[j]);\n      }\n      state.startRule = i;\n      ruleAttrsEval(state, i, iAttr);\n\n      /* save off the working attributes for this rule */\n      state.attrCopy(state.attrs[i], state.attrsWorking[i]);\n    }\n    state.attributesComplete = true;\n    let attri = null;\n    for (i = 0; i < state.ruleCount; i += 1) {\n      attri = state.attrs[i];\n      if (attri.left || !attri.finite || attri.cyclic) {\n        const temp = state.attrGen(attri.rule);\n        state.attrCopy(temp, attri);\n        state.attrsErrors.push(temp);\n        state.attrsErrorCount += 1;\n      }\n    }\n  };\n  const truth = (val) => (val ? 't' : 'f');\n  const tError = (val) => (val ? 'e' : 'f');\n  const fError = (val) => (val ? 't' : 'e');\n  const showAttr = (seq, index, attr, dep) => {\n    let str = `${seq}:${index}:`;\n    str += `${tError(attr.left)} `;\n    str += `${truth(attr.nested)} `;\n    str += `${truth(attr.right)} `;\n    str += `${tError(attr.cyclic)} `;\n    str += `${fError(attr.finite)} `;\n    str += `${truth(attr.empty)}:`;\n    str += `${state.typeToString(dep.recursiveType)}:`;\n    str += dep.recursiveType === id.ATTR_MR ? dep.groupNumber : '-';\n    str += `:${attr.rule.name}\\n`;\n    return str;\n  };\n\n  const showLegend = () => {\n    let str = 'LEGEND - t=true, f=false, e=error\\n';\n    str += 'sequence:rule index:left nested right cyclic finite empty:type:group number:rule name\\n';\n    return str;\n  };\n  const showAttributeErrors = () => {\n    let attri = null;\n    let depi = null;\n    let str = '';\n    str += 'RULE ATTRIBUTES WITH ERRORS\\n';\n    str += showLegend();\n    if (state.attrsErrorCount) {\n      for (let i = 0; i < state.attrsErrorCount; i += 1) {\n        attri = state.attrsErrors[i];\n        depi = state.ruleDeps[attri.rule.index];\n        str += showAttr(i, attri.rule.index, attri, depi);\n      }\n    } else {\n      str += '<none>\\n';\n    }\n    return str;\n  };\n\n  const show = (type) => {\n    let i = 0;\n    let ii = 0;\n    let attri = null;\n    let depi = null;\n    let str = '';\n    let { ruleIndexes } = state;\n    // let udtIndexes = state.udtIndexes;\n    if (type === 97) {\n      ruleIndexes = state.ruleAlphaIndexes;\n      // udtIndexes = state.udtAlphaIndexes;\n    } else if (type === 116) {\n      ruleIndexes = state.ruleTypeIndexes;\n      // udtIndexes = state.udtAlphaIndexes;\n    }\n    /* show all attributes */\n    for (i = 0; i < state.ruleCount; i += 1) {\n      ii = ruleIndexes[i];\n      attri = state.attrs[ii];\n      depi = state.ruleDeps[ii];\n      str += showAttr(i, ii, attri, depi);\n    }\n    return str;\n  };\n\n  // Display the rule attributes.\n  // - order\n  //      - \"index\" or \"i\", index order (default)\n  //      - \"alpha\" or \"a\", alphabetical order\n  //      - \"type\" or \"t\", ordered by type (alphabetical within each type/group)\n  //      - none of above, index order (default)\n  const showAttributes = (order = 'index') => {\n    if (!state.attributesComplete) {\n      throw new Error(`${thisFile}:showAttributes: attributes not available`);\n    }\n    let str = '';\n    const leader = 'RULE ATTRIBUTES\\n';\n    if (order.charCodeAt(0) === 97) {\n      str += 'alphabetical by rule name\\n';\n      str += leader;\n      str += showLegend();\n      str += show(97);\n    } else if (order.charCodeAt(0) === 116) {\n      str += 'ordered by rule type\\n';\n      str += leader;\n      str += showLegend();\n      str += show(116);\n    } else {\n      str += 'ordered by rule index\\n';\n      str += leader;\n      str += showLegend();\n      str += show();\n    }\n    return str;\n  };\n\n  /* Destructuring assignment - see MDN Web Docs */\n  return { ruleAttributes, showAttributes, showAttributeErrors };\n})();\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// Determine rule dependencies and types.\n// For each rule, determine which other rules it refers to\n// and which of the other rules refer back to it.\n//\n// Rule types are:\n//  - non-recursive - the rule never refers to itself, even indirectly\n//  - recursive - the rule refers to itself, possibly indirectly\n//  - mutually-recursive - belongs to a group of two or more rules, each of which refers to every other rule in the group, including itself.\nmodule.exports = (() => {\n  const id = require('../apg-lib/identifiers');\n  let state = null; /* keep a global reference to the state for the show functions */\n\n  /* scan the opcodes of the indexed rule and discover which rules it references and which rule refer back to it */\n  const scan = (ruleCount, ruleDeps, index, isScanned) => {\n    let i = 0;\n    let j = 0;\n    const rdi = ruleDeps[index];\n    isScanned[index] = true;\n    const op = rdi.rule.opcodes;\n    for (i = 0; i < op.length; i += 1) {\n      const opi = op[i];\n      if (opi.type === id.RNM) {\n        rdi.refersTo[opi.index] = true;\n        if (!isScanned[opi.index]) {\n          scan(ruleCount, ruleDeps, opi.index, isScanned);\n        }\n        for (j = 0; j < ruleCount; j += 1) {\n          if (ruleDeps[opi.index].refersTo[j]) {\n            rdi.refersTo[j] = true;\n          }\n        }\n      } else if (opi.type === id.UDT) {\n        rdi.refersToUdt[opi.index] = true;\n      } else if (opi.type === id.BKR) {\n        if (opi.index < ruleCount) {\n          rdi.refersTo[opi.index] = true;\n          if (!isScanned[opi.index]) {\n            scan(ruleCount, ruleDeps, opi.index, isScanned);\n          }\n        } else {\n          rdi.refersToUdt[ruleCount - opi.index] = true;\n        }\n      }\n    }\n  };\n  // Determine the rule dependencies, types and mutually recursive groups.\n  const ruleDependencies = (stateArg) => {\n    state = stateArg; /* make it global */\n    let i = 0;\n    let j = 0;\n    let groupCount = 0;\n    let rdi = null;\n    let rdj = null;\n    let newGroup = false;\n    state.dependenciesComplete = false;\n\n    /* make a working array of rule scanned markers */\n    const isScanned = state.falseArray(state.ruleCount);\n\n    /* discover the rule dependencies */\n    for (i = 0; i < state.ruleCount; i += 1) {\n      state.falsifyArray(isScanned);\n      scan(state.ruleCount, state.ruleDeps, i, isScanned);\n    }\n    /* discover all rules referencing each rule */\n    for (i = 0; i < state.ruleCount; i += 1) {\n      for (j = 0; j < state.ruleCount; j += 1) {\n        if (i !== j) {\n          if (state.ruleDeps[j].refersTo[i]) {\n            state.ruleDeps[i].referencedBy[j] = true;\n          }\n        }\n      }\n    }\n    /* find the non-recursive and recursive types */\n    for (i = 0; i < state.ruleCount; i += 1) {\n      state.ruleDeps[i].recursiveType = id.ATTR_N;\n      if (state.ruleDeps[i].refersTo[i]) {\n        state.ruleDeps[i].recursiveType = id.ATTR_R;\n      }\n    }\n\n    /* find the mutually-recursive groups, if any */\n    groupCount = -1;\n    for (i = 0; i < state.ruleCount; i += 1) {\n      rdi = state.ruleDeps[i];\n      if (rdi.recursiveType === id.ATTR_R) {\n        newGroup = true;\n        for (j = 0; j < state.ruleCount; j += 1) {\n          if (i !== j) {\n            rdj = state.ruleDeps[j];\n            if (rdj.recursiveType === id.ATTR_R) {\n              if (rdi.refersTo[j] && rdj.refersTo[i]) {\n                if (newGroup) {\n                  groupCount += 1;\n                  rdi.recursiveType = id.ATTR_MR;\n                  rdi.groupNumber = groupCount;\n                  newGroup = false;\n                }\n                rdj.recursiveType = id.ATTR_MR;\n                rdj.groupNumber = groupCount;\n              }\n            }\n          }\n        }\n      }\n    }\n    state.isMutuallyRecursive = groupCount > -1;\n\n    /* sort the rules/UDTS */\n    state.ruleAlphaIndexes.sort(state.compRulesAlpha);\n    state.ruleTypeIndexes.sort(state.compRulesAlpha);\n    state.ruleTypeIndexes.sort(state.compRulesType);\n    if (state.isMutuallyRecursive) {\n      state.ruleTypeIndexes.sort(state.compRulesGroup);\n    }\n    if (state.udtCount) {\n      state.udtAlphaIndexes.sort(state.compUdtsAlpha);\n    }\n\n    state.dependenciesComplete = true;\n  };\n  const show = (type = null) => {\n    let i = 0;\n    let j = 0;\n    let count = 0;\n    let startSeg = 0;\n    const maxRule = state.ruleCount - 1;\n    const maxUdt = state.udtCount - 1;\n    const lineLength = 100;\n    let str = '';\n    let pre = '';\n    const toArrow = '=> ';\n    const byArrow = '<= ';\n    let first = false;\n    let rdi = null;\n    let { ruleIndexes } = state;\n    let { udtIndexes } = state;\n    if (type === 97) {\n      ruleIndexes = state.ruleAlphaIndexes;\n      udtIndexes = state.udtAlphaIndexes;\n    } else if (type === 116) {\n      ruleIndexes = state.ruleTypeIndexes;\n      udtIndexes = state.udtAlphaIndexes;\n    }\n    for (i = 0; i < state.ruleCount; i += 1) {\n      rdi = state.ruleDeps[ruleIndexes[i]];\n      pre = `${ruleIndexes[i]}:${state.typeToString(rdi.recursiveType)}:`;\n      if (state.isMutuallyRecursive) {\n        pre += rdi.groupNumber > -1 ? rdi.groupNumber : '-';\n        pre += ':';\n      }\n      pre += ' ';\n      str += `${pre + state.rules[ruleIndexes[i]].name}\\n`;\n      first = true;\n      count = 0;\n      startSeg = str.length;\n      str += pre;\n      for (j = 0; j < state.ruleCount; j += 1) {\n        if (rdi.refersTo[ruleIndexes[j]]) {\n          if (first) {\n            str += toArrow;\n            first = false;\n            str += state.ruleDeps[ruleIndexes[j]].rule.name;\n          } else {\n            str += `, ${state.ruleDeps[ruleIndexes[j]].rule.name}`;\n          }\n          count += 1;\n        }\n        if (str.length - startSeg > lineLength && j !== maxRule) {\n          str += `\\n${pre}${toArrow}`;\n          startSeg = str.length;\n        }\n      }\n      if (state.udtCount) {\n        for (j = 0; j < state.udtCount; j += 1) {\n          if (rdi.refersToUdt[udtIndexes[j]]) {\n            if (first) {\n              str += toArrow;\n              first = false;\n              str += state.udts[udtIndexes[j]].name;\n            } else {\n              str += `, ${state.udts[udtIndexes[j]].name}`;\n            }\n            count += 1;\n          }\n          if (str.length - startSeg > lineLength && j !== maxUdt) {\n            str += `\\n${pre}${toArrow}`;\n            startSeg = str.length;\n          }\n        }\n      }\n      if (count === 0) {\n        str += '=> <none>\\n';\n      }\n      if (first === false) {\n        str += '\\n';\n      }\n      first = true;\n      count = 0;\n      startSeg = str.length;\n      str += pre;\n      for (j = 0; j < state.ruleCount; j += 1) {\n        if (rdi.referencedBy[ruleIndexes[j]]) {\n          if (first) {\n            str += byArrow;\n            first = false;\n            str += state.ruleDeps[ruleIndexes[j]].rule.name;\n          } else {\n            str += `, ${state.ruleDeps[ruleIndexes[j]].rule.name}`;\n          }\n          count += 1;\n        }\n        if (str.length - startSeg > lineLength && j !== maxRule) {\n          str += `\\n${pre}${toArrow}`;\n          startSeg = str.length;\n        }\n      }\n      if (count === 0) {\n        str += '<= <none>\\n';\n      }\n      if (first === false) {\n        str += '\\n';\n      }\n      str += '\\n';\n    }\n    return str;\n  };\n  // Display the rule dependencies.\n  // - order\n  //      - \"index\" or \"i\", index order (default)\n  //      - \"alpha\" or \"a\", alphabetical order\n  //      - \"type\" or \"t\", ordered by type (alphabetical within each type/group)\n  //      - none of above, index order (default)\n  const showRuleDependencies = (order = 'index') => {\n    let str = 'RULE DEPENDENCIES(index:type:[group number:])\\n';\n    str += '=> refers to rule names\\n';\n    str += '<= referenced by rule names\\n';\n    if (!state.dependenciesComplete) {\n      return str;\n    }\n\n    if (order.charCodeAt(0) === 97) {\n      str += 'alphabetical by rule name\\n';\n      str += show(97);\n    } else if (order.charCodeAt(0) === 116) {\n      str += 'ordered by rule type\\n';\n      str += show(116);\n    } else {\n      str += 'ordered by rule index\\n';\n      str += show(null);\n    }\n    return str;\n  };\n\n  /* Destructuring assignment - see MDN Web Docs */\n  return { ruleDependencies, showRuleDependencies };\n})();\n","/* eslint-disable class-methods-use-this */\n/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// Attributes Validation\n//\n// It is well known that recursive-descent parsers will fail if a rule is left recursive.\n// Besides left recursion, there are a couple of other fatal attributes that need to be disclosed as well.\n// There are several non-fatal attributes that are of interest also.\n// This module will determine six different attributes listed here with simple examples.\n//\n// **fatal attributes**<br>\n// left recursion<br>\n// S = S \"x\" / \"y\"\n//\n// cyclic<br>\n// S = S\n//\n// infinite<br>\n// S = \"y\" S\n//\n// **non-fatal attributes** (but nice to know)<br>\n// nested recursion<br>\n// S = \"a\" S \"b\" / \"y\"\n//\n// right recursion<br>\n// S = \"x\" S / \"y\"\n//\n// empty string<br>\n// S = \"x\" S / \"\"\n//\n// Note that these are “aggregate” attributes, in that if the attribute is true it only means that it can be true,\n// not that it will always be true for every input string.\n// In the simple examples above the attributes may be obvious and definite – always true or false.\n// However, for a large grammar with possibly hundreds of rules and parse tree branches,\n// it can be obscure which branches lead to which attributes.\n// Furthermore, different input strings will lead the parser down different branches.\n// One input string may parse perfectly while another will hit a left-recursive branch and bottom out the call stack.\n//\n// It is for this reason that the APG parser generator computes these attributes.\n// When using the API the attributes call is optional but generating a parser without checking the attributes - proceed at your own peril.\n//\n// Additionally, the attribute phase will identify rule dependencies and mutually-recursive groups. For example,\n//\n// S = \"a\" A \"b\" / \"y\"<br>\n// A = \"x\"\n//\n// S is dependent on A but A is not dependent on S.\n//\n// S = \"a\" A \"b\" / \"c\"<br>\n// A = \"x\" S \"y\" / \"z\"\n//\n// S and A are dependent on one another and are mutually recursive.\nmodule.exports = (function exportAttributes() {\n  const id = require('../apg-lib/identifiers');\n  const { ruleAttributes, showAttributes, showAttributeErrors } = require('./rule-attributes');\n  const { ruleDependencies, showRuleDependencies } = require('./rule-dependencies');\n  class State {\n    constructor(rules, udts) {\n      this.rules = rules;\n      this.udts = udts;\n      this.ruleCount = rules.length;\n      this.udtCount = udts.length;\n      this.startRule = 0;\n      this.dependenciesComplete = false;\n      this.attributesComplete = false;\n      this.isMutuallyRecursive = false;\n      this.ruleIndexes = this.indexArray(this.ruleCount);\n      this.ruleAlphaIndexes = this.indexArray(this.ruleCount);\n      this.ruleTypeIndexes = this.indexArray(this.ruleCount);\n      this.udtIndexes = this.indexArray(this.udtCount);\n      this.udtAlphaIndexes = this.indexArray(this.udtCount);\n      this.attrsErrorCount = 0;\n      this.attrs = [];\n      this.attrsErrors = [];\n      this.attrsWorking = [];\n      this.ruleDeps = [];\n      for (let i = 0; i < this.ruleCount; i += 1) {\n        this.attrs.push(this.attrGen(this.rules[i]));\n        this.attrsWorking.push(this.attrGen(this.rules[i]));\n        this.ruleDeps.push(this.rdGen(rules[i], this.ruleCount, this.udtCount));\n      }\n      this.compRulesAlpha = this.compRulesAlpha.bind(this);\n      this.compUdtsAlpha = this.compUdtsAlpha.bind(this);\n      this.compRulesType = this.compRulesType.bind(this);\n      this.compRulesGroup = this.compRulesGroup.bind(this);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    attrGen(rule) {\n      return {\n        left: false,\n        nested: false,\n        right: false,\n        empty: false,\n        finite: false,\n        cyclic: false,\n        leaf: false,\n        isOpen: false,\n        isComplete: false,\n        rule,\n      };\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    attrInit(attr) {\n      attr.left = false;\n      attr.nested = false;\n      attr.right = false;\n      attr.empty = false;\n      attr.finite = false;\n      attr.cyclic = false;\n      attr.leaf = false;\n      attr.isOpen = false;\n      attr.isComplete = false;\n    }\n\n    attrCopy(dst, src) {\n      dst.left = src.left;\n      dst.nested = src.nested;\n      dst.right = src.right;\n      dst.empty = src.empty;\n      dst.finite = src.finite;\n      dst.cyclic = src.cyclic;\n      dst.leaf = src.leaf;\n      dst.isOpen = src.isOpen;\n      dst.isComplete = src.isComplete;\n      dst.rule = src.rule;\n    }\n\n    rdGen(rule, ruleCount, udtCount) {\n      const ret = {\n        rule,\n        recursiveType: id.ATTR_N,\n        groupNumber: -1,\n        refersTo: this.falseArray(ruleCount),\n        refersToUdt: this.falseArray(udtCount),\n        referencedBy: this.falseArray(ruleCount),\n      };\n      return ret;\n    }\n\n    typeToString(recursiveType) {\n      switch (recursiveType) {\n        case id.ATTR_N:\n          return ' N';\n        case id.ATTR_R:\n          return ' R';\n        case id.ATTR_MR:\n          return 'MR';\n        default:\n          return 'UNKNOWN';\n      }\n    }\n\n    falseArray(length) {\n      const ret = [];\n      if (length > 0) {\n        for (let i = 0; i < length; i += 1) {\n          ret.push(false);\n        }\n      }\n      return ret;\n    }\n\n    falsifyArray(a) {\n      for (let i = 0; i < a.length; i += 1) {\n        a[i] = false;\n      }\n    }\n\n    indexArray(length) {\n      const ret = [];\n      if (length > 0) {\n        for (let i = 0; i < length; i += 1) {\n          ret.push(i);\n        }\n      }\n      return ret;\n    }\n\n    compRulesAlpha(left, right) {\n      if (this.rules[left].lower < this.rules[right].lower) {\n        return -1;\n      }\n      if (this.rules[left].lower > this.rules[right].lower) {\n        return 1;\n      }\n      return 0;\n    }\n\n    compUdtsAlpha(left, right) {\n      if (this.udts[left].lower < this.udts[right].lower) {\n        return -1;\n      }\n      if (this.udts[left].lower > this.udts[right].lower) {\n        return 1;\n      }\n      return 0;\n    }\n\n    compRulesType(left, right) {\n      if (this.ruleDeps[left].recursiveType < this.ruleDeps[right].recursiveType) {\n        return -1;\n      }\n      if (this.ruleDeps[left].recursiveType > this.ruleDeps[right].recursiveType) {\n        return 1;\n      }\n      return 0;\n    }\n\n    compRulesGroup(left, right) {\n      if (this.ruleDeps[left].recursiveType === id.ATTR_MR && this.ruleDeps[right].recursiveType === id.ATTR_MR) {\n        if (this.ruleDeps[left].groupNumber < this.ruleDeps[right].groupNumber) {\n          return -1;\n        }\n        if (this.ruleDeps[left].groupNumber > this.ruleDeps[right].groupNumber) {\n          return 1;\n        }\n      }\n      return 0;\n    }\n  }\n  // eslint-disable-next-line no-unused-vars\n  const attributes = function attributes(rules = [], udts = [], lineMap = [], errors = []) {\n    // let i = 0;\n    // Initialize the state. The state of the computation get passed around to multiple functions in multiple files.\n    const state = new State(rules, udts);\n\n    // Determine all rule dependencies\n    //  - which rules each rule refers to\n    //  - which rules reference each rule\n    ruleDependencies(state);\n\n    // Determine the attributes for each rule.\n    ruleAttributes(state);\n    if (state.attrsErrorCount) {\n      errors.push({ line: 0, char: 0, msg: `${state.attrsErrorCount} attribute errors` });\n    }\n\n    // Return the number of attribute errors to the caller.\n    return state.attrsErrorCount;\n  };\n\n  /* Destructuring assignment - see MDN Web Docs */\n  return { attributes, showAttributes, showAttributeErrors, showRuleDependencies };\n})();\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\nmodule.exports = (function exfn() {\n  const thisFileName = 'show-rules.js';\n  // Display the rules.\n  // This function may be called before the attributes calculation.\n  // Sorting is done independently from the attributes.\n  // - order\n  //      - \"index\" or \"i\", index order (default)\n  //      - \"alpha\" or \"a\", alphabetical order\n  //      - none of above, index order (default)\n  const showRules = function showRules(rulesIn = [], udtsIn = [], order = 'index') {\n    const thisFuncName = 'showRules';\n    let alphaArray = [];\n    let udtAlphaArray = [];\n    const indexArray = [];\n    const udtIndexArray = [];\n    const rules = rulesIn;\n    const udts = udtsIn;\n    const ruleCount = rulesIn.length;\n    const udtCount = udtsIn.length;\n    let str = 'RULE/UDT NAMES';\n    let i;\n    function compRulesAlpha(left, right) {\n      if (rules[left].lower < rules[right].lower) {\n        return -1;\n      }\n      if (rules[left].lower > rules[right].lower) {\n        return 1;\n      }\n      return 0;\n    }\n    function compUdtsAlpha(left, right) {\n      if (udts[left].lower < udts[right].lower) {\n        return -1;\n      }\n      if (udts[left].lower > udts[right].lower) {\n        return 1;\n      }\n      return 0;\n    }\n    if (!(Array.isArray(rulesIn) && rulesIn.length)) {\n      throw new Error(`${thisFileName}:${thisFuncName}: rules arg must be array with length > 0`);\n    }\n    if (!Array.isArray(udtsIn)) {\n      throw new Error(`${thisFileName}:${thisFuncName}: udts arg must be array`);\n    }\n\n    for (i = 0; i < ruleCount; i += 1) {\n      indexArray.push(i);\n    }\n    alphaArray = indexArray.slice(0);\n    alphaArray.sort(compRulesAlpha);\n    if (udtCount) {\n      for (i = 0; i < udtCount; i += 1) {\n        udtIndexArray.push(i);\n      }\n      udtAlphaArray = udtIndexArray.slice(0);\n      udtAlphaArray.sort(compUdtsAlpha);\n    }\n    if (order.charCodeAt(0) === 97) {\n      str += ' - alphabetical by rule/UDT name\\n';\n      for (i = 0; i < ruleCount; i += 1) {\n        str += `${i}: ${alphaArray[i]}: ${rules[alphaArray[i]].name}\\n`;\n      }\n      if (udtCount) {\n        for (i = 0; i < udtCount; i += 1) {\n          str += `${i}: ${udtAlphaArray[i]}: ${udts[udtAlphaArray[i]].name}\\n`;\n        }\n      }\n    } else {\n      str += ' - ordered by rule/UDT index\\n';\n      for (i = 0; i < ruleCount; i += 1) {\n        str += `${i}: ${rules[i].name}\\n`;\n      }\n      if (udtCount) {\n        for (i = 0; i < udtCount; i += 1) {\n          str += `${i}: ${udts[i].name}\\n`;\n        }\n      }\n    }\n    return str;\n  };\n  return showRules;\n})();\n","/*  *************************************************************************************\n *   copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved\n *     license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)\n *   ********************************************************************************* */\n// This module is Application Programming Interface (API) for **APG** - the ABNF Parser Generator.\n//\n// *Note on teminology.*\n// APG is a parser generator.\n// However, it really only generates a \"grammar object\" (see below) from the defining SABNF grammar.\n// The generated parser is incomplete at this stage.\n// Remaining, it is the job of the user to develop the generated parser from the grammar object and the **APG** Library (**apg-lib**).\n//\n// The following terminology my help clear up any confusion between the idea of a \"generated parser\" versus a \"generated grammar object\".\n\n// - The generating parser: **APG** is an **APG** parser (yes, there is a circular dependence between **apg-api** and **apg-lib**). We'll call it the generating parser.\n// - The target parser: **APG**'s goal is to generate a parser. We'll call it the target parser.\n// - The target grammar: this is the (ASCII) SABNF grammar defining the target parser.\n// - The target grammar object: **APG** parses the SABNF grammar and generates the JavaScript source for a target grammar object constructor function\n// and/or an actual grammar object.\n// - The final target parser: The user then develops the final target parser using the generated target grammar\n// object and the **APG** parsing library, **apg-lib**.\n// Throws execeptions on fatal errors.\n//\n// src: the input SABNF grammar<br>\n// may be one of:\n// - Buffer of bytes\n// - JavaScript string\n// - Array of integer character codes\nmodule.exports = function api(src) {\n  const thisFileName = 'api.js: ';\n  const thisObject = this;\n\n  /* PRIVATE PROPERTIES */\n  const apglib = require('../apg-lib/node-exports');\n  const converter = require('../apg-conv-api/converter');\n  const scanner = require('./scanner');\n  const parser = new (require('./parser'))();\n  const { attributes, showAttributes, showAttributeErrors, showRuleDependencies } = require('./attributes');\n  const showRules = require('./show-rules');\n\n  /* PRIVATE MEMBERS (FUNCTIONS) */\n  /* Convert a phrase (array of character codes) to HTML. */\n  const abnfToHtml = function abnfToHtml(chars, beg, len) {\n    const NORMAL = 0;\n    const CONTROL = 1;\n    const INVALID = 2;\n    const CONTROL_BEG = `<span class=\"${apglib.style.CLASS_CTRLCHAR}\">`;\n    const CONTROL_END = '</span>';\n    const INVALID_BEG = `<span class=\"${apglib.style.CLASS_NOMATCH}\">`;\n    const INVALID_END = '</span>';\n    let end;\n    let html = '';\n    const TRUE = true;\n    while (TRUE) {\n      if (!Array.isArray(chars) || chars.length === 0) {\n        break;\n      }\n      if (typeof beg !== 'number') {\n        throw new Error('abnfToHtml: beg must be type number');\n      }\n      if (beg >= chars.length) {\n        break;\n      }\n      if (typeof len !== 'number' || beg + len >= chars.length) {\n        end = chars.length;\n      } else {\n        end = beg + len;\n      }\n      let state = NORMAL;\n      for (let i = beg; i < end; i += 1) {\n        const ch = chars[i];\n        if (ch >= 32 && ch <= 126) {\n          /* normal - printable ASCII characters */\n          if (state === CONTROL) {\n            html += CONTROL_END;\n            state = NORMAL;\n          } else if (state === INVALID) {\n            html += INVALID_END;\n            state = NORMAL;\n          }\n          /* handle reserved HTML entity characters */\n          switch (ch) {\n            case 32:\n              html += '&nbsp;';\n              break;\n            case 60:\n              html += '&lt;';\n              break;\n            case 62:\n              html += '&gt;';\n              break;\n            case 38:\n              html += '&amp;';\n              break;\n            case 34:\n              html += '&quot;';\n              break;\n            case 39:\n              html += '&#039;';\n              break;\n            case 92:\n              html += '&#092;';\n              break;\n            default:\n              html += String.fromCharCode(ch);\n              break;\n          }\n        } else if (ch === 9 || ch === 10 || ch === 13) {\n          /* control characters */\n          if (state === NORMAL) {\n            html += CONTROL_BEG;\n            state = CONTROL;\n          } else if (state === INVALID) {\n            html += INVALID_END + CONTROL_BEG;\n            state = CONTROL;\n          }\n          if (ch === 9) {\n            html += 'TAB';\n          }\n          if (ch === 10) {\n            html += 'LF';\n          }\n          if (ch === 13) {\n            html += 'CR';\n          }\n        } else {\n          /* invalid characters */\n          if (state === NORMAL) {\n            html += INVALID_BEG;\n            state = INVALID;\n          } else if (state === CONTROL) {\n            html += CONTROL_END + INVALID_BEG;\n            state = INVALID;\n          }\n          /* display character as hexadecimal value */\n          html += `\\\\x${apglib.utils.charToHex(ch)}`;\n        }\n      }\n      if (state === INVALID) {\n        html += INVALID_END;\n      }\n      if (state === CONTROL) {\n        html += CONTROL_END;\n      }\n      break;\n    }\n    return html;\n  };\n  /* Convert a phrase (array of character codes) to ASCII text. */\n  const abnfToAscii = function abnfToAscii(chars, beg, len) {\n    let str = '';\n    for (let i = beg; i < beg + len; i += 1) {\n      const ch = chars[i];\n      if (ch >= 32 && ch <= 126) {\n        str += String.fromCharCode(ch);\n      } else {\n        switch (ch) {\n          case 9:\n            str += '\\\\t';\n            break;\n          case 10:\n            str += '\\\\n';\n            break;\n          case 13:\n            str += '\\\\r';\n            break;\n          default:\n            str += '\\\\unknown';\n            break;\n        }\n      }\n    }\n    return str;\n  };\n  /* translate lines (SABNF grammar) to ASCII text */\n  const linesToAscii = function linesToAscii(lines) {\n    let str = 'Annotated Input Grammar';\n    lines.forEach((val) => {\n      str += '\\n';\n      str += `line no: ${val.lineNo}`;\n      str += ` : char index: ${val.beginChar}`;\n      str += ` : length: ${val.length}`;\n      str += ` : abnf: ${abnfToAscii(thisObject.chars, val.beginChar, val.length)}`;\n    });\n    str += '\\n';\n    return str;\n  };\n  /* translate lines (SABNF grammar) to HTML */\n  const linesToHtml = function linesToHtml(lines) {\n    let html = '';\n    html += `<table class=\"${apglib.style.CLASS_GRAMMAR}\">\\n`;\n    const title = 'Annotated Input Grammar';\n    html += `<caption>${title}</caption>\\n`;\n    html += '<tr>';\n    html += '<th>line<br>no.</th><th>first<br>char</th><th><br>length</th><th><br>text</th>';\n    html += '</tr>\\n';\n    lines.forEach((val) => {\n      html += '<tr>';\n      html += `<td>${val.lineNo}`;\n      html += `</td><td>${val.beginChar}`;\n      html += `</td><td>${val.length}`;\n      html += `</td><td>${abnfToHtml(thisObject.chars, val.beginChar, val.length)}`;\n      html += '</td>';\n      html += '</tr>\\n';\n    });\n\n    html += '</table>\\n';\n    return html;\n  };\n  /* Format the error messages to HTML, for page display. */\n  const errorsToHtml = function errorsToHtml(errors, lines, chars, title) {\n    const [style] = apglib;\n    let html = '';\n    const errorArrow = `<span class=\"${style.CLASS_NOMATCH}\">&raquo;</span>`;\n    html += `<p><table class=\"${style.CLASS_GRAMMAR}\">\\n`;\n    if (title && typeof title === 'string') {\n      html += `<caption>${title}</caption>\\n`;\n    }\n    html += '<tr><th>line<br>no.</th><th>line<br>offset</th><th>error<br>offset</th><th><br>text</th></tr>\\n';\n    errors.forEach((val) => {\n      let line;\n      let relchar;\n      let beg;\n      let end;\n      let text;\n      let prefix = '';\n      let suffix = '';\n      if (lines.length === 0) {\n        text = errorArrow;\n        relchar = 0;\n      } else {\n        line = lines[val.line];\n        beg = line.beginChar;\n        if (val.char > beg) {\n          prefix = abnfToHtml(chars, beg, val.char - beg);\n        }\n        beg = val.char;\n        end = line.beginChar + line.length;\n        if (beg < end) {\n          suffix = abnfToHtml(chars, beg, end - beg);\n        }\n        text = prefix + errorArrow + suffix;\n        relchar = val.char - line.beginChar;\n        html += '<tr>';\n        html += `<td>${val.line}</td><td>${line.beginChar}</td><td>${relchar}</td><td>${text}</td>`;\n        html += '</tr>\\n';\n        html += '<tr>';\n        html += `<td colspan=\"3\"></td><td>&uarr;:&nbsp;${apglib.utils.stringToAsciiHtml(val.msg)}</td>`;\n        html += '</tr>\\n';\n      }\n    });\n    html += '</table></p>\\n';\n    return html;\n  };\n  /* Display an array of errors in ASCII text */\n  const errorsToAscii = function errorsToAscii(errors, lines, chars) {\n    let str;\n    let line;\n    let beg;\n    let len;\n    str = '';\n    errors.forEach((error) => {\n      line = lines[error.line];\n      str += `${line.lineNo}: `;\n      str += `${line.beginChar}: `;\n      str += `${error.char - line.beginChar}: `;\n      beg = line.beginChar;\n      len = error.char - line.beginChar;\n      str += abnfToAscii(chars, beg, len);\n      str += ' >> ';\n      beg = error.char;\n      len = line.beginChar + line.length - error.char;\n      str += abnfToAscii(chars, beg, len);\n      str += '\\n';\n      str += `${line.lineNo}: `;\n      str += `${line.beginChar}: `;\n      str += `${error.char - line.beginChar}: `;\n      str += 'error: ';\n      str += error.msg;\n      str += '\\n';\n    });\n    return str;\n  };\n  let isScanned = false;\n  let isParsed = false;\n  let isTranslated = false;\n  let haveAttributes = false;\n  let attributeErrors = 0;\n  let lineMap;\n\n  /* PUBLIC PROPERTIES */\n  // The input SABNF grammar as a JavaScript string.\n  // this.sabnf;\n  // The input SABNF grammar as an array of character codes.\n  // this.chars;\n  // An array of line objects, defining each line of the input SABNF grammar\n  // - lineNo : the zero-based line number\n  // - beginChar : offset (into `this.chars`) of the first character in the line\n  // - length : the number of characters in the line\n  // - textLength : the number of characters of text in the line, excluding the line ending characters\n  // - endType : \"CRLF\", \"LF\", \"CR\" or \"none\" if the last line has no line ending characters\n  // - invalidChars : `true` if the line contains invalid characters, `false` otherwise\n  // this.lines;\n  // An array of rule names and data.\n  // - name : the rule name\n  // - lower : the rule name in lower case\n  // - index : the index of the rule (ordered by appearance in SABNF grammar)\n  // - isBkr : `true` if this rule has been back referenced, `false` otherwise\n  // - opcodes : array of opcodes for this rule\n  // - attrs : the rule attributes\n  // - ctrl : system data\n  // this.rules;\n  // An array of UDT names and data.\n  // this.udts;\n  // An array of errors, if any.\n  // - line : the line number containing the error\n  // - char : the character offset of the error\n  // - msg : the error message\n  this.errors = [];\n\n  /* CONSTRUCTOR */\n  if (Buffer.isBuffer(src)) {\n    this.chars = converter.decode('BINARY', src);\n  } else if (Array.isArray(src)) {\n    this.chars = src.slice();\n  } else if (typeof src === 'string') {\n    this.chars = converter.decode('STRING', src);\n  } else {\n    throw new Error(`${thisFileName}input source is not a string, byte Buffer or character array`);\n  }\n  this.sabnf = converter.encode('STRING', this.chars);\n\n  /* PUBLIC MEMBERS (FUNCTIONS) */\n  // Scan the input SABNF grammar for invalid characters and catalog the lines via `this.lines`.\n  // - strict : (optional) if `true`, all lines, including the last must end with CRLF (\\r\\n),\n  // if `false` (in any JavaScript sense) then line endings may be any mix of CRLF, LF, CR, or end-of-file.\n  // - trace (*) : (optional) a parser trace object, which will trace the parser that does the scan\n  this.scan = function scan(strict, trace) {\n    this.lines = scanner(this.chars, this.errors, strict, trace);\n    isScanned = true;\n  };\n  // Parse the input SABNF grammar for correct syntax.\n  // - strict : (optional) if `true`, the input grammar must be strict ABNF, conforming to [RFC 5234](https://tools.ietf.org/html/rfc5234)\n  // and [RFC 7405](https://tools.ietf.org/html/rfc7405). No superset features allowed.\n  // - trace (\\*) : (optional) a parser trace object, which will trace the syntax parser\n  //\n  // <i>(*)NOTE: the trace option was used primarily during development.\n  // Error detection and reporting is now fairly robust and tracing should be unnecessary. Use at your own peril.</i>\n  this.parse = function parse(strict, trace) {\n    if (!isScanned) {\n      throw new Error(`${thisFileName}grammar not scanned`);\n    }\n    parser.syntax(this.chars, this.lines, this.errors, strict, trace);\n    isParsed = true;\n  };\n  // Translate the SABNF grammar syntax into the opcodes that will guide the parser for this grammar.\n  this.translate = function translate() {\n    if (!isParsed) {\n      throw new Error(`${thisFileName}grammar not scanned and parsed`);\n    }\n    const ret = parser.semantic(this.chars, this.lines, this.errors);\n    if (this.errors.length === 0) {\n      this.rules = ret.rules;\n      this.udts = ret.udts;\n      lineMap = ret.lineMap;\n      isTranslated = true;\n    }\n  };\n  // Compute the attributes of each rule.\n  this.attributes = function attrs() {\n    if (!isTranslated) {\n      throw new Error(`${thisFileName}grammar not scanned, parsed and translated`);\n    }\n    attributeErrors = attributes(this.rules, this.udts, lineMap, this.errors);\n    haveAttributes = true;\n    return attributeErrors;\n  };\n  // This function will perform the full suite of steps required to generate a parser grammar object\n  // from the input SABNF grammar.\n  this.generate = function generate(strict) {\n    this.lines = scanner(this.chars, this.errors, strict);\n    if (this.errors.length) {\n      return;\n    }\n    parser.syntax(this.chars, this.lines, this.errors, strict);\n    if (this.errors.length) {\n      return;\n    }\n    const ret = parser.semantic(this.chars, this.lines, this.errors);\n    if (this.errors.length) {\n      return;\n    }\n    this.rules = ret.rules;\n    this.udts = ret.udts;\n    lineMap = ret.lineMap;\n\n    attributeErrors = attributes(this.rules, this.udts, lineMap, this.errors);\n    haveAttributes = true;\n  };\n  // Display the rules.\n  // Must scan, parse and translate before calling this function, otherwise there are no rules to display.\n  // - order\n  //      - \"index\" or \"i\", index order (default)\n  //      - \"alpha\" or \"a\", alphabetical order\n  //      - none of above, index order (default)\n  this.displayRules = function displayRules(order = 'index') {\n    if (!isTranslated) {\n      throw new Error(`${thisFileName}grammar not scanned, parsed and translated`);\n    }\n    return showRules(this.rules, this.udts, order);\n  };\n  // Display the rule dependencies.\n  // Must scan, parse, translate and compute attributes before calling this function.\n  // Otherwise the rule dependencies are not known.\n  // - order\n  //      - \"index\" or \"i\", index order (default)\n  //      - \"alpha\" or \"a\", alphabetical order\n  //      - \"type\" or \"t\", ordered by type (alphabetical within each type/group)\n  //      - none of above, index order (default)\n  this.displayRuleDependencies = function displayRuleDependencies(order = 'index') {\n    if (!haveAttributes) {\n      throw new Error(`${thisFileName}no attributes - must be preceeded by call to attributes()`);\n    }\n    return showRuleDependencies(order);\n  };\n  // Display the attributes.\n  // Must scan, parse, translate and compute attributes before calling this function.\n  // - order\n  //      - \"index\" or \"i\", index order (default)\n  //      - \"alpha\" or \"a\", alphabetical order\n  //      - \"type\" or \"t\", ordered by type (alphabetical within each type/group)\n  //      - none of above, type order (default)\n  this.displayAttributes = function displayAttributes(order = 'index') {\n    if (!haveAttributes) {\n      throw new Error(`${thisFileName}no attributes - must be preceeded by call to attributes()`);\n    }\n    if (attributeErrors) {\n      showAttributeErrors(order);\n    }\n    return showAttributes(order);\n  };\n  this.displayAttributeErrors = function displayAttributeErrors() {\n    if (!haveAttributes) {\n      throw new Error(`${thisFileName}no attributes - must be preceeded by call to attributes()`);\n    }\n    return showAttributeErrors();\n  };\n  // Returns a parser grammar object constructor function as a JavaScript string.\n  // This object can then be used to construct a parser.\n  this.toSource = function toSource(name) {\n    if (!haveAttributes) {\n      throw new Error(`${thisFileName}can't generate parser source - must be preceeded by call to attributes()`);\n    }\n    if (attributeErrors) {\n      throw new Error(`${thisFileName}can't generate parser source - attributes have ${attributeErrors} errors`);\n    }\n    return parser.generateSource(this.chars, this.lines, this.rules, this.udts, name);\n  };\n  // Returns a parser grammar object.\n  // This grammar object may be used by the application to construct a parser.\n  this.toObject = function toObject() {\n    if (!haveAttributes) {\n      throw new Error(`${thisFileName}can't generate parser source - must be preceeded by call to attributes()`);\n    }\n    if (attributeErrors) {\n      throw new Error(`${thisFileName}can't generate parser source - attributes have ${attributeErrors} errors`);\n    }\n    return parser.generateObject(this.sabnf, this.rules, this.udts);\n  };\n  // Display errors in text format, suitable for `console.log()`.\n  this.errorsToAscii = function errorsToAsciiFunc() {\n    return errorsToAscii(this.errors, this.lines, this.chars);\n  };\n  // Display errors in HTML format, suitable for web page display.\n  // (`apg-lib.css` required for proper styling)\n  this.errorsToHtml = function errorsToHtmlFunc(title) {\n    return errorsToHtml(this.errors, this.lines, this.chars, title);\n  };\n  // Generate an annotated the SABNF grammar display in text format.\n  this.linesToAscii = function linesToAsciiFunc() {\n    return linesToAscii(this.lines);\n  };\n  // Generate an annotated the SABNF grammar display in HTML format.\n  // (`apg-lib.css` required for proper styling)\n  this.linesToHtml = function linesToHtmlFunc() {\n    return linesToHtml(this.lines);\n  };\n  // This function was only used by apg.html which has been abandoned.\n  /*\n    this.getAttributesObject = function () {\n        return null;\n    };\n    */\n};\n","import { randomBytes } from '@stablelib/random';\nimport { toString } from 'uint8arrays/to-string';\nexport function randomString() {\n    return toString(randomBytes(16), 'base64');\n}\n","import { toString } from 'uint8arrays/to-string';\nimport { fromString } from 'uint8arrays/from-string';\nexport * from './random-string.util.js';\nconst B64 = 'base64pad';\nconst B64_URL = 'base64url';\nexport function encodeBase64(bytes) {\n    return toString(bytes, B64);\n}\nexport function encodeBase64Url(bytes) {\n    return toString(bytes, B64_URL);\n}\nexport function decodeBase64(s) {\n    return fromString(s, B64);\n}\nexport function base64urlToJSON(s) {\n    return JSON.parse(toString(fromString(s, B64_URL)));\n}\nexport function fromDagJWS(jws) {\n    if (jws.signatures.length > 1) throw new Error('Cant convert to compact jws');\n    return `${jws.signatures[0].protected}.${jws.payload}.${jws.signatures[0].signature}`;\n}\n/**\n * Make DID URL from DID and timestamp (= versionTime query)\n */ export function didWithTime(did, atTime) {\n    if (atTime) {\n        const versionTime = atTime.toISOString().split('.')[0] + 'Z';\n        return `${did}?versionTime=${versionTime}`;\n    } else {\n        return did;\n    }\n}\n/**\n * `controller` field of DID Document can be one or multiple strings, if defined.\n * Here we transform it into array of strings.\n * Potentially it can be an empty array.\n */ export function extractControllers(controllerProperty) {\n    if (controllerProperty) {\n        if (Array.isArray(controllerProperty)) {\n            return controllerProperty;\n        } else {\n            return [\n                controllerProperty\n            ];\n        }\n    } else {\n        return [];\n    }\n}\n","import { Resolver } from 'did-resolver';\nimport { createJWE, verifyJWS, resolveX25519Encrypters } from 'did-jwt';\nimport { encodePayload, prepareCleartext, decodeCleartext } from 'dag-jose-utils';\nimport { RPCClient } from 'rpc-utils';\nimport { CID } from 'multiformats/cid';\nimport { CacaoBlock, Cacao } from '@didtools/cacao';\nimport { getEIP191Verifier } from '@didtools/pkh-ethereum';\nimport { fromDagJWS, encodeBase64, base64urlToJSON, decodeBase64, encodeBase64Url, randomString, didWithTime, extractControllers } from './utils.js';\n// Eth Verifier default for CACAO\nconst verifiers = {\n    ...getEIP191Verifier()\n};\nfunction isResolver(resolver) {\n    return 'registry' in resolver && 'cache' in resolver;\n}\n/**\n * Interact with DIDs.\n */ export class DID {\n    /**\n   *  Get attached capability\n   */ get capability() {\n        if (!this._capability) {\n            throw new Error('DID has no capability attached');\n        }\n        return this._capability;\n    }\n    /**\n   * Check if the DID has a capability attached\n   */ get hasCapability() {\n        return this._capability != null;\n    }\n    /**\n   * Get parent DID, parent DID is the capability issuer\n   */ get parent() {\n        if (!this._parentId) {\n            throw new Error('DID has no parent DID');\n        }\n        return this._parentId;\n    }\n    /**\n   * Check if DID has parent DID\n   */ get hasParent() {\n        return this._parentId != null;\n    }\n    /**\n   * Get the DID identifier of the user.\n   */ get id() {\n        if (this._id == null) {\n            throw new Error('DID is not authenticated');\n        }\n        return this._id;\n    }\n    /**\n   * Check if user is authenticated.\n   */ get authenticated() {\n        return this._id != null;\n    }\n    /**\n   * Attach a capability to the DID instance\n   * @param cap The capability to attach\n   * @returns A new DID instance with the capability attached\n   */ withCapability(cap) {\n        return new DID({\n            provider: this._client?.connection,\n            resolver: this._resolver,\n            capability: cap,\n            parent: this._parentId\n        });\n    }\n    /**\n   * Set the DID provider of this instance.\n   * Only callable if provider not already set.\n   *\n   * @param provider    The DIDProvider to use\n   */ setProvider(provider) {\n        if (this._client == null) {\n            this._client = new RPCClient(provider);\n        } else if (this._client.connection !== provider) {\n            throw new Error('A different provider is already set, create a new DID instance to use another provider');\n        }\n    }\n    /**\n   * Set the DID-resolver user by this instance\n   *\n   * @param resolver            Either a Resolver instance or an object with specific resolvers\n   * @param resolverOptions     Options to use for the created resolver. Will be ignored if a Resolver instance is passed\n   */ setResolver(resolver, resolverOptions) {\n        this._resolver = isResolver(resolver) ? resolver : new Resolver(resolver, resolverOptions);\n    }\n    /**\n   * Authenticate the user.\n   */ async authenticate({ provider , paths =[] , aud  } = {}) {\n        if (provider != null) {\n            this.setProvider(provider);\n        }\n        if (this._client == null) {\n            throw new Error('No provider available');\n        }\n        const nonce = randomString();\n        const jws = await this._client.request('did_authenticate', {\n            nonce,\n            aud,\n            paths\n        });\n        const { kid  } = await this.verifyJWS(jws);\n        const payload = base64urlToJSON(jws.payload);\n        if (!kid.includes(payload.did)) throw new Error('Invalid authencation response, kid mismatch');\n        if (payload.nonce !== nonce) throw new Error('Invalid authencation response, wrong nonce');\n        if (payload.aud !== aud) throw new Error('Invalid authencation response, wrong aud');\n        if (payload.exp < Date.now() / 1000) throw new Error('Invalid authencation response, expired');\n        this._id = payload.did;\n        return this._id;\n    }\n    /**\n   * Create a JWS encoded signature over the given payload.\n   * Will be signed by the currently authenticated DID.\n   *\n   * @param payload             The payload to sign\n   * @param options             Optional parameters\n   */ async createJWS(payload, options = {}) {\n        if (this._client == null) throw new Error('No provider available');\n        if (this._id == null) throw new Error('DID is not authenticated');\n        if (this._capability) {\n            const exp = this._capability.p.exp;\n            if (exp && Date.parse(exp) < Date.now()) {\n                throw new Error('Capability is expired, cannot create a valid signature');\n            }\n            const cacaoBlock = await CacaoBlock.fromCacao(this._capability);\n            const capCID = CID.asCID(cacaoBlock.cid);\n            if (!capCID) {\n                throw new Error(`Capability CID of the JWS cannot be set to the capability payload cid as they are incompatible`);\n            }\n            options.protected = options.protected || {};\n            options.protected.cap = `ipfs://${capCID?.toString()}`;\n        }\n        const { jws  } = await this._client.request('did_createJWS', {\n            did: this._id,\n            ...options,\n            payload\n        });\n        return jws;\n    }\n    /**\n   * Create an IPFS compatibe DagJWS encoded signature over the given payload.\n   * Will be signed by the currently authenticated DID.\n   *\n   * @param payload             The payload to sign, may include ipld links\n   * @param options             Optional parameters\n   */ async createDagJWS(payload, options = {}) {\n        const { cid , linkedBlock  } = await encodePayload(payload);\n        const payloadCid = encodeBase64Url(cid.bytes);\n        Object.assign(options, {\n            linkedBlock: encodeBase64(linkedBlock)\n        });\n        const jws = await this.createJWS(payloadCid, options);\n        const compatibleCID = CID.asCID(cid);\n        if (!compatibleCID) {\n            throw new Error('CID of the JWS cannot be set to the encoded payload cid as they are incompatible');\n        }\n        jws.link = compatibleCID;\n        if (this._capability) {\n            const cacaoBlock = await CacaoBlock.fromCacao(this._capability);\n            return {\n                jws,\n                linkedBlock,\n                cacaoBlock: cacaoBlock.bytes\n            };\n        }\n        return {\n            jws,\n            linkedBlock\n        };\n    }\n    /**\n   * Verify a JWS. Uses the 'kid' in the header as the way to resolve\n   * the author public key.\n   *\n   * @param jws                 The JWS to verify\n   * @param options             Optional arguments for verification\n   * @returns                   Information about the signed JWS\n   */ async verifyJWS(jws, options = {}) {\n        options = Object.assign({\n            verifiers\n        }, options);\n        if (typeof jws !== 'string') jws = fromDagJWS(jws);\n        const kid = base64urlToJSON(jws.split('.')[0]).kid;\n        if (!kid) throw new Error('No \"kid\" found in jws');\n        const didResolutionResult = await this.resolve(kid);\n        const timecheckEnabled = !options.disableTimecheck;\n        if (timecheckEnabled) {\n            const nextUpdate = didResolutionResult.didDocumentMetadata?.nextUpdate;\n            if (nextUpdate) {\n                // This version of the DID document has been revoked. Check if the JWS\n                // was signed before the revocation happened.\n                const phaseOutMS = options.revocationPhaseOutSecs ? options.revocationPhaseOutSecs * 1000 : 0;\n                const revocationTime = new Date(nextUpdate).valueOf() + phaseOutMS;\n                const isEarlier = options.atTime && options.atTime.getTime() < revocationTime;\n                const isLater = !isEarlier;\n                if (isLater) {\n                    // Do not allow using a key _after_ it is being revoked\n                    throw new Error(`invalid_jws: signature authored with a revoked DID version: ${kid}`);\n                }\n            }\n            // Key used before `updated` date\n            const updated = didResolutionResult.didDocumentMetadata?.updated;\n            if (updated && options.atTime && options.atTime.getTime() < new Date(updated).valueOf()) {\n                throw new Error(`invalid_jws: signature authored before creation of DID version: ${kid}`);\n            }\n        }\n        const signerDid = didResolutionResult.didDocument?.id;\n        if (options.issuer && options.issuer === options.capability?.p.iss && signerDid === options.capability.p.aud) {\n            if (!options.verifiers) throw new Error('Registered verifiers needed for CACAO');\n            await Cacao.verify(options.capability, {\n                disableExpirationCheck: options.disableTimecheck,\n                atTime: options.atTime ? options.atTime : undefined,\n                revocationPhaseOutSecs: options.revocationPhaseOutSecs,\n                verifiers: options.verifiers ?? {}\n            });\n        } else if (options.issuer && options.issuer !== signerDid) {\n            const issuerUrl = didWithTime(options.issuer, options.atTime);\n            const issuerResolution = await this.resolve(issuerUrl);\n            const controllerProperty = issuerResolution.didDocument?.controller;\n            const controllers = extractControllers(controllerProperty);\n            if (options.capability?.s && options.capability.p.aud === signerDid && controllers.includes(options.capability.p.iss)) {\n                await Cacao.verify(options.capability, {\n                    atTime: options.atTime ? options.atTime : undefined,\n                    revocationPhaseOutSecs: options.revocationPhaseOutSecs,\n                    verifiers: options.verifiers ?? {}\n                });\n            } else {\n                const signerIsController = signerDid ? controllers.includes(signerDid) : false;\n                if (!signerIsController) {\n                    throw new Error(`invalid_jws: not a valid verificationMethod for issuer: ${kid}`);\n                }\n            }\n        }\n        const publicKeys = didResolutionResult.didDocument?.verificationMethod || [];\n        // verifyJWS will throw an error if the signature is invalid\n        verifyJWS(jws, publicKeys);\n        let payload;\n        try {\n            payload = base64urlToJSON(jws.split('.')[1]);\n        } catch (e) {\n        // If an error is thrown it means that the payload is a CID.\n        }\n        return {\n            kid,\n            payload,\n            didResolutionResult\n        };\n    }\n    /**\n   * Create a JWE encrypted to the given recipients.\n   *\n   * @param cleartext           The cleartext to be encrypted\n   * @param recipients          An array of DIDs\n   * @param options             Optional parameters\n   */ async createJWE(cleartext, recipients, options = {}) {\n        const encrypters = await resolveX25519Encrypters(recipients, this._resolver);\n        return createJWE(cleartext, encrypters, options.protectedHeader, options.aad);\n    }\n    /**\n   * Create an IPFS compatibe DagJWE encrypted to the given recipients.\n   *\n   * @param cleartext           The cleartext to be encrypted, may include ipld links\n   * @param recipients          An array of DIDs\n   * @param options             Optional parameters\n   */ async createDagJWE(cleartext, recipients, options = {}) {\n        const preparedCleartext = await prepareCleartext(cleartext);\n        return this.createJWE(preparedCleartext, recipients, options);\n    }\n    /**\n   * Try to decrypt the given JWE with the currently authenticated user.\n   *\n   * @param jwe                 The JWE to decrypt\n   * @param options             Optional parameters\n   */ async decryptJWE(jwe, options = {}) {\n        if (this._client == null) throw new Error('No provider available');\n        if (this._id == null) throw new Error('DID is not authenticated');\n        const { cleartext  } = await this._client.request('did_decryptJWE', {\n            did: this._id,\n            ...options,\n            jwe\n        });\n        return decodeBase64(cleartext);\n    }\n    /**\n   * Try to decrypt the given DagJWE with the currently authenticated user.\n   *\n   * @param jwe                 The JWE to decrypt\n   * @returns                   An ipld object\n   */ async decryptDagJWE(jwe) {\n        const bytes = await this.decryptJWE(jwe);\n        return decodeCleartext(bytes);\n    }\n    /**\n   * Resolve the DID Document of the given DID.\n   *\n   * @param didUrl              The DID to resolve\n   */ async resolve(didUrl) {\n        const result = await this._resolver.resolve(didUrl);\n        if (result.didResolutionMetadata.error) {\n            const { error , message  } = result.didResolutionMetadata;\n            const maybeMessage = message ? `, ${message}` : '';\n            throw new Error(`Failed to resolve ${didUrl}: ${error}${maybeMessage}`);\n        }\n        return result;\n    }\n    constructor({ provider , resolver ={} , resolverOptions , capability , parent  } = {}){\n        if (provider != null) {\n            this._client = new RPCClient(provider);\n        }\n        if (capability) {\n            this._capability = capability;\n            this._parentId = this._capability.p.iss;\n            if (parent && this._parentId !== parent) throw new Error('Capability issuer and parent not equal');\n        } else if (parent) {\n            this._parentId = parent;\n        }\n        this.setResolver(resolver, resolverOptions);\n    }\n}\n","import IdentityProvider from './interface.js'\nimport * as u8a from 'uint8arrays'\nimport { DID } from 'dids'\n\nconst TYPE = 'DID'\n\nclass DIDIdentityProvider extends IdentityProvider {\n  constructor ({ didProvider }) {\n    super()\n    this.did = new DID({\n      resolver: DIDIdentityProvider.did._resolver,\n      provider: didProvider\n    })\n  }\n\n  static get type () {\n    return TYPE\n  }\n\n  async getId ({ space }) {\n    if (!this.did.authenticated) await this.did.authenticate()\n    return this.did.id\n  }\n\n  async signIdentity (data, { space }) {\n    if (!this.did.authenticated) await this.did.authenticate()\n    const payload = u8a.toString(u8a.fromString(data, 'base16'), 'base64url')\n    const jws = await this.did.createJWS(payload)\n    // encode as JWS with detached payload\n    return `${jws.signatures[0].protected}..${jws.signatures[0].signature}`\n  }\n\n  static setDIDResolver (resolver) {\n    if (!this.did) {\n      this.did = new DID({ resolver })\n    } else {\n      this.did.setResolver(resolver)\n    }\n  }\n\n  static async verifyIdentity (identity) {\n    if (!this.did) {\n      throw new Error('The DID resolver must first be set with setDIDResolver()')\n    }\n    const data = identity.publicKey + identity.signatures.id\n    try {\n      const payload = u8a.toString(u8a.fromString(data, 'base16'), 'base64url')\n      const [header, signature] = identity.signatures.publicKey.split('..')\n      const jws = [header, payload, signature].join('.')\n      await this.did.verifyJWS(jws)\n    } catch (e) {\n      return false\n    }\n    return true\n  }\n}\n\nexport default DIDIdentityProvider\n","import IdentityProvider from './interface.js'\nimport { Wallet, verifyMessage } from '@ethersproject/wallet'\nconst type = 'ethereum'\n\nclass EthIdentityProvider extends IdentityProvider {\n  constructor (options = {}) {\n    super()\n    this.wallet = options.wallet\n  }\n\n  // Returns the type of the identity provider\n  static get type () { return type }\n\n  // Returns the signer's id\n  async getId (options = {}) {\n    if (!this.wallet) {\n      this.wallet = await this._createWallet(options)\n    }\n    return this.wallet.getAddress()\n  }\n\n  // Returns a signature of pubkeysignature\n  async signIdentity (data, options = {}) {\n    const wallet = this.wallet\n    if (!wallet) { throw new Error('wallet is required') }\n\n    return wallet.signMessage(data)\n  }\n\n  static async verifyIdentity (identity) {\n    // Verify that identity was signed by the id\n    const signerAddress = verifyMessage(identity.publicKey + identity.signatures.id, identity.signatures.publicKey)\n    return (signerAddress === identity.id)\n  }\n\n  async _createWallet (options = {}) {\n    if (options.mnemonicOpts) {\n      if (!options.mnemonicOpts.mnemonic) {\n        throw new Error('mnemonic is required')\n      }\n      return Wallet.fromMnemonic(options.mnemonicOpts.mnemonic, options.mnemonicOpts.path, options.mnemonicOpts.wordlist)\n    }\n    if (options.encryptedJsonOpts) {\n      if (!options.encryptedJsonOpts.json) {\n        throw new Error('encrypted json is required')\n      }\n      if (!options.encryptedJsonOpts.password) {\n        throw new Error('password for encrypted json is required')\n      }\n      return Wallet.fromEncryptedJson(options.encryptedJsonOpts.json, options.encryptedJsonOpts.password, options.encryptedJsonOpts.progressCallback)\n    }\n    return Wallet.createRandom()\n  }\n}\n\nexport default EthIdentityProvider\n","import Identity from './identity.js'\nimport IdentityProvider from './identity-providers/interface.js'\nimport OrbitDBIdentityProvider from './identity-providers/orbitdb.js'\nimport DIDIdentityProvider from './identity-providers/did.js'\nimport EthIdentityProvider from './identity-providers/ethereum.js'\nimport Keystore from 'orbit-db-keystore'\nimport LRU from 'lru'\nimport path from 'path'\n\nconst defaultType = 'orbitdb'\nconst identityKeysPath = path.join('./orbitdb', 'identity', 'identitykeys')\n\nconst supportedTypes = {\n  orbitdb: OrbitDBIdentityProvider,\n  [DIDIdentityProvider.type]: DIDIdentityProvider,\n  [EthIdentityProvider.type]: EthIdentityProvider\n}\n\nconst getHandlerFor = (type) => {\n  if (!Identities.isSupported(type)) {\n    throw new Error(`IdentityProvider type '${type}' is not supported`)\n  }\n  return supportedTypes[type]\n}\n\nclass Identities {\n  constructor (options) {\n    this._keystore = options.keystore\n    this._signingKeystore = options.signingKeystore || this._keystore\n    this._knownIdentities = options.cache || new LRU(options.cacheSize || 100)\n  }\n\n  static get IdentityProvider () { return IdentityProvider }\n\n  get keystore () { return this._keystore }\n\n  get signingKeystore () { return this._signingKeystore }\n\n  async sign (identity, data) {\n    const signingKey = await this.keystore.getKey(identity.id)\n    if (!signingKey) {\n      throw new Error('Private signing key not found from Keystore')\n    }\n    const sig = await this.keystore.sign(signingKey, data)\n    return sig\n  }\n\n  async verify (signature, publicKey, data, verifier = 'v1') {\n    return this.keystore.verify(signature, publicKey, data, verifier)\n  }\n\n  async createIdentity (options = {}) {\n    const keystore = options.keystore || this.keystore\n    const type = options.type || defaultType\n    const identityProvider = type === defaultType ? new OrbitDBIdentityProvider(options.signingKeystore || keystore) : new (getHandlerFor(type))(options)\n    const id = await identityProvider.getId(options)\n\n    if (options.migrate) {\n      await options.migrate({ targetStore: keystore._store, targetId: id })\n    }\n    const { publicKey, idSignature } = await this.signId(id)\n    const pubKeyIdSignature = await identityProvider.signIdentity(publicKey + idSignature, options)\n    return new Identity(id, publicKey, idSignature, pubKeyIdSignature, type, this)\n  }\n\n  async signId (id) {\n    const keystore = this.keystore\n    const key = await keystore.getKey(id) || await keystore.createKey(id)\n    const publicKey = keystore.getPublic(key)\n    const idSignature = await keystore.sign(key, id)\n    return { publicKey, idSignature }\n  }\n\n  async verifyIdentity (identity) {\n    if (!Identity.isIdentity(identity)) {\n      return false\n    }\n\n    const knownID = this._knownIdentities.get(identity.signatures.id)\n    if (knownID) {\n      return identity.id === knownID.id &&\n             identity.publicKey === knownID.publicKey &&\n             identity.signatures.id === knownID.signatures.id &&\n             identity.signatures.publicKey === knownID.signatures.publicKey\n    }\n\n    const verifyIdSig = await this.keystore.verify(\n      identity.signatures.id,\n      identity.publicKey,\n      identity.id\n    )\n    if (!verifyIdSig) return false\n\n    const IdentityProvider = getHandlerFor(identity.type)\n    const verified = await IdentityProvider.verifyIdentity(identity)\n    if (verified) {\n      this._knownIdentities.set(identity.signatures.id, Identity.toJSON(identity))\n    }\n\n    return verified\n  }\n\n  static async verifyIdentity (identity) {\n    if (!Identity.isIdentity(identity)) {\n      return false\n    }\n\n    const verifyIdSig = await Keystore.verify(\n      identity.signatures.id,\n      identity.publicKey,\n      identity.id\n    )\n\n    if (!verifyIdSig) return false\n\n    const IdentityProvider = getHandlerFor(identity.type)\n    return IdentityProvider.verifyIdentity(identity)\n  }\n\n  static async createIdentity (options = {}) {\n    if (!options.keystore) {\n      options.keystore = new Keystore(options.identityKeysPath || identityKeysPath)\n    }\n    if (!options.signingKeystore) {\n      if (options.signingKeysPath) {\n        options.signingKeystore = new Keystore(options.signingKeysPath)\n      } else {\n        options.signingKeystore = options.keystore\n      }\n    }\n    await options.keystore.open()\n    await options.signingKeystore.open()\n    options = Object.assign({}, { type: defaultType }, options)\n    const identities = new Identities(options)\n    return identities.createIdentity(options)\n  }\n\n  static isSupported (type) {\n    return Object.keys(supportedTypes).includes(type)\n  }\n\n  static addIdentityProvider (IdentityProvider) {\n    if (!IdentityProvider) {\n      throw new Error('IdentityProvider class needs to be given as an option')\n    }\n\n    if (!IdentityProvider.type ||\n      typeof IdentityProvider.type !== 'string') {\n      throw new Error('Given IdentityProvider class needs to implement: static get type() { /* return a string */ }.')\n    }\n\n    supportedTypes[IdentityProvider.type] = IdentityProvider\n  }\n\n  static removeIdentityProvider (type) {\n    delete supportedTypes[type]\n  }\n}\n\nexport default Identities\n","import { Level } from 'level'\nimport * as fs from 'fs'\n\n// Should work for all abstract-leveldown compliant stores\n\n/*\n * createIfMissing (boolean, default: true): If true, will initialise an empty database at the specified location if one doesn't already exist. If false and a database doesn't exist you will receive an error in your open() callback and your database won't open.\n *\n * errorIfExists (boolean, default: false): If true, you will receive an error in your open() callback if the database exists at the specified location.\n *\n * compression (boolean, default: true): If true, all compressible data will be run through the Snappy compression algorithm before being stored. Snappy is very fast and shouldn't gain much speed by disabling so leave this on unless you have good reason to turn it off.\n *\n * cacheSize (number, default: 8 * 1024 * 1024 = 8MB): The size (in bytes) of the in-memory LRU cache with frequently used uncompressed block contents.\n */\n\nclass Storage {\n  constructor (storage, options = {}) {\n    const defaults = {\n      createIfMissing: true,\n      errorIfExists: false,\n      compression: true,\n      cacheSize: 8 * 1024 * 1024\n    }\n\n    this.storage = storage\n\n    // TODO: we can probably remove all of the below as they're related\n    // to the older versions of leveldb\n    this.preCreate = options.preCreate ? options.preCreate : () => {}\n\n    const leveldownOptions = Object.assign({}, options, defaults)\n    delete leveldownOptions.preCreate\n    this.options = { down: leveldownOptions }\n  }\n\n  async createStore (directory = './orbitdb', options = {}) {\n    // TODO: we can probably remove the two lines below as they're\n    // related to older versions of leveldb\n    this.options.up = options\n    await this.preCreate(directory, this.options)\n\n    const db = new Level(directory, options)\n    await db.open()\n\n    return db\n  }\n\n  async destroy (store) {\n    if (!this.storage || !this.storage.destroy) return\n\n    await this.storage.destroy(store._db.location)\n  }\n\n  async preCreate (directory, options) {} // to be overridden\n}\n\nexport default (storage, options) => new Storage(storage, options)\n","import {create} from 'ipfs'\nimport OrbitDb from 'orbit-db'\n\n// if (globalThis && globalThis.process && globalThis.process.env)\n// \tglobalThis.process.env.LIBP2P_FORCE_PNET = false;\n\nconst ipfsConfig = {\n  //preload: { enabled: false }, // disables the use of so-called \"pre-load\" IPFS nodes. These nodes exist to help load balance the global network and prevent DDoS. However, these nodes can go down and cause errors. Since we are only working offline for now, we include this line to disable them.\n  //repo: '/minder/0.0', //designates the path of the repo in Node.js only. In the browser, you can actually remove this line. The default setting is a folder called .jsipfs in your home directory.\n  relay: { enabled: true, hop: { enabled: true, active: true } }, //sets up a your node as a \"circuit relay\", which means that others will be able to \"hop\" through your node to connect to your peers, and your node will hop over others to do the same.\n  // config: {\n  //   Addresses: {\n  //     Swarm: [\n  //       // Use IPFS dev signal server\n  //       // Websocket:\n  //       // '/dns4/ws-star-signal-1.servep2p.com/tcp/443/wss/p2p-websocket-star',\n  //       // '/dns4/ws-star-signal-2.servep2p.com/tcp/443/wss/p2p-websocket-star',\n  //       // '/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star',\n  //       // WebRTC:\n  //       // '/dns4/star-signal.cloud.ipfs.team/wss/p2p-webrtc-star',\n  //       '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star/',\n  //       '/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star/',\n  //       '/dns4/webrtc-star.discovery.libp2p.io/tcp/443/wss/p2p-webrtc-star/',\n  //       '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star/',\n  //       '/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star/',\n  //       '/dns4/secure-beyond-12878.herokuapp.com/tcp/443/wss/p2p-webrtc-star/',\n  //       // Use local signal server\n  //       // '/ip4/0.0.0.0/tcp/9090/wss/p2p-webrtc-star',\n  //     ]\n  //   },\n  // }\n}\n\n// Configuration for the database\nconst dbConfig = {\n  // If database doesn't exist, create it?\n  create: true, // TODO how to not!?\n  // Wait to load from the network?\n  //sync: false,\n  // Load only the local version of the database\n  //localOnly: true,\n  // Allow anyone to write to the database,\n  // otherwise only the creator of the database can write\n  accessController: {\n    write: ['*'],\n  }\n}\n\n// const store = async (name) => {\n//   // Create IPFS instance\n//   const ipfs = await create(ipfsConfig)\n//   // Create an OrbitDB instance\n//   const orbitdb = await OrbitDb.createInstance(ipfs)\n//   // Open (or create) database\n//   const db = await orbitdb.log(name, dbConfig)\n\n//   // Done\n//   return db\n// }\n\nexport async function startOrbit(dbName) {\n  \n  const ipfs = await create(ipfsConfig)\n  const orbitdb = await OrbitDb.createInstance(ipfs)\n  \n  // Create / Open a database\n  const db = await orbitdb.log(dbName, dbConfig)\n  await db.load()\n  console.log(\"OrbitDB database started at \", db.address.toString())\n\n  // Listen for updates from peers\n  // db.events.on(\"replicated\", address => {\n  //   console.log(db.iterator({ limit: -1 }).collect())\n  // })\n\n  // Add an entry\n  // const hash = await db.add(\"@0+s0\t:lww ;.❃\")\n  // console.log(hash)\n\n  // Query\n  //\n  //console.log(JSON.stringify(result, null, 2))\n\n  // db.events.on('peer', (peer) => {\n  //   console.log(\"New peer connected!\", peer);\n  // } )\n\n  db.events.on('write', (address, entry, heads) => {\n    console.log(\"Wrote entry to database. \", entry);\n  } )\n\n  db.events.on('ready', (dbname, heads) => {\n    console.log(\"Loaded locally cached database \", dbname);\n  } )\n\n  return db;\n}\n"],"names":["EventIndex","oplog","EventStore","Store","ipfs","id","dbname","options","address","hash","payload","data","messages","currentIndex","item","opts","amount","events","result","ops","inclusive","index","e","startIndex","FeedIndex","f","handled","FeedStore","operation","KeyValueIndex","key","values","i","KeyValueStore","CounterIndex","Counter","getCounter","mergeToIndex","_counters","CounterStore","counter","DocumentIndex","fullOp","onProgressCallback","reducer","idx","doc","replaceAll","str","search","replacement","DocumentStore","caseSensitive","terms","mapper","filter","docs","pMap","d","value","logger","Logger","maxTopicsOpen","topicsOpenCount","IPFSPubsub","topic","onMessageCallback","onNewPeerCallback","topicMonitor","PeerMonitor","peer","message","Buffer","topics","pSeries","content","topicId","subscription","Cache","store","EC","pkg","verify","signature","publicKey","res","ec","unmarshal","crypto.keys.supportedKeys","isValid","msg","sig","pubKey","verifiers","v0","v1","verifier","v","createStore","path","fs","Level","verifiedCache","LRU","Keystore","input","hasKey","storedKey","entropy","privKey","buf","keys","decompressedKey","secp256k1","cachedKey","deserializedKey","formats","decompress","format","cached","compare","match","verified","isDefined","arg","Identity","idSignature","pubKeyIdSignature","type","provider","identity","IdentityProvider","OrbitDBIdentityProvider","keystore","identifiers","style","thisThis","this","NON_SHORTEST","TRAILING","RANGE","ILL_FORMED","mask","ascii","base64chars","base64codes","char","transformers","chars","bytes","u","bom","bytes2","b1","b2","x","bytes3","b3","bytes4","b4","c","i1","i2","i3","inc","len","TRUE","at","h","l","j","high","low","digit","b","isHex","hex","getx","bufArg","ret","getu","getU","error","CR","LF","lfchars","n","tail","units","base64","codes","validate","val","lineLen","buildLine","c1","c2","c3","c4","trans","require$$0","UTF8","UTF16","UTF16BE","UTF16LE","UTF32","UTF32BE","UTF32LE","UINT7","ASCII","BINARY","UINT8","UINT16","UINT16LE","UINT16BE","UINT32","UINT32LE","UINT32BE","ESCAPED","STRING","bom8","src","bom16","bom32","validateSrc","getType","typeArg","validateDst","fix","rem","encode","decode","converter","dst","srcType","srcData","dstType","emitcss","require$$1","emitCss","require$$2","require$$3","thisFileName","getBounds","length","begArg","end","beg","utilities","html","titleArg","title","page","caption","cap","success","state","phraseIndex","phraseLength","string","ch","bounds","isUnicode","ast","utils","that","rules","udts","nodeCount","nodesDefined","nodeCallbacks","stack","records","rulesIn","udtsIn","charsIn","list","lower","callbackIndex","name","thisIndex","thatIndex","callback","record","indent","modeArg","display","mode","xml","depth","rec","obj","circularBuffer","itemIndex","maxListSize","size","fn","listIndex","parser","opExecute","opcodes","charsBegin","charsLength","charsEnd","lookAround","treeDepth","maxTreeDepth","nodeHits","ruleCallbacks","udtCallbacks","syntaxData","maxMatched","limitTreeDepth","limitNodeHits","evaluateRule","ruleIndex","sysData","functionName","evaluateUdt","udtIndex","clear","backRef","init","rule","udt","copy","top","lengthArg","systemData","thisData","lookAroundValue","inLookAround","inLookBehind","initializeAst","initializeTrace","initializeStats","initializeGrammar","grammar","initializeStartRule","startRule","start","initializeInputChars","inputArg","lenArg","initializeCallbacks","func","hits","privateParse","startRuleArg","callbackData","inputChars","inputIndex","inputLength","opALT","opIndex","op","opCAT","astLength","catCharIndex","catPhrase","ulen","plen","opREP","repCharIndex","repPhrase","repCount","validateRnmCallbackResult","charsLeft","down","opRNM","astDefined","savedOpcodes","saveFrame","notLookAround","validateUdtCallbackResult","opUDT","astIndex","opAND","pop","opNOT","opTRG","opTBS","opTLS","code","opABG","opAEN","opBKR","lmcode","frame","insensitive","lmIndex","opBKA","opBKN","opCATBehind","catMatched","opREPBehind","opTRGBehind","opTBSBehind","opTLSBehind","opBKRBehind","lk","stats","totals","ruleStats","udtStats","nameId","sortAlpha","lhs","rhs","sortHits","sortIndex","EmptyStat","incStat","stat","displayRow","displayOpsOnly","displayRules","inputRules","inputUdts","test","trace","circular","MODE_HEX","MODE_DEC","MODE_ASCII","MODE_UNICODE","MAX_PHRASE","MAX_TLS","maxRecords","lastRecord","filteredRecords","recordStack","operatorFilter","ruleFilter","PHRASE_END","PHRASE_CONTINUE","PHRASE_EMPTY","initOperatorFilter","setOperators","set","items","upper","initRuleFilter","setRules","count","max","last","filterOps","filterRecords","offset","anchor","thisLine","thatLine","thatRecord","toTreeObj","nodeOpcode","node","opcode","casetype","modetype","nodePhrase","nodeId","nodeDown","parent","nodeUp","leafNodes","branchCount","walk","branch","root","firstRecord","dummy","lineIndex","num","prev","branchesIncomplete","stringify","htmlHeader","modeName","header","htmlFooter","footer","displayTrg","displayRep","displayTbs","displayTls","charu","charl","base","subPhrase","charsArg","phrase","comma","displayBehind","beg1","len1","beg2","len2","lastchar","spanBehind","spanRemainder","spanend","displayForward","spanAhead","displayAhead","displayNone","htmlTable","lookAhead","lookBehind","line","modearg","modein","nodeExports","require$$4","require$$5","require$$6","require$$7","require$$8","scannerGrammar","ids","semLine","phraseCount","semLineText","semLastLine","semInvalid","semEnd","semLF","semCR","semCRLF","callbacks","scannerCallbacks","scanner","errors","strict","apglib","lines","syntaxCallbacks","topAlt","synFile","synRule","synRuleError","synRuleNameError","synDefinedAsError","synAndOp","synNotOp","synBkaOp","synBknOp","synAbgOp","synAenOp","synBkrOp","synUdtOp","synTlsOpen","synTlsString","synStringTab","synTlsClose","synClsOpen","synClsString","synClsClose","synProsValOpen","synProsValString","synProsValClose","synGroupOpen","synGroupClose","synOptionOpen","synOptionClose","synBasicElementError","synLineEnd","synLineEndError","synRepetition","semanticCallbacks","NameList","decnum","binnum","hexnum","semFile","nameObj","semRule","semRuleLookup","ruleName","semAlternation","semConcatenation","semRepetition","semOptionOpen","semRuleName","semDefined","semIncAlt","semRepOp","semRepMin","semRepMax","semRepMinMax","semAndOp","semNotOp","semRnmOp","semAbgOp","semAenOp","semBkaOp","semBknOp","semBkrOp","semBkrCi","semBkrCs","semBkrUm","semBkrPm","semBkrName","semUdtEmpty","udtName","semUdtNonEmpty","semTlsOp","semTlsCase","semTlsString","semClsOp","semTbsOp","semTrgOp","semDmin","semDmax","semBmin","semBmax","semXmin","semXmax","semDstring","semBstring","semXstring","sabnfGrammar","ApgLib","syn","sem","findLine","charIndex","charLength","translateIndex","map","reduceOpcodes","reducedIndex","source","bkrname","bkrlower","opcodeCount","charCodeMin","charCodeMax","ruleNames","udtNames","alt","cat","rnm","rep","and","not","tls","tbs","trg","bkr","bka","bkn","abg","aen","udtFunc","funcname","ii","thisRule","thisUdt","prefix","stringArg","ruleAttributes","thisFile","isEmptyOnly","attr","isRecursive","isCatNested","attrs","isCatCyclic","isCatLeft","isCatRight","isCatEmpty","isCatFinite","stateArg","iAttr","opCat","childAttrs","opEval","opAlt","opBkr","ruleAttrsEval","opi","attri","temp","truth","tError","fError","showAttr","seq","dep","showLegend","showAttributeErrors","depi","show","ruleIndexes","order","leader","ruleDependencies","scan","ruleCount","ruleDeps","isScanned","rdi","groupCount","rdj","newGroup","startSeg","maxRule","maxUdt","lineLength","pre","toArrow","byArrow","first","udtIndexes","attributes","showAttributes","showRuleDependencies","State","udtCount","recursiveType","a","left","right","lineMap","showRules","thisFuncName","alphaArray","udtAlphaArray","indexArray","udtIndexArray","compRulesAlpha","compUdtsAlpha","api","thisObject","abnfToHtml","CONTROL_BEG","CONTROL_END","INVALID_BEG","INVALID_END","abnfToAscii","linesToAscii","linesToHtml","errorsToHtml","errorArrow","relchar","text","suffix","errorsToAscii","isParsed","isTranslated","haveAttributes","attributeErrors","randomString","toString","randomBytes","B64","B64_URL","encodeBase64","encodeBase64Url","decodeBase64","s","fromString","base64urlToJSON","fromDagJWS","jws","didWithTime","did","atTime","versionTime","extractControllers","controllerProperty","getEIP191Verifier","isResolver","resolver","DID","RPCClient","resolverOptions","Resolver","paths","aud","nonce","kid","exp","cacaoBlock","CacaoBlock","capCID","CID","cid","linkedBlock","encodePayload","payloadCid","compatibleCID","didResolutionResult","nextUpdate","phaseOutMS","revocationTime","updated","signerDid","Cacao","issuerUrl","controllers","publicKeys","verifyJWS","cleartext","recipients","encrypters","resolveX25519Encrypters","createJWE","preparedCleartext","prepareCleartext","jwe","decodeCleartext","didUrl","maybeMessage","capability","TYPE","DIDIdentityProvider","didProvider","space","u8a.toString","u8a.fromString","EthIdentityProvider","wallet","verifyMessage","Wallet","defaultType","identityKeysPath","supportedTypes","getHandlerFor","Identities","signingKey","identityProvider","knownID","Storage","storage","defaults","leveldownOptions","directory","db","Storage$1","ipfsConfig","dbConfig","startOrbit","dbName","create","OrbitDb","entry","heads"],"mappings":"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A,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAAA,EACPA,GAAO;AAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]}